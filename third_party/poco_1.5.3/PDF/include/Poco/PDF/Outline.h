//
// Outline.h
//
// $Id: //poco/Main/PDF/include/Poco/PDF/Outline.h#4 $
//
// Library: PDF
// Package: PDFCore
// Module:  Outline
//
// Definition of the Outline class.
//
// Copyright (c) 2006, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef PDF_Outline_INCLUDED
#define PDF_Outline_INCLUDED


#include "Poco/PDF/PDF.h"
#include "Poco/PDF/Resource.h"
#include "Poco/PDF/Destination.h"


namespace Poco {
namespace PDF {


class PDF_API Outline: public Resource<HPDF_Outline>
	/// A Outline represents a PDF outline resource.
{
public:
	typedef HPDF_Outline Type;

	Outline(HPDF_Doc* pPDF, const HPDF_Outline& outline, const std::string& name = "");
		/// Creates the outline.

	Outline(const Outline& other);
		/// Copy creates the resource.

	~Outline();
		/// Destroys the outline.

	Outline& operator = (const Outline& resource);
		/// Assignment operator.

	void open();
		/// Opens the outline.

	void close();
		/// Closes the outline.

	void destination(const Destination& dest);
		/// Sets the destination for this outline.
};


//
// inlines
//

inline void Outline::open()
{
	HPDF_Outline_SetOpened(handle(), HPDF_TRUE);
}


inline void Outline::close()
{
	HPDF_Outline_SetOpened(handle(), HPDF_FALSE);
}


inline void Outline::destination(const Destination& dest)
{
	HPDF_Outline_SetDestination(handle(), dest);
}


} } // namespace Poco::PDF


#endif // PDF_Outline_INCLUDED
