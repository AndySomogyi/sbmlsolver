//
// ApacheApplication.h
//
// $Id: //poco/1.4/ApacheConnector/include/ApacheApplication.h#2 $
//
// Copyright (c) 2006-2011, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef ApacheConnector_ApacheApplication_INCLUDED
#define ApacheConnector_ApacheApplication_INCLUDED


#include "ApacheRequestHandlerFactory.h"
#include "Poco/Util/Application.h"
#include "Poco/Mutex.h"


class ApacheApplication: public Poco::Util::Application
{
public:
	ApacheApplication();
		/// Creates the ApacheApplication and sets the
		/// ApacheChannel as the root logger channel.

	~ApacheApplication();
		/// Destroys the ApacheApplication.

	void setup();
		/// Initializes the application if called for the first
		/// time; does nothing in later calls.

	ApacheRequestHandlerFactory& factory();
		/// Returns the ApacheRequestHandlerFactory.

	static ApacheApplication& instance();
		/// Returns the application instance.

private:
	bool _ready;
	ApacheRequestHandlerFactory _factory;
	Poco::FastMutex _mutex;
};


//
// inlines
//
inline ApacheRequestHandlerFactory& ApacheApplication::factory()
{
	return _factory;
}


#endif // ApacheConnector_ApacheApplication_INCLUDED
