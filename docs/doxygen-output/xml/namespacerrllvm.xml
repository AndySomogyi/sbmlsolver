<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacerrllvm" kind="namespace" language="C++">
    <compoundname>rrllvm</compoundname>
    <innerclass refid="classrrllvm_1_1AssignmentRuleEvaluator" prot="public">rrllvm::AssignmentRuleEvaluator</innerclass>
    <innerclass refid="classrrllvm_1_1ASTNodeCodeGen" prot="public">rrllvm::ASTNodeCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1ASTNodeCodeGenScalarTicket" prot="public">rrllvm::ASTNodeCodeGenScalarTicket</innerclass>
    <innerclass refid="classrrllvm_1_1ASTNodeFactory" prot="public">rrllvm::ASTNodeFactory</innerclass>
    <innerclass refid="classrrllvm_1_1CodeGen" prot="public">rrllvm::CodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1CodeGenBase" prot="public">rrllvm::CodeGenBase</innerclass>
    <innerclass refid="classrrllvm_1_1EvalConversionFactorCodeGen" prot="public">rrllvm::EvalConversionFactorCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1EvalInitialConditionsCodeGen" prot="public">rrllvm::EvalInitialConditionsCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1EvalRateRuleRatesCodeGen" prot="public">rrllvm::EvalRateRuleRatesCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1EvalReactionRatesCodeGen" prot="public">rrllvm::EvalReactionRatesCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1EvalVolatileStoichCodeGen" prot="public">rrllvm::EvalVolatileStoichCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1Event" prot="public">rrllvm::Event</innerclass>
    <innerclass refid="classrrllvm_1_1EventAssignCodeGen" prot="public">rrllvm::EventAssignCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1EventCodeGenBase" prot="public">rrllvm::EventCodeGenBase</innerclass>
    <innerclass refid="structrrllvm_1_1EventPredicate" prot="public">rrllvm::EventPredicate</innerclass>
    <innerclass refid="classrrllvm_1_1EventQueue" prot="public">rrllvm::EventQueue</innerclass>
    <innerclass refid="classrrllvm_1_1EventTriggerCodeGen" prot="public">rrllvm::EventTriggerCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1FunctionResolver" prot="public">rrllvm::FunctionResolver</innerclass>
    <innerclass refid="classrrllvm_1_1GetBoundarySpeciesAmountCodeGen" prot="public">rrllvm::GetBoundarySpeciesAmountCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetBoundarySpeciesConcentrationCodeGen" prot="public">rrllvm::GetBoundarySpeciesConcentrationCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetBoundarySpeciesInitAmountCodeGen" prot="public">rrllvm::GetBoundarySpeciesInitAmountCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetBoundarySpeciesInitConcentrationCodeGen" prot="public">rrllvm::GetBoundarySpeciesInitConcentrationCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetCompartmentInitVolumeCodeGen" prot="public">rrllvm::GetCompartmentInitVolumeCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetCompartmentVolumeCodeGen" prot="public">rrllvm::GetCompartmentVolumeCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetEventDelayCodeGen" prot="public">rrllvm::GetEventDelayCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetEventPriorityCodeGen" prot="public">rrllvm::GetEventPriorityCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetEventTriggerCodeGen" prot="public">rrllvm::GetEventTriggerCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetEventValueCodeGenBase" prot="public">rrllvm::GetEventValueCodeGenBase</innerclass>
    <innerclass refid="classrrllvm_1_1GetFloatingSpeciesAmountCodeGen" prot="public">rrllvm::GetFloatingSpeciesAmountCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetFloatingSpeciesConcentrationCodeGen" prot="public">rrllvm::GetFloatingSpeciesConcentrationCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetFloatingSpeciesInitAmountCodeGen" prot="public">rrllvm::GetFloatingSpeciesInitAmountCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetFloatingSpeciesInitConcentrationCodeGen" prot="public">rrllvm::GetFloatingSpeciesInitConcentrationCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetGlobalParameterCodeGen" prot="public">rrllvm::GetGlobalParameterCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetGlobalParameterInitValueCodeGen" prot="public">rrllvm::GetGlobalParameterInitValueCodeGen</innerclass>
    <innerclass refid="classrrllvm_1_1GetInitialValueCodeGenBase" prot="public">rrllvm::GetInitialValueCodeGenBase</innerclass>
    <innerclass refid="classrrllvm_1_1GetValueCodeGenBase" prot="public">rrllvm::GetValueCodeGenBase</innerclass>
    <innerclass refid="classrrllvm_1_1Jit" prot="public">rrllvm::Jit</innerclass>
    <innerclass refid="classrrllvm_1_1JitFactory" prot="public">rrllvm::JitFactory</innerclass>
    <innerclass refid="classrrllvm_1_1KineticLawParameterResolver" prot="public">rrllvm::KineticLawParameterResolver</innerclass>
    <innerclass refid="classrrllvm_1_1LLJit" prot="public">rrllvm::LLJit</innerclass>
    <innerclass refid="classrrllvm_1_1LLVMCompiler" prot="public">rrllvm::LLVMCompiler</innerclass>
    <innerclass refid="classrrllvm_1_1LLVMExecutableModel" prot="public">rrllvm::LLVMExecutableModel</innerclass>
    <innerclass refid="structrrllvm_1_1LLVMModelData" prot="public">rrllvm::LLVMModelData</innerclass>
    <innerclass refid="classrrllvm_1_1LLVMModelDataIRBuilderTesting" prot="public">rrllvm::LLVMModelDataIRBuilderTesting</innerclass>
    <innerclass refid="classrrllvm_1_1LLVMModelDataSymbols" prot="public">rrllvm::LLVMModelDataSymbols</innerclass>
    <innerclass refid="classrrllvm_1_1LLVMModelGenerator" prot="public">rrllvm::LLVMModelGenerator</innerclass>
    <innerclass refid="classrrllvm_1_1LLVMModelSymbols" prot="public">rrllvm::LLVMModelSymbols</innerclass>
    <innerclass refid="classrrllvm_1_1LoadSymbolResolver" prot="public">rrllvm::LoadSymbolResolver</innerclass>
    <innerclass refid="classrrllvm_1_1LoadSymbolResolverBase" prot="public">rrllvm::LoadSymbolResolverBase</innerclass>
    <innerclass refid="classrrllvm_1_1ModelDataIRBuilder" prot="public">rrllvm::ModelDataIRBuilder</innerclass>
    <innerclass refid="classrrllvm_1_1ModelGeneratorContext" prot="public">rrllvm::ModelGeneratorContext</innerclass>
    <innerclass refid="classrrllvm_1_1ModelResourceProvider" prot="public">rrllvm::ModelResourceProvider</innerclass>
    <innerclass refid="classrrllvm_1_1Random" prot="public">rrllvm::Random</innerclass>
    <innerclass refid="classrrllvm_1_1SBMLInitialValueSymbolResolver" prot="public">rrllvm::SBMLInitialValueSymbolResolver</innerclass>
    <innerclass refid="classrrllvm_1_1SBMLModelObjectCache" prot="public">rrllvm::SBMLModelObjectCache</innerclass>
    <innerclass refid="classrrllvm_1_1SetValueCodeGenBase" prot="public">rrllvm::SetValueCodeGenBase</innerclass>
    <innerclass refid="classrrllvm_1_1StoreSymbolResolver" prot="public">rrllvm::StoreSymbolResolver</innerclass>
    <innerclass refid="classrrllvm_1_1SymbolForest" prot="public">rrllvm::SymbolForest</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8" prot="public" static="no" strong="no">
        <type></type>
        <name>ModelDataFields</name>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8ad5f3d365043ae5dd77be04b11d65c7e4" prot="public">
          <name>Size</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8aa3aca81df1a84eddcd06ef6e4931a23f" prot="public">
          <name>Flags</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8ab5bccb51c6ab94d2874a57ff97a0fdaa" prot="public">
          <name>Time</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a19eb72693b01b8ab43cc19fb11fec841" prot="public">
          <name>NumIndCompartments</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a3f1875fd05663fc9a19e884b756f3a55" prot="public">
          <name>NumIndFloatingSpecies</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8aea1dc9432c7c28222b943e7136de3661" prot="public">
          <name>NumIndBoundarySpecies</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a3e951bdc051a85ac91bb420b4927feb3" prot="public">
          <name>NumIndGlobalParameters</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a9d4ee8c03106b290d8b33214522dd8cb" prot="public">
          <name>NumRateRules</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a6dff59c242f3695dfe0f44f9b946091f" prot="public">
          <name>NumReactions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8ade0f86bb8c7e1370bb83e3956706764e" prot="public">
          <name>NumInitCompartments</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a7b5391bd13dc53a5d30325335485ae29" prot="public">
          <name>NumInitFloatingSpecies</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a8627a42b7fc674e3487fe8f127956a04" prot="public">
          <name>NumInitBoundarySpecies</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a9603baa2e73594f628eecf88335614b0" prot="public">
          <name>NumInitGlobalParameters</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a695b6fe1bf7a86114a497d2b875075ee" prot="public">
          <name>Stoichiometry</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a86a4fd125ff6330a8f4cf95fe7c6fdd1" prot="public">
          <name>RandomPtr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a8db07edabee3ed7d03a8b4c936e238d8" prot="public">
          <name>NumEvents</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a982a09ddb9b58c201939bac89bf39356" prot="public">
          <name>StateVectorSize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a1e6ab1e8feb301f9c93febe4d7542233" prot="public">
          <name>StateVector</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a56917f1035901474ef2ebe6e1673a5bd" prot="public">
          <name>StateVectorRate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a180785a4b9a495051feba51e799a64ac" prot="public">
          <name>RateRuleRates</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8aa0d3da623d9f52a7d22cf850a5765800" prot="public">
          <name>FloatingSpeciesAmountRates</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8adb749feafe7248e32e380e55a1bb3b85" prot="public">
          <name>CompartmentVolumesAlias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a92fd9de849b0b6bbc0bc2a7f807a8e38" prot="public">
          <name>InitCompartmentVolumesAlias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8af4015ba48943381f5802333d13917aa8" prot="public">
          <name>InitFloatingSpeciesAmountsAlias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8af01e6de8484d0b9fb1c7a3da3f2e00cf" prot="public">
          <name>BoundarySpeciesAmountsAlias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a59b10defda26695fbc2fadaed5c1c073" prot="public">
          <name>InitBoundarySpeciesAmountsAlias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a2812529589c7dc9bb0c99462785db4ad" prot="public">
          <name>GlobalParametersAlias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a683979825aa4fcf896844ec14c04fa88" prot="public">
          <name>InitGlobalParametersAlias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8abb31a2be420784c5883d689c90f4a970" prot="public">
          <name>ReactionRatesAlias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a975a6e408b21af54bfa453f74c8e5468" prot="public">
          <name>RateRuleValuesAlias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a9235d529115d5526001e91b0220d8def" prot="public">
          <name>FloatingSpeciesAmountsAlias</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8ac462484980f0fb0805ac3aee6e4fc841" prot="public">
          <name>CompartmentVolumes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a036d809cc6f23134e9ef5c779051bb3a" prot="public">
          <name>InitCompartmentVolumes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a46c946d39be70e26a7579dd909f51f3b" prot="public">
          <name>InitFloatingSpeciesAmounts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a716f642fcff6d7de41d6af3609b769e8" prot="public">
          <name>BoundarySpeciesAmounts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a530dca9ac1a7bc8fbd7b628c49d6a283" prot="public">
          <name>InitBoundarySpeciesAmounts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a1302b392a0b33557bfb3cfe1a6f3908b" prot="public">
          <name>GlobalParameters</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8ab7d6ad69ac8cc1e2cf64ff38ea81010f" prot="public">
          <name>InitGlobalParameters</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8a502c4cbe42048b4a46b5ba5f5ec263a3" prot="public">
          <name>ReactionRates</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8afb8b3d060f5ce77c02298f5a349ef788" prot="public">
          <name>NotSafe_RateRuleValues</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a318154bee3361ded939b3fcf368adab8aa8f0d7019fb9eea7f56a116628a823f3" prot="public">
          <name>NotSafe_FloatingSpeciesAmounts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="35" column="21" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="35" bodyend="82"/>
      </memberdef>
      <memberdef kind="enum" id="LLVMModelDataSymbols_8h_1a56359a3dc71f6d7451f44e349fec3b81" prot="public" static="no" strong="no">
        <type></type>
        <name>EventAtributes</name>
        <enumvalue id="LLVMModelDataSymbols_8h_1a56359a3dc71f6d7451f44e349fec3b81a9d2ac9d1cb862ab196cb3ccb5ae63ec8" prot="public">
          <name>EventUseValuesFromTriggerTime</name>
          <initializer>= (0x1 &lt;&lt; 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a56359a3dc71f6d7451f44e349fec3b81a9096d5f730f7f63cc720dcf0169861db" prot="public">
          <name>EventInitialValue</name>
          <initializer>= (0x1 &lt;&lt; 1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="LLVMModelDataSymbols_8h_1a56359a3dc71f6d7451f44e349fec3b81acde793a894b740225622bc7b42fd30f4" prot="public">
          <name>EventPersistent</name>
          <initializer>= (0x1 &lt;&lt; 2)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="85" column="1" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="84" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="CodeGenBase_8h_1aef33411a7292811e02a15d64536a4cdd" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>typedef std::vector&lt;std::string&gt; rrllvm::StringVector</definition>
        <argsstring></argsstring>
        <name>StringVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/CodeGenBase.h" line="42" column="21" bodyfile="llvm/CodeGenBase.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="CodeGenBase_8h_1a9859c0ff5a569f2373921e8f94e36309" prot="public" static="no">
        <type>std::pair&lt; std::string, int &gt;</type>
        <definition>typedef std::pair&lt;std::string, int&gt; rrllvm::StringIntPair</definition>
        <argsstring></argsstring>
        <name>StringIntPair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/CodeGenBase.h" line="43" column="19" bodyfile="llvm/CodeGenBase.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="CodeGenBase_8h_1a96e3b7fadd70491848d3ae50aaf00472" prot="public" static="no">
        <type>std::vector&lt; StringIntPair &gt;</type>
        <definition>typedef std::vector&lt;StringIntPair&gt; rrllvm::StringIntVector</definition>
        <argsstring></argsstring>
        <name>StringIntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/CodeGenBase.h" line="44" column="21" bodyfile="llvm/CodeGenBase.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="EvalConversionFactorCodeGen_8h_1a781c0200fa4eaf1730e725cb34e0f781" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* rrllvm::EvalConversionFactorCodeGen_FunctionPtr) (LLVMModelData *)</definition>
        <argsstring>)(LLVMModelData *)</argsstring>
        <name>EvalConversionFactorCodeGen_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/EvalConversionFactorCodeGen.h" line="24" column="13" bodyfile="llvm/EvalConversionFactorCodeGen.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="EvalInitialConditionsCodeGen_8h_1a4fd95d494d9f845562862d6d9490b7a7" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* rrllvm::EvalInitialConditions_FunctionPtr) (LLVMModelData *, size_t)</definition>
        <argsstring>)(LLVMModelData *, size_t)</argsstring>
        <name>EvalInitialConditions_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/EvalInitialConditionsCodeGen.h" line="24" column="9" bodyfile="llvm/EvalInitialConditionsCodeGen.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="EvalRateRuleRatesCodeGen_8h_1afb3aa6316dc13440c519039f5ce1190b" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* rrllvm::EvalRateRuleRates_FunctionPtr) (LLVMModelData *)</definition>
        <argsstring>)(LLVMModelData *)</argsstring>
        <name>EvalRateRuleRates_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/EvalRateRuleRatesCodeGen.h" line="21" column="9" bodyfile="llvm/EvalRateRuleRatesCodeGen.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="EvalReactionRatesCodeGen_8h_1a4f2cce1f5667547b573c385980ebe20d" prot="public" static="no">
        <type>double(*</type>
        <definition>typedef double(* rrllvm::EvalReactionRates_FunctionPtr) (LLVMModelData *)</definition>
        <argsstring>)(LLVMModelData *)</argsstring>
        <name>EvalReactionRates_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/EvalReactionRatesCodeGen.h" line="22" column="9" bodyfile="llvm/EvalReactionRatesCodeGen.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="EvalVolatileStoichCodeGen_8h_1ac34b42f6a579c8cc89cd271a4a65deaf" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* rrllvm::EvalVolatileStoichCodeGen_FunctionPtr) (LLVMModelData *)</definition>
        <argsstring>)(LLVMModelData *)</argsstring>
        <name>EvalVolatileStoichCodeGen_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/EvalVolatileStoichCodeGen.h" line="23" column="13" bodyfile="llvm/EvalVolatileStoichCodeGen.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="EventCodeGenBase_8h_1aa556095cf20843d786cc97b4b15ad5e8" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* rrllvm::EventCodeGenBase_FunctionPtr) (LLVMModelData *, size_t, double *)</definition>
        <argsstring>)(LLVMModelData *, size_t, double *)</argsstring>
        <name>EventCodeGenBase_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/EventCodeGenBase.h" line="28" column="13" bodyfile="llvm/EventCodeGenBase.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="EventTriggerCodeGen_8h_1a4ce4ba6d297bb990c50f46d89ab7c539" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* rrllvm::EventTriggerCodeGen_FunctionPtr) (LLVMModelData *, size_t)</definition>
        <argsstring>)(LLVMModelData *, size_t)</argsstring>
        <name>EventTriggerCodeGen_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/EventTriggerCodeGen.h" line="19" column="13" bodyfile="llvm/EventTriggerCodeGen.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="GetEventValuesCodeGen_8h_1a83ec817d0275137f1bc5b4f402031c55" prot="public" static="no">
        <type>double(*</type>
        <definition>typedef double(* rrllvm::GetEventValueCodeGenBase_FunctionPtr) (LLVMModelData *, size_t)</definition>
        <argsstring>)(LLVMModelData *, size_t)</argsstring>
        <name>GetEventValueCodeGenBase_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/GetEventValuesCodeGen.h" line="28" column="13" bodyfile="llvm/GetEventValuesCodeGen.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="GetEventValuesCodeGen_8h_1a255e36539af18990d906272ff50e2ea9" prot="public" static="no">
        <type>unsigned char(*</type>
        <definition>typedef unsigned char(* rrllvm::GetEventTriggerCodeGen_FunctionPtr) (LLVMModelData *, size_t)</definition>
        <argsstring>)(LLVMModelData *, size_t)</argsstring>
        <name>GetEventTriggerCodeGen_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/GetEventValuesCodeGen.h" line="131" column="22" bodyfile="llvm/GetEventValuesCodeGen.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="GetInitialValueCodeGenBase_8h_1a45c94878c959f394c7a130d8dc855cde" prot="public" static="no">
        <type>double(*</type>
        <definition>typedef double(* rrllvm::GetInitialValueCodeGenBase_FunctionPtr) (LLVMModelData *, size_t)</definition>
        <argsstring>)(LLVMModelData *, size_t)</argsstring>
        <name>GetInitialValueCodeGenBase_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/GetInitialValueCodeGenBase.h" line="25" column="13" bodyfile="llvm/GetInitialValueCodeGenBase.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="GetValueCodeGenBase_8h_1a5138a371d6753a62f5313a759eebb8c2" prot="public" static="no">
        <type>double(*</type>
        <definition>typedef double(* rrllvm::GetValueCodeGenBase_FunctionPtr) (LLVMModelData *, size_t)</definition>
        <argsstring>)(LLVMModelData *, size_t)</argsstring>
        <name>GetValueCodeGenBase_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/GetValueCodeGenBase.h" line="25" column="13" bodyfile="llvm/GetValueCodeGenBase.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ae5e4279d732174cbc70dea9af072ee05" prot="public" static="no">
        <type>double(*)(double x)</type>
        <definition>using rrllvm::FnPtr_d1 = typedef double (*)(double x)</definition>
        <argsstring></argsstring>
        <name>FnPtr_d1</name>
        <briefdescription>
<para>define some function pointer signatures </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="56" column="5" bodyfile="llvm/Jit.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1adc09014f32dc4d14e644dc0fcae076ad" prot="public" static="no">
        <type>int(*)(int x)</type>
        <definition>using rrllvm::FnPtr_i1 = typedef int (*)(int x)</definition>
        <argsstring></argsstring>
        <name>FnPtr_i1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="57" column="5" bodyfile="llvm/Jit.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ae9bc8404340a689c1df6b2aa86e40c7f" prot="public" static="no">
        <type>double(*)(double x, double y)</type>
        <definition>using rrllvm::FnPtr_d2 = typedef double (*)(double x, double y)</definition>
        <argsstring></argsstring>
        <name>FnPtr_d2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="58" column="5" bodyfile="llvm/Jit.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a515c49ed8c07c13460b34e032c09a2e3" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::fabsFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>fabsFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="61" column="5" bodyfile="llvm/Jit.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a596cd4d279ee253cd5f3cd8980a6c795" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::acosFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>acosFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="62" column="5" bodyfile="llvm/Jit.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a5084304be134b72881e84fbb430405a1" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::asinFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>asinFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="63" column="5" bodyfile="llvm/Jit.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a26a6b0b1846192cb99d5d559adce6762" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::atanFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>atanFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="64" column="5" bodyfile="llvm/Jit.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ad829c931e60d90198aa5f594cd0008b6" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::ceilFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>ceilFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="65" column="5" bodyfile="llvm/Jit.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ac18255a1080fe4bdcbd9ad30a11495a0" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::cosFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>cosFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="66" column="5" bodyfile="llvm/Jit.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a716a3a88a648c958cb6b1ab6fd92a55c" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::coshFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>coshFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="67" column="5" bodyfile="llvm/Jit.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a9c29d7ae599f83df9d9c1f21e40c727c" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::expFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>expFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="68" column="5" bodyfile="llvm/Jit.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1adf0a20d869a2c56323f2246522599ba0" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::floorFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>floorFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="69" column="5" bodyfile="llvm/Jit.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ab23f35b1fa33480f895ab380acd3087c" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::logFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>logFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="70" column="5" bodyfile="llvm/Jit.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a770c923444fbc37c6023561581d5b2bb" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::log10FnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>log10FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="71" column="5" bodyfile="llvm/Jit.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a3fd311d88330f4985e5b94466beaba17" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::sinFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>sinFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="72" column="5" bodyfile="llvm/Jit.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a962e0e116bb171739b65bb4bfb736fae" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::sinhFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>sinhFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="73" column="5" bodyfile="llvm/Jit.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1adb5ac49c2b686043f4a6eb9a4cccf641" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::tanFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>tanFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="74" column="5" bodyfile="llvm/Jit.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a364f3b80aece1337cf06a9ff9311ce15" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::tanhFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>tanhFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="75" column="5" bodyfile="llvm/Jit.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a2b6f77058ad2ccefb99b43e0ea0d8dba" prot="public" static="no">
        <type>FnPtr_d2</type>
        <definition>using rrllvm::fmodFnTy = typedef FnPtr_d2</definition>
        <argsstring></argsstring>
        <name>fmodFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="76" column="5" bodyfile="llvm/Jit.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a7bdf0e77e51003b91537332dd709ad50" prot="public" static="no">
        <type>FnPtr_d2</type>
        <definition>using rrllvm::powFnTy = typedef FnPtr_d2</definition>
        <argsstring></argsstring>
        <name>powFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="77" column="5" bodyfile="llvm/Jit.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a7b5586612c28b3a7fc37f57d7c5de960" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::arccotFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>arccotFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="80" column="5" bodyfile="llvm/Jit.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a86e890bf27b5a36f885e30e0d5768c8d" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::rr_arccot_negzeroFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>rr_arccot_negzeroFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="81" column="5" bodyfile="llvm/Jit.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a6b79eede264df86968acfb09014c1374" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::arccothFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>arccothFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="82" column="5" bodyfile="llvm/Jit.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1af1c3c48029de0e76c99c84c0ae8e6db3" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::arccscFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>arccscFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="83" column="5" bodyfile="llvm/Jit.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1acadcb4d3f870415c1167da3a3641d59f" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::arccschFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>arccschFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="84" column="5" bodyfile="llvm/Jit.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a3c66a83964e79f5ba01f0ac045577d49" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::arcsecFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>arcsecFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="85" column="5" bodyfile="llvm/Jit.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a1b847b8bdcf0365ee5c62beb87e4afb3" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::arcsechFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>arcsechFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="86" column="5" bodyfile="llvm/Jit.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1adec45f9c1c3886e91a58d016d54d47e2" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::cotFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>cotFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="87" column="5" bodyfile="llvm/Jit.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a95eb9ef0f9fa0570e3787cdc5359b72d" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::cothFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>cothFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="88" column="5" bodyfile="llvm/Jit.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ad5a5faa73cacfaf4fc3762a59eff6704" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::cscFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>cscFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="89" column="5" bodyfile="llvm/Jit.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a9b82d345b0bc7860a0fe3a273ea1e4ad" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::cschFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>cschFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="90" column="5" bodyfile="llvm/Jit.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1abad4aec0452710688367fcd7c4dd39b3" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::secFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>secFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="91" column="5" bodyfile="llvm/Jit.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1aa8f0565bfbc610c3d600a368f60220c0" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::sechFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>sechFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="92" column="5" bodyfile="llvm/Jit.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ac67376076ab91d59f7477743bf5182a3" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::arccoshFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>arccoshFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="93" column="5" bodyfile="llvm/Jit.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ade22cc75088b9204278cbd3a96648a09" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::arcsinhFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>arcsinhFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="94" column="5" bodyfile="llvm/Jit.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ad6654b0a7c46a24e4756cbe71101d3a9" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::arctanhFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>arctanhFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="95" column="5" bodyfile="llvm/Jit.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a20a61dba30109e39c608c90066a50967" prot="public" static="no">
        <type>FnPtr_d1</type>
        <definition>using rrllvm::rr_factorialdFnTy = typedef FnPtr_d1</definition>
        <argsstring></argsstring>
        <name>rr_factorialdFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="96" column="5" bodyfile="llvm/Jit.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ad9c15c1028d442132722084911e97369" prot="public" static="no">
        <type>FnPtr_i1</type>
        <definition>using rrllvm::rr_factorialiFnTy = typedef FnPtr_i1</definition>
        <argsstring></argsstring>
        <name>rr_factorialiFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="97" column="5" bodyfile="llvm/Jit.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a98ba27ea39861483d336dde1078449e9" prot="public" static="no">
        <type>FnPtr_d2</type>
        <definition>using rrllvm::rr_logdFnTy = typedef FnPtr_d2</definition>
        <argsstring></argsstring>
        <name>rr_logdFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="98" column="5" bodyfile="llvm/Jit.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1afe3e7b85721ea8d94d0a98fc95eb06a6" prot="public" static="no">
        <type>FnPtr_d2</type>
        <definition>using rrllvm::rr_rootdFnTy = typedef FnPtr_d2</definition>
        <argsstring></argsstring>
        <name>rr_rootdFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="99" column="5" bodyfile="llvm/Jit.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1afc5b56530d891f988613ca613bb1aef6" prot="public" static="no">
        <type>FnPtr_d2</type>
        <definition>using rrllvm::quotientFnTy = typedef FnPtr_d2</definition>
        <argsstring></argsstring>
        <name>quotientFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="100" column="5" bodyfile="llvm/Jit.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a5339b229935e2cf1526f12816df6e8de" prot="public" static="no">
        <type>FnPtr_d2</type>
        <definition>using rrllvm::rr_maxFnTy = typedef FnPtr_d2</definition>
        <argsstring></argsstring>
        <name>rr_maxFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="101" column="5" bodyfile="llvm/Jit.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a89330dc69d33369f4a9e01c87f0a76db" prot="public" static="no">
        <type>FnPtr_d2</type>
        <definition>using rrllvm::rr_minFnTy = typedef FnPtr_d2</definition>
        <argsstring></argsstring>
        <name>rr_minFnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="102" column="5" bodyfile="llvm/Jit.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a29c29e0ebddfc27505af6c485c8d93b8" prot="public" static="no">
        <type>rr::csr_matrix *(*)(int, int, double)</type>
        <definition>using rrllvm::csr_matrix_set_nz_FnTy = typedef rr::csr_matrix *(*)(int, int, double)</definition>
        <argsstring></argsstring>
        <name>csr_matrix_set_nz_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="105" column="5" bodyfile="llvm/Jit.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1abc67e8c1a6b9ed23b8d2109c0883de8e" prot="public" static="no">
        <type>rr::csr_matrix *(*)(int, int)</type>
        <definition>using rrllvm::csr_matrix_get_nz_FnTy = typedef rr::csr_matrix *(*)(int, int)</definition>
        <argsstring></argsstring>
        <name>csr_matrix_get_nz_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="106" column="5" bodyfile="llvm/Jit.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1aeb8da27c561ee64d006aecfba8ee3efe" prot="public" static="no">
        <type>double(*)(<ref refid="classrr_1_1Random" kindref="compound">Random</ref> *, double)</type>
        <definition>using rrllvm::DistribFnTy_d1 = typedef double (*)(Random *, double)</definition>
        <argsstring></argsstring>
        <name>DistribFnTy_d1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="109" column="5" bodyfile="llvm/Jit.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a300049c0dba0cfb01d98247a373dae7c" prot="public" static="no">
        <type>double(*)(<ref refid="classrr_1_1Random" kindref="compound">Random</ref> *, double, double)</type>
        <definition>using rrllvm::DistribFnTy_d2 = typedef double (*)(Random *, double, double)</definition>
        <argsstring></argsstring>
        <name>DistribFnTy_d2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="110" column="5" bodyfile="llvm/Jit.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a241bcf318873228376c89ee93425aa73" prot="public" static="no">
        <type>double(*)(<ref refid="classrr_1_1Random" kindref="compound">Random</ref> *, double, double, double)</type>
        <definition>using rrllvm::DistribFnTy_d3 = typedef double (*)(Random *, double, double, double)</definition>
        <argsstring></argsstring>
        <name>DistribFnTy_d3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="111" column="5" bodyfile="llvm/Jit.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a1c3b8509afca6bd59bad85622f855332" prot="public" static="no">
        <type>double(*)(<ref refid="classrr_1_1Random" kindref="compound">Random</ref> *, double, double, double, double)</type>
        <definition>using rrllvm::DistribFnTy_d4 = typedef double (*)(Random *, double, double, double, double)</definition>
        <argsstring></argsstring>
        <name>DistribFnTy_d4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="112" column="5" bodyfile="llvm/Jit.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a73cd90a4b7cde6ed0e7174330f889af7" prot="public" static="no">
        <type>DistribFnTy_d1</type>
        <definition>using rrllvm::distrib_bernoulli_FnTy = typedef DistribFnTy_d1</definition>
        <argsstring></argsstring>
        <name>distrib_bernoulli_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="114" column="5" bodyfile="llvm/Jit.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1aa81e580a1adcf2f009b6db9d66fdc278" prot="public" static="no">
        <type>DistribFnTy_d1</type>
        <definition>using rrllvm::distrib_cauchy_one_FnTy = typedef DistribFnTy_d1</definition>
        <argsstring></argsstring>
        <name>distrib_cauchy_one_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="115" column="5" bodyfile="llvm/Jit.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a1bd1ee277c92e8e895328fff5a7548cd" prot="public" static="no">
        <type>DistribFnTy_d1</type>
        <definition>using rrllvm::distrib_chisquare_FnTy = typedef DistribFnTy_d1</definition>
        <argsstring></argsstring>
        <name>distrib_chisquare_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="116" column="5" bodyfile="llvm/Jit.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ac91bbe271591ae054e04a6bb1fe8da90" prot="public" static="no">
        <type>DistribFnTy_d1</type>
        <definition>using rrllvm::distrib_exponential_FnTy = typedef DistribFnTy_d1</definition>
        <argsstring></argsstring>
        <name>distrib_exponential_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="117" column="5" bodyfile="llvm/Jit.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a58023e94594d3f8a5e7b1213310c8aa5" prot="public" static="no">
        <type>DistribFnTy_d1</type>
        <definition>using rrllvm::distrib_laplace_one_FnTy = typedef DistribFnTy_d1</definition>
        <argsstring></argsstring>
        <name>distrib_laplace_one_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="118" column="5" bodyfile="llvm/Jit.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1aa5ec86365c8702c7067f31bef755a7b2" prot="public" static="no">
        <type>DistribFnTy_d1</type>
        <definition>using rrllvm::distrib_poisson_FnTy = typedef DistribFnTy_d1</definition>
        <argsstring></argsstring>
        <name>distrib_poisson_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="119" column="5" bodyfile="llvm/Jit.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a023155dc5d0f6b7eca5c85a88bf369d3" prot="public" static="no">
        <type>DistribFnTy_d1</type>
        <definition>using rrllvm::distrib_rayleigh_FnTy = typedef DistribFnTy_d1</definition>
        <argsstring></argsstring>
        <name>distrib_rayleigh_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="120" column="5" bodyfile="llvm/Jit.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a816662ace2b39ac1ba8fc55aabc0f3ef" prot="public" static="no">
        <type>DistribFnTy_d2</type>
        <definition>using rrllvm::distrib_uniform_FnTy = typedef DistribFnTy_d2</definition>
        <argsstring></argsstring>
        <name>distrib_uniform_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="121" column="5" bodyfile="llvm/Jit.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ae862022affcffed609cc1d3849812996" prot="public" static="no">
        <type>DistribFnTy_d2</type>
        <definition>using rrllvm::distrib_normal_FnTy = typedef DistribFnTy_d2</definition>
        <argsstring></argsstring>
        <name>distrib_normal_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="122" column="5" bodyfile="llvm/Jit.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a62c8d72cb85c687588b187e6c491be20" prot="public" static="no">
        <type>DistribFnTy_d2</type>
        <definition>using rrllvm::distrib_binomial_FnTy = typedef DistribFnTy_d2</definition>
        <argsstring></argsstring>
        <name>distrib_binomial_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="123" column="5" bodyfile="llvm/Jit.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ae5882f0c9191fb491cba07dea69d7997" prot="public" static="no">
        <type>DistribFnTy_d2</type>
        <definition>using rrllvm::distrib_cauchy_FnTy = typedef DistribFnTy_d2</definition>
        <argsstring></argsstring>
        <name>distrib_cauchy_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="124" column="5" bodyfile="llvm/Jit.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a64b1a2285172c094e5382d3b5cf77dfe" prot="public" static="no">
        <type>DistribFnTy_d2</type>
        <definition>using rrllvm::distrib_gamma_FnTy = typedef DistribFnTy_d2</definition>
        <argsstring></argsstring>
        <name>distrib_gamma_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="125" column="5" bodyfile="llvm/Jit.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a1f02a225e132c540b0674baebd4003e9" prot="public" static="no">
        <type>DistribFnTy_d2</type>
        <definition>using rrllvm::distrib_laplace_FnTy = typedef DistribFnTy_d2</definition>
        <argsstring></argsstring>
        <name>distrib_laplace_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="126" column="5" bodyfile="llvm/Jit.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ae1ecbd388e40c54ff4a8c75ef669057a" prot="public" static="no">
        <type>DistribFnTy_d2</type>
        <definition>using rrllvm::distrib_lognormal_FnTy = typedef DistribFnTy_d2</definition>
        <argsstring></argsstring>
        <name>distrib_lognormal_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="127" column="5" bodyfile="llvm/Jit.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a2b9df7b4e1c53e12fe9357a400c0ff77" prot="public" static="no">
        <type>DistribFnTy_d3</type>
        <definition>using rrllvm::distrib_chisquare_three_FnTy = typedef DistribFnTy_d3</definition>
        <argsstring></argsstring>
        <name>distrib_chisquare_three_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="128" column="5" bodyfile="llvm/Jit.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1aa23a6a2c7217de43b9eb146781bad00c" prot="public" static="no">
        <type>DistribFnTy_d3</type>
        <definition>using rrllvm::distrib_exponential_three_FnTy = typedef DistribFnTy_d3</definition>
        <argsstring></argsstring>
        <name>distrib_exponential_three_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="129" column="5" bodyfile="llvm/Jit.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a77be2716a65060695b1d54881dfd34ce" prot="public" static="no">
        <type>DistribFnTy_d3</type>
        <definition>using rrllvm::distrib_poisson_three_FnTy = typedef DistribFnTy_d3</definition>
        <argsstring></argsstring>
        <name>distrib_poisson_three_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="130" column="5" bodyfile="llvm/Jit.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1aaea5d2ccb26647f80df57806440b768d" prot="public" static="no">
        <type>DistribFnTy_d3</type>
        <definition>using rrllvm::distrib_rayleigh_three_FnTy = typedef DistribFnTy_d3</definition>
        <argsstring></argsstring>
        <name>distrib_rayleigh_three_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="131" column="5" bodyfile="llvm/Jit.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a3226e327919a734c318f85d6673c9aca" prot="public" static="no">
        <type>DistribFnTy_d4</type>
        <definition>using rrllvm::distrib_normal_four_FnTy = typedef DistribFnTy_d4</definition>
        <argsstring></argsstring>
        <name>distrib_normal_four_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="132" column="5" bodyfile="llvm/Jit.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a6b39c686a8bb1ea4efe02ee012f5f1e1" prot="public" static="no">
        <type>DistribFnTy_d4</type>
        <definition>using rrllvm::distrib_binomial_four_FnTy = typedef DistribFnTy_d4</definition>
        <argsstring></argsstring>
        <name>distrib_binomial_four_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="133" column="5" bodyfile="llvm/Jit.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a78fbb7403d7124453499cbdd31e49382" prot="public" static="no">
        <type>DistribFnTy_d4</type>
        <definition>using rrllvm::distrib_cauchy_four_FnTy = typedef DistribFnTy_d4</definition>
        <argsstring></argsstring>
        <name>distrib_cauchy_four_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="134" column="5" bodyfile="llvm/Jit.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1af73fed033eb3ff1a280be69bb55044db" prot="public" static="no">
        <type>DistribFnTy_d4</type>
        <definition>using rrllvm::distrib_gamma_four_FnTy = typedef DistribFnTy_d4</definition>
        <argsstring></argsstring>
        <name>distrib_gamma_four_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="135" column="5" bodyfile="llvm/Jit.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1ae40048162c039d24add9c998d642b764" prot="public" static="no">
        <type>DistribFnTy_d4</type>
        <definition>using rrllvm::distrib_laplace_four_FnTy = typedef DistribFnTy_d4</definition>
        <argsstring></argsstring>
        <name>distrib_laplace_four_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="136" column="5" bodyfile="llvm/Jit.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1affadb210d7efa854b1b98f3c6f6bde0a" prot="public" static="no">
        <type>DistribFnTy_d4</type>
        <definition>using rrllvm::distrib_lognormal_four_FnTy = typedef DistribFnTy_d4</definition>
        <argsstring></argsstring>
        <name>distrib_lognormal_four_FnTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="137" column="5" bodyfile="llvm/Jit.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a7a67778b8d7742ed6477e74850299def" prot="public" static="no">
        <type>llvm::object::OwningBinary&lt; llvm::object::ObjectFile &gt;</type>
        <definition>using rrllvm::rrOwningBinary = typedef llvm::object::OwningBinary&lt;llvm::object::ObjectFile&gt;</definition>
        <argsstring></argsstring>
        <name>rrOwningBinary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="139" column="5" bodyfile="llvm/Jit.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Jit_8h_1a9beb5664b06c8ac843164849c1efee5a" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, std::pair&lt; llvm::FunctionType *, void * &gt; &gt;</type>
        <definition>using rrllvm::FnMap = typedef std::unordered_map&lt;std::string, std::pair&lt;llvm::FunctionType *, void *&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>FnMap</name>
        <briefdescription>
<para>{FunctionName : {functionType, (void*)FnAddress}} </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Jit.h" line="144" column="5" bodyfile="llvm/Jit.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="LLVMModelDataSymbols_8cpp_1a2656f481df8f5daf61df5f11b0a08547" prot="public" static="no">
        <type>std::vector&lt; LLVMModelDataSymbols::SpeciesReferenceType &gt;::size_type</type>
        <definition>typedef std::vector&lt;LLVMModelDataSymbols::SpeciesReferenceType&gt;::size_type rrllvm::ssize_type</definition>
        <argsstring></argsstring>
        <name>ssize_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.cpp" line="1316" column="33" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="LLVMModelDataSymbols_8cpp_1ab7d0be483572f07194fad16c6237afb2" prot="public" static="no">
        <type>cxx11_ns::unordered_map&lt; uint, ssize_type &gt;</type>
        <definition>typedef cxx11_ns::unordered_map&lt;uint, ssize_type&gt; rrllvm::UIntUMap</definition>
        <argsstring></argsstring>
        <name>UIntUMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.cpp" line="1317" column="33" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="LLVMModelGenerator_8cpp_1a623fb2eecf135c54d2c8ab4ae7dbadd5" prot="public" static="no">
        <type>std::weak_ptr&lt; ModelResources &gt;</type>
        <definition>typedef std::weak_ptr&lt;ModelResources&gt; rrllvm::WeakModelResourcesPtr</definition>
        <argsstring></argsstring>
        <name>WeakModelResourcesPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="59" column="27" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="LLVMModelGenerator_8cpp_1a8e58eda562f81894c9ae00fff44005aa" prot="public" static="no">
        <type>std::shared_ptr&lt; ModelResources &gt;</type>
        <definition>typedef std::shared_ptr&lt;ModelResources&gt; rrllvm::SharedModelResourcesPtr</definition>
        <argsstring></argsstring>
        <name>SharedModelResourcesPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="60" column="29" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="LLVMModelGenerator_8cpp_1af8cd7f7430e87f2105dec172fde4b336" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, WeakModelResourcesPtr &gt;</type>
        <definition>typedef std::unordered_map&lt;std::string, WeakModelResourcesPtr&gt; rrllvm::ModelResourcesPtrMap</definition>
        <argsstring></argsstring>
        <name>ModelResourcesPtrMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="61" column="32" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Random_8cpp_1a1fb7918e1d72e84f4ea2dc3641d4f709" prot="public" static="no">
        <type>cxx11_ns::normal_distribution&lt; double &gt;</type>
        <definition>typedef cxx11_ns::normal_distribution&lt;double&gt; rrllvm::NormalDist</definition>
        <argsstring></argsstring>
        <name>NormalDist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="34" column="39" bodyfile="llvm/Random.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Random_8cpp_1ab148d61c61bf9ade0b4022e5556efe5c" prot="public" static="no">
        <type>cxx11_ns::bernoulli_distribution</type>
        <definition>typedef cxx11_ns::bernoulli_distribution rrllvm::BernoulliDist</definition>
        <argsstring></argsstring>
        <name>BernoulliDist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="36" column="42" bodyfile="llvm/Random.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Random_8cpp_1a419c354c3c8532ad3c3ae6b14aa35539" prot="public" static="no">
        <type>cxx11_ns::binomial_distribution&lt; long &gt;</type>
        <definition>typedef cxx11_ns::binomial_distribution&lt;long&gt; rrllvm::BinomialDist</definition>
        <argsstring></argsstring>
        <name>BinomialDist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="38" column="41" bodyfile="llvm/Random.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Random_8cpp_1adf325539ce5441819c31f9dc3bd154b0" prot="public" static="no">
        <type>cxx11_ns::cauchy_distribution&lt; double &gt;</type>
        <definition>typedef cxx11_ns::cauchy_distribution&lt;double&gt; rrllvm::CauchyDist</definition>
        <argsstring></argsstring>
        <name>CauchyDist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="40" column="39" bodyfile="llvm/Random.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Random_8cpp_1aa880c1c6fb5060bca33ee624bf620c1b" prot="public" static="no">
        <type>cxx11_ns::chi_squared_distribution&lt; double &gt;</type>
        <definition>typedef cxx11_ns::chi_squared_distribution&lt;double&gt; rrllvm::ChisquareDist</definition>
        <argsstring></argsstring>
        <name>ChisquareDist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="42" column="44" bodyfile="llvm/Random.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Random_8cpp_1ad56cd0116892a8aa55250654b03d9ff9" prot="public" static="no">
        <type>cxx11_ns::exponential_distribution&lt; double &gt;</type>
        <definition>typedef cxx11_ns::exponential_distribution&lt;double&gt; rrllvm::ExponentialDist</definition>
        <argsstring></argsstring>
        <name>ExponentialDist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="44" column="44" bodyfile="llvm/Random.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Random_8cpp_1add5f9edb69c513a9516abb1c63994c91" prot="public" static="no">
        <type>cxx11_ns::gamma_distribution&lt; double &gt;</type>
        <definition>typedef cxx11_ns::gamma_distribution&lt;double&gt; rrllvm::GammaDist</definition>
        <argsstring></argsstring>
        <name>GammaDist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="46" column="38" bodyfile="llvm/Random.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Random_8cpp_1a2cdb51b55214768305bb0c8a8014be77" prot="public" static="no">
        <type>cxx11_ns::lognormal_distribution&lt; double &gt;</type>
        <definition>typedef cxx11_ns::lognormal_distribution&lt;double&gt; rrllvm::LognormalDist</definition>
        <argsstring></argsstring>
        <name>LognormalDist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="48" column="42" bodyfile="llvm/Random.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Random_8cpp_1aa80cbcc8cb4807f15b981954a3eb3fe0" prot="public" static="no">
        <type>cxx11_ns::poisson_distribution&lt; int &gt;</type>
        <definition>typedef cxx11_ns::poisson_distribution&lt;int&gt; rrllvm::PoissonDist</definition>
        <argsstring></argsstring>
        <name>PoissonDist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="50" column="40" bodyfile="llvm/Random.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SetValueCodeGenBase_8h_1a4c6dfd14f64dc7cf0b4a3c67f272f9f2" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* rrllvm::SetValueCodeGenBase_FunctionPtr) (LLVMModelData *, int32_t, double)</definition>
        <argsstring>)(LLVMModelData *, int32_t, double)</argsstring>
        <name>SetValueCodeGenBase_FunctionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/SetValueCodeGenBase.h" line="25" column="13" bodyfile="llvm/SetValueCodeGenBase.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="LLJit_8cpp_1a1e36d6360e6d226c5ffe6f9b7c7a675b" prot="public" static="yes" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex rrllvm::LLJitMtx</definition>
        <argsstring></argsstring>
        <name>LLJitMtx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLJit.cpp" line="51" column="23" bodyfile="llvm/LLJit.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="LLVMModelGenerator_8cpp_1a29eaa90174b5db9f757876a520c089db" prot="public" static="yes" mutable="no">
        <type>Poco::Mutex</type>
        <definition>Poco::Mutex rrllvm::cachedModelsMutex</definition>
        <argsstring></argsstring>
        <name>cachedModelsMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="63" column="24" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="LLVMModelGenerator_8cpp_1aa811cbc9b9dd348db436cd79ba1bca4d" prot="public" static="yes" mutable="no">
        <type>ModelResourcesPtrMap</type>
        <definition>ModelResourcesPtrMap rrllvm::cachedModelResources</definition>
        <argsstring></argsstring>
        <name>cachedModelResources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="64" column="33" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="Random_8cpp_1aee0ae1e7f101ae888b8489d09db259b0" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int rrllvm::randomCount</definition>
        <argsstring></argsstring>
        <name>randomCount</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="52" column="12" bodyfile="llvm/Random.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SBMLModelObjectCache_8cpp_1aa33e75e7c1370fe9a93032b8aaa22fa4" prot="public" static="yes" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex rrllvm::mtx</definition>
        <argsstring></argsstring>
        <name>mtx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/SBMLModelObjectCache.cpp" line="13" column="23" bodyfile="llvm/SBMLModelObjectCache.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ASTNodeCodeGen_8cpp_1a1bcb2f91ea18317500797c7ef29db41a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rrllvm::isNegative</definition>
        <argsstring>(const libsbml::ASTNode *node)</argsstring>
        <name>isNegative</name>
        <param>
          <type>const libsbml::ASTNode *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>idiotic test to test for an idiotic condition. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks if there is a minus in front of the expression so we can pass tests with arccot(-0)... </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/ASTNodeCodeGen.cpp" line="1403" column="13" bodyfile="llvm/ASTNodeCodeGen.cpp" bodystart="1403" bodyend="1414" declfile="llvm/ASTNodeCodeGen.cpp" declline="39" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ASTNodeCodeGen_8cpp_1ab6e2d1a7bcbe21244fe9d59cd807bcd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rrllvm::to_string</definition>
        <argsstring>(const libsbml::ASTNode *ast)</argsstring>
        <name>to_string</name>
        <param>
          <type>const libsbml::ASTNode *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/ASTNodeCodeGen.cpp" line="41" column="13" bodyfile="llvm/ASTNodeCodeGen.cpp" bodystart="41" bodyend="47" declfile="llvm/ASTNodeCodeGen.h" declline="135" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="EvalVolatileStoichCodeGen_8cpp_1aca20ef9949b7668b5a74a25b2a26e91b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename type</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool rrllvm::isSetConstant</definition>
        <argsstring>(const SBase *e, bool &amp;isSetConst)</argsstring>
        <name>isSetConstant</name>
        <param>
          <type>const SBase *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>isSetConst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/EvalVolatileStoichCodeGen.cpp" line="154" column="17" bodyfile="llvm/EvalVolatileStoichCodeGen.cpp" bodystart="154" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="EventQueue_8cpp_1a0d825ecc4e905532347cd0e52be7c363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::operator&lt;</definition>
        <argsstring>(const Event &amp;a, const Event &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classrr_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classrr_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/EventQueue.cpp" line="134" column="1" bodyfile="llvm/EventQueue.cpp" bodystart="134" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="EventQueue_8cpp_1acb2ca782b3cb9554876fec9e96bcf899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; rrllvm::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Event &amp;event)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classrr_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/EventQueue.cpp" line="155" column="1" bodyfile="llvm/EventQueue.cpp" bodystart="155" bodyend="168" declfile="llvm/EventQueue.h" declline="79" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="EventQueue_8cpp_1a42c3cb44c8a7ab6ecd5858dafcb315de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; rrllvm::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const EventQueue &amp;queue)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classrrllvm_1_1EventQueue" kindref="compound">EventQueue</ref> &amp;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/EventQueue.cpp" line="329" column="1" bodyfile="llvm/EventQueue.cpp" bodystart="329" bodyend="340" declfile="llvm/EventQueue.h" declline="157" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="LLJit_8cpp_1a3bf1d36feac047fd09eba84b7316799a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>llvm::CodeGenOpt::Level</type>
        <definition>llvm::CodeGenOpt::Level rrllvm::convertRRCodeGenOptLevelToLLVM</definition>
        <argsstring>(std::uint32_t options)</argsstring>
        <name>convertRRCodeGenOptLevelToLLVM</name>
        <param>
          <type>std::uint32_t</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLJit.cpp" line="53" column="29" bodyfile="llvm/LLJit.cpp" bodystart="53" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="LLJit_8cpp_1ad4e63c0dd8e205aa98edf7772a81e5b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; rrllvm::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, LLJit *llJit)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classrrllvm_1_1LLJit" kindref="compound">LLJit</ref> *</type>
          <declname>llJit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLJit.cpp" line="338" column="5" bodyfile="llvm/LLJit.cpp" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="LLVMIncludes_8h_1a50c465a18b6bf5a346e689b93c33953e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rrllvm::to_string</definition>
        <argsstring>(const llvm::Value *)</argsstring>
        <name>to_string</name>
        <param>
          <type>const llvm::Value *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
<para>C++ 11 style to_string for LLVM types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="607" column="17" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="607" bodyend="612" declfile="llvm/LLVMIncludes.h" declline="118" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="LLVMModelData_8cpp_1a2c8ed62c3575769c8bc81ed568811e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; rrllvm::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const LLVMModelData &amp;data)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structrrllvm_1_1LLVMModelData" kindref="compound">LLVMModelData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelData.cpp" line="49" column="1" bodyfile="llvm/LLVMModelData.cpp" bodystart="49" bodyend="104" declfile="llvm/LLVMModelData.h" declline="258" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="LLVMModelData_8cpp_1ace95dba9bf735deee2db65c16cc88f26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelData_save</definition>
        <argsstring>(LLVMModelData *data, std::ostream &amp;out)</argsstring>
        <name>LLVMModelData_save</name>
        <param>
          <type><ref refid="structrrllvm_1_1LLVMModelData" kindref="compound">LLVMModelData</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelData.cpp" line="106" column="6" bodyfile="llvm/LLVMModelData.cpp" bodystart="106" bodyend="173" declfile="llvm/LLVMModelData.h" declline="248" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="LLVMModelData_8cpp_1a104516ebe59a471ed7d82b6f5f174553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrrllvm_1_1LLVMModelData" kindref="compound">LLVMModelData</ref> *</type>
        <definition>LLVMModelData * rrllvm::LLVMModelData_from_save</definition>
        <argsstring>(std::istream &amp;in)</argsstring>
        <name>LLVMModelData_from_save</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelData.cpp" line="179" column="15" bodyfile="llvm/LLVMModelData.cpp" bodystart="179" bodyend="260" declfile="llvm/LLVMModelData.h" declline="249" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="LLVMModelData_8cpp_1afb50a5a46b5a17f2ab5f90368247b8a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelData_free</definition>
        <argsstring>(LLVMModelData *data)</argsstring>
        <name>LLVMModelData_free</name>
        <param>
          <type><ref refid="structrrllvm_1_1LLVMModelData" kindref="compound">LLVMModelData</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelData.cpp" line="262" column="7" bodyfile="llvm/LLVMModelData.cpp" bodystart="262" bodyend="270" declfile="llvm/LLVMModelData.h" declline="250" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="LLVMModelGenerator_8cpp_1a18507731c5464be9817e4256a3e6c2af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::codeGeneration</definition>
        <argsstring>(ModelGeneratorContext &amp;context, std::uint32_t options)</argsstring>
        <name>codeGeneration</name>
        <param>
          <type><ref refid="classrrllvm_1_1ModelGeneratorContext" kindref="compound">ModelGeneratorContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="111" column="17" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="111" bodyend="221" declfile="llvm/LLVMModelGenerator.cpp" declline="66" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="LLVMModelGenerator_8cpp_1ada07d0362849e25c1ed58ad060d80c47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrrllvm_1_1ModelGeneratorContext" kindref="compound">ModelGeneratorContext</ref></type>
        <definition>ModelGeneratorContext rrllvm::createModelGeneratorContext</definition>
        <argsstring>(const libsbml::SBMLDocument *sbml, std::uint32_t options)</argsstring>
        <name>createModelGeneratorContext</name>
        <param>
          <type>const libsbml::SBMLDocument *</type>
          <declname>sbml</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="69" column="9" declfile="llvm/LLVMModelGenerator.cpp" declline="69" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="LLVMModelGenerator_8cpp_1a914927a1cd8ddde80abb141e422e736a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rrllvm::getSBMLMD5</definition>
        <argsstring>(const std::string &amp;sbml, const std::uint32_t &amp;options)</argsstring>
        <name>getSBMLMD5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sbml</declname>
        </param>
        <param>
          <type>const std::uint32_t &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="223" column="17" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="223" bodyend="231" declfile="llvm/LLVMModelGenerator.cpp" declline="71" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="LLVMModelGenerator_8cpp_1adf2cb4f9cfc67974dd015ec96a45bdd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structrrllvm_1_1LLVMModelData" kindref="compound">LLVMModelData</ref> *</type>
        <definition>LLVMModelData * rrllvm::codeGenAddModuleAndMakeModelData</definition>
        <argsstring>(ModelGeneratorContext *modelGeneratorContext, std::shared_ptr&lt; ModelResources &gt; &amp;modelResources, std::uint32_t options)</argsstring>
        <name>codeGenAddModuleAndMakeModelData</name>
        <param>
          <type><ref refid="classrrllvm_1_1ModelGeneratorContext" kindref="compound">ModelGeneratorContext</ref> *</type>
          <declname>modelGeneratorContext</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; ModelResources &gt; &amp;</type>
          <declname>modelResources</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>collect a few essential calls for creating a model into a function </para>
        </briefdescription>
        <detaileddescription>
<para>these operations are required in multiple places and so they are factored out into a single function. </para>
        </detaileddescription>
        <inbodydescription>
<para>Adds the module and context which is owned by the <ref refid="classrrllvm_1_1Jit" kindref="compound">Jit</ref> to the developing LLVM IR module. In some <ref refid="classrrllvm_1_1Jit" kindref="compound">Jit</ref>&apos;s (MCJit), this also triggers llvm IR optimization</para>
<para>Adds the module and context which is owned by the <ref refid="classrrllvm_1_1Jit" kindref="compound">Jit</ref> to the developing LLVM IR module. In some <ref refid="classrrllvm_1_1Jit" kindref="compound">Jit</ref>&apos;s (MCJit), this also triggers llvm IR optimization</para>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="238" column="19" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="238" bodyend="280" declfile="llvm/LLVMModelGenerator.cpp" declline="73" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="LLVMModelGenerator_8cpp_1ab53298cb3bc264117463b07e2452e24f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename a_type</type>
          </param>
          <param>
            <type>typename b_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rrllvm::copyCachedModel</definition>
        <argsstring>(a_type *src, b_type *dst)</argsstring>
        <name>copyCachedModel</name>
        <param>
          <type>a_type *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>b_type *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>copy the cached model fields between a cached model, and a executable model. </para>
        </briefdescription>
        <detaileddescription>
<para>We don&apos;t want to have ExecutableModel inherit from CahcedModel because they do compleltly different things, and have completly differnt deletion semantics </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="87" column="10" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="87" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="LLVMModelGenerator_8cpp_1a7ef274b2c6297cc413b54f38f4a38573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrrllvm_1_1LLVMModelData" kindref="compound">LLVMModelData</ref> *</type>
        <definition>LLVMModelData * rrllvm::createModelData</definition>
        <argsstring>(const rrllvm::LLVMModelDataSymbols &amp;symbols, const Random *random)</argsstring>
        <name>createModelData</name>
        <param>
          <type>const <ref refid="classrrllvm_1_1LLVMModelDataSymbols" kindref="compound">rrllvm::LLVMModelDataSymbols</ref> &amp;</type>
          <declname>symbols</declname>
        </param>
        <param>
          <type>const <ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.cpp" line="614" column="19" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="614" bodyend="711" declfile="llvm/ModelGeneratorContext.h" declline="242" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="ModelDataIRBuilder_8cpp_1a9b6f0b05d36838414d31ff2f17f932eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rrllvm::isAliasOrPointer</definition>
        <argsstring>(ModelDataFields f)</argsstring>
        <name>isAliasOrPointer</name>
        <param>
          <type>ModelDataFields</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/ModelDataIRBuilder.cpp" line="51" column="13" bodyfile="llvm/ModelDataIRBuilder.cpp" bodystart="51" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="ModelDataIRBuilder_8cpp_1a1a676d0219c63da5b89b86306ea797e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rrllvm::isArray</definition>
        <argsstring>(ModelDataFields f)</argsstring>
        <name>isArray</name>
        <param>
          <type>ModelDataFields</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/ModelDataIRBuilder.cpp" line="76" column="13" bodyfile="llvm/ModelDataIRBuilder.cpp" bodystart="76" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="ModelDataIRBuilder_8cpp_1a960913f2d3e743f3b1b5bcef77d7f272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>llvm::StructType *</type>
        <definition>llvm::StructType* rrllvm::getTypeByName</definition>
        <argsstring>(llvm::Module *module, std::string name)</argsstring>
        <name>getTypeByName</name>
        <param>
          <type>llvm::Module *</type>
          <declname>module</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>abstract out the llvm::StructType::getTypeByName which has been removed in llvm 12. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/ModelDataIRBuilder.cpp" line="158" column="18" bodyfile="llvm/ModelDataIRBuilder.cpp" bodystart="158" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="ModelGeneratorContext_8cpp_1a9c91dbc70aeddd1d3f879a10a15029a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Function *</type>
        <definition>Function * rrllvm::createGlobalMappingFunction</definition>
        <argsstring>(const char *funcName, llvm::FunctionType *funcType, Module *module)</argsstring>
        <name>createGlobalMappingFunction</name>
        <param>
          <type>const char *</type>
          <declname>funcName</declname>
        </param>
        <param>
          <type>llvm::FunctionType *</type>
          <declname>funcType</declname>
        </param>
        <param>
          <type>Module *</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="104" column="10" bodyfile="llvm/Random.cpp" bodystart="104" bodyend="108" declfile="llvm/ModelGeneratorContext.cpp" declline="76" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="ModelGeneratorContext_8cpp_1a05192d98317f5b565127f4d58d164e9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SBMLDocument *</type>
        <definition>static SBMLDocument * rrllvm::checkedReadSBMLFromString</definition>
        <argsstring>(const char *xml)</argsstring>
        <name>checkedReadSBMLFromString</name>
        <param>
          <type>const char *</type>
          <declname>xml</declname>
        </param>
        <briefdescription>
<para>returns a VALID sbml document, if the doc has any error, an exception is thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/ModelGeneratorContext.cpp" line="325" column="25" bodyfile="llvm/ModelGeneratorContext.cpp" bodystart="325" bodyend="345" declfile="llvm/ModelGeneratorContext.cpp" declline="84" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="ModelGeneratorContext_8cpp_1ae8356aaa4689b5a491b99a5bab173123" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SBMLDocument *</type>
        <definition>static SBMLDocument* rrllvm::createEmptyDocument</definition>
        <argsstring>()</argsstring>
        <name>createEmptyDocument</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/ModelGeneratorContext.cpp" line="201" column="25" bodyfile="llvm/ModelGeneratorContext.cpp" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1afc9ac5c919e421b94e49063a0fa3a862" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Function *</type>
        <definition>static Function* rrllvm::createGlobalMappingFunction</definition>
        <argsstring>(const char *funcName, llvm::FunctionType *funcType, Module *module)</argsstring>
        <name>createGlobalMappingFunction</name>
        <param>
          <type>const char *</type>
          <declname>funcName</declname>
        </param>
        <param>
          <type>llvm::FunctionType *</type>
          <declname>funcType</declname>
        </param>
        <param>
          <type>Module *</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="56" column="17" declfile="llvm/Random.cpp" declline="56" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1aca27c6f8eacb77ec6d0bc7d8beb2905a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t rrllvm::defaultSeed</definition>
        <argsstring>()</argsstring>
        <name>defaultSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="60" column="16" bodyfile="llvm/Random.cpp" bodystart="60" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a0cdef3eb466def7934ab3a8a4f023447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_uniform</definition>
        <argsstring>(Random *random, double _min, double _max)</argsstring>
        <name>distrib_uniform</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="110" column="8" bodyfile="llvm/Random.cpp" bodystart="110" bodyend="122" declfile="llvm/Random.h" declline="125" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a6527022b1768f24d8322238a5067b6bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_normal</definition>
        <argsstring>(Random *random, double mu, double sigma)</argsstring>
        <name>distrib_normal</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="124" column="8" bodyfile="llvm/Random.cpp" bodystart="124" bodyend="132" declfile="llvm/Random.h" declline="126" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a6c358bfc6dc5908984655f259445f96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_normal_four</definition>
        <argsstring>(Random *random, double mu, double sigma, double _min, double _max)</argsstring>
        <name>distrib_normal_four</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="134" column="8" bodyfile="llvm/Random.cpp" bodystart="134" bodyend="161" declfile="llvm/Random.h" declline="127" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a1473f9c8fad2549c53e171cca6269734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_bernoulli</definition>
        <argsstring>(Random *random, double prob)</argsstring>
        <name>distrib_bernoulli</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="163" column="8" bodyfile="llvm/Random.cpp" bodystart="163" bodyend="171" declfile="llvm/Random.h" declline="128" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a91891f7f9237f54ac22b9d5a2aa512d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_binomial</definition>
        <argsstring>(Random *random, double nTrials, double probabilityOfSuccess)</argsstring>
        <name>distrib_binomial</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nTrials</declname>
        </param>
        <param>
          <type>double</type>
          <declname>probabilityOfSuccess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="173" column="8" bodyfile="llvm/Random.cpp" bodystart="173" bodyend="181" declfile="llvm/Random.h" declline="129" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a5e36ccbb238a35377ce67a51fdf99a32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_binomial_four</definition>
        <argsstring>(Random *random, double nTrials, double probabilityOfSuccess, double _min, double _max)</argsstring>
        <name>distrib_binomial_four</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nTrials</declname>
        </param>
        <param>
          <type>double</type>
          <declname>probabilityOfSuccess</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="183" column="8" bodyfile="llvm/Random.cpp" bodystart="183" bodyend="210" declfile="llvm/Random.h" declline="130" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1aba08203c4e28cce82ece91ae0d951be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_cauchy</definition>
        <argsstring>(Random *random, double location, double scale)</argsstring>
        <name>distrib_cauchy</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>location</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="212" column="8" bodyfile="llvm/Random.cpp" bodystart="212" bodyend="220" declfile="llvm/Random.h" declline="131" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a881f3cc304b827dddb4b1027c1d86fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_cauchy_one</definition>
        <argsstring>(Random *random, double scale)</argsstring>
        <name>distrib_cauchy_one</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="222" column="8" bodyfile="llvm/Random.cpp" bodystart="222" bodyend="231" declfile="llvm/Random.h" declline="132" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1af0fa8a6b697f80f097bd8a14cc4ea95b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_cauchy_four</definition>
        <argsstring>(Random *random, double location, double scale, double _min, double _max)</argsstring>
        <name>distrib_cauchy_four</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>location</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="233" column="8" bodyfile="llvm/Random.cpp" bodystart="233" bodyend="260" declfile="llvm/Random.h" declline="133" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a75d79c0a6e98c76ff15fe0f25285a43e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_chisquare</definition>
        <argsstring>(Random *random, double degreesOfFreedom)</argsstring>
        <name>distrib_chisquare</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>degreesOfFreedom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="262" column="8" bodyfile="llvm/Random.cpp" bodystart="262" bodyend="270" declfile="llvm/Random.h" declline="134" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1acdc359a2a5dcda76252c98f14c2c5b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_chisquare_three</definition>
        <argsstring>(Random *random, double degreesOfFreedom, double _min, double _max)</argsstring>
        <name>distrib_chisquare_three</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>degreesOfFreedom</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="272" column="8" bodyfile="llvm/Random.cpp" bodystart="272" bodyend="299" declfile="llvm/Random.h" declline="135" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a2b1b274665c50e773fa7ed1862234370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_exponential</definition>
        <argsstring>(Random *random, double lambda)</argsstring>
        <name>distrib_exponential</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="301" column="8" bodyfile="llvm/Random.cpp" bodystart="301" bodyend="309" declfile="llvm/Random.h" declline="136" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a2e1491b984491eb25077d51f3ed325e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_exponential_three</definition>
        <argsstring>(Random *random, double lambda, double _min, double _max)</argsstring>
        <name>distrib_exponential_three</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lambda</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="311" column="8" bodyfile="llvm/Random.cpp" bodystart="311" bodyend="338" declfile="llvm/Random.h" declline="137" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1acc7a72b35c4ce30f21092c31c4cf5b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_gamma</definition>
        <argsstring>(Random *random, double shape, double scale)</argsstring>
        <name>distrib_gamma</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="340" column="8" bodyfile="llvm/Random.cpp" bodystart="340" bodyend="348" declfile="llvm/Random.h" declline="138" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1abec38352939794d3a7d48e5195818089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_gamma_four</definition>
        <argsstring>(Random *random, double shape, double scale, double _min, double _max)</argsstring>
        <name>distrib_gamma_four</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="350" column="8" bodyfile="llvm/Random.cpp" bodystart="350" bodyend="377" declfile="llvm/Random.h" declline="139" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a976480058b2b493e869677e39ae7ae2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_laplace</definition>
        <argsstring>(Random *random, double location, double scale)</argsstring>
        <name>distrib_laplace</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>location</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="379" column="8" bodyfile="llvm/Random.cpp" bodystart="379" bodyend="389" declfile="llvm/Random.h" declline="140" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a632dcf161590aec0969d09561f48d2a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_laplace_one</definition>
        <argsstring>(Random *random, double scale)</argsstring>
        <name>distrib_laplace_one</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="391" column="8" bodyfile="llvm/Random.cpp" bodystart="391" bodyend="402" declfile="llvm/Random.h" declline="141" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1ac628ecaf57fd22b779b6a75cddd43c2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_laplace_four</definition>
        <argsstring>(Random *random, double location, double scale, double _min, double _max)</argsstring>
        <name>distrib_laplace_four</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>location</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="404" column="8" bodyfile="llvm/Random.cpp" bodystart="404" bodyend="435" declfile="llvm/Random.h" declline="142" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a3af54f1eaae2aec0694cfc71c3f18689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_lognormal</definition>
        <argsstring>(Random *random, double mu, double sigma)</argsstring>
        <name>distrib_lognormal</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="437" column="8" bodyfile="llvm/Random.cpp" bodystart="437" bodyend="445" declfile="llvm/Random.h" declline="143" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a04f32907ab3e02236fb0572c8daf663c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_lognormal_four</definition>
        <argsstring>(Random *random, double mu, double sigma, double _min, double _max)</argsstring>
        <name>distrib_lognormal_four</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="447" column="8" bodyfile="llvm/Random.cpp" bodystart="447" bodyend="474" declfile="llvm/Random.h" declline="144" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a7db3965410c59be7bf7e399655d22295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_poisson</definition>
        <argsstring>(Random *random, double lambda)</argsstring>
        <name>distrib_poisson</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="476" column="8" bodyfile="llvm/Random.cpp" bodystart="476" bodyend="484" declfile="llvm/Random.h" declline="145" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1ad527b7a6141335be69626b02c5492006" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_poisson_three</definition>
        <argsstring>(Random *random, double lambda, double _min, double _max)</argsstring>
        <name>distrib_poisson_three</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lambda</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="486" column="8" bodyfile="llvm/Random.cpp" bodystart="486" bodyend="513" declfile="llvm/Random.h" declline="146" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1a193ec272e008dee8a6c5b3d78c27d8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_rayleigh</definition>
        <argsstring>(Random *random, double scale)</argsstring>
        <name>distrib_rayleigh</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="515" column="8" bodyfile="llvm/Random.cpp" bodystart="515" bodyend="528" declfile="llvm/Random.h" declline="147" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="Random_8cpp_1aa74176d05915d8e112ea20786a04a33a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rrllvm::distrib_rayleigh_three</definition>
        <argsstring>(Random *random, double scale, double _min, double _max)</argsstring>
        <name>distrib_rayleigh_three</name>
        <param>
          <type><ref refid="classrr_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/Random.cpp" line="530" column="8" bodyfile="llvm/Random.cpp" bodystart="530" bodyend="561" declfile="llvm/Random.h" declline="148" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="llvm/AssignmentRuleEvaluator.cpp" line="17" column="1"/>
  </compounddef>
</doxygen>
