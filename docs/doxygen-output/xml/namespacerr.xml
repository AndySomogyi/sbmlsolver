<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="namespacerr" kind="namespace" language="C++">
    <compoundname>rr</compoundname>
    <innerclass refid="classrr_1_1BasicDictionary" prot="public">rr::BasicDictionary</innerclass>
    <innerclass refid="classrr_1_1Compiler" prot="public">rr::Compiler</innerclass>
    <innerclass refid="classrr_1_1Config" prot="public">rr::Config</innerclass>
    <innerclass refid="classrr_1_1CoreException" prot="public">rr::CoreException</innerclass>
    <innerclass refid="structrr_1_1csr__matrix__t" prot="public">rr::csr_matrix_t</innerclass>
    <innerclass refid="classrr_1_1CVODEException" prot="public">rr::CVODEException</innerclass>
    <innerclass refid="classrr_1_1CVODEIntegrator" prot="public">rr::CVODEIntegrator</innerclass>
    <innerclass refid="classrr_1_1CVODEIntegratorRegistrar" prot="public">rr::CVODEIntegratorRegistrar</innerclass>
    <innerclass refid="classrr_1_1Dictionary" prot="public">rr::Dictionary</innerclass>
    <innerclass refid="classrr_1_1EulerIntegrator" prot="public">rr::EulerIntegrator</innerclass>
    <innerclass refid="classrr_1_1EulerIntegratorRegistrar" prot="public">rr::EulerIntegratorRegistrar</innerclass>
    <innerclass refid="classrr_1_1EventListener" prot="public">rr::EventListener</innerclass>
    <innerclass refid="classrr_1_1EventListenerException" prot="public">rr::EventListenerException</innerclass>
    <innerclass refid="classrr_1_1Exception" prot="public">rr::Exception</innerclass>
    <innerclass refid="classrr_1_1ExecutableModel" prot="public">rr::ExecutableModel</innerclass>
    <innerclass refid="classrr_1_1ExecutableModelFactory" prot="public">rr::ExecutableModelFactory</innerclass>
    <innerclass refid="classrr_1_1FileName" prot="public">rr::FileName</innerclass>
    <innerclass refid="classrr_1_1GillespieIntegrator" prot="public">rr::GillespieIntegrator</innerclass>
    <innerclass refid="classrr_1_1GillespieIntegratorRegistrar" prot="public">rr::GillespieIntegratorRegistrar</innerclass>
    <innerclass refid="classrr_1_1IniFile" prot="public">rr::IniFile</innerclass>
    <innerclass refid="classrr_1_1IniKey" prot="public">rr::IniKey</innerclass>
    <innerclass refid="classrr_1_1IniSection" prot="public">rr::IniSection</innerclass>
    <innerclass refid="classrr_1_1Integrator" prot="public">rr::Integrator</innerclass>
    <innerclass refid="classrr_1_1IntegratorException" prot="public">rr::IntegratorException</innerclass>
    <innerclass refid="classrr_1_1IntegratorFactory" prot="public">rr::IntegratorFactory</innerclass>
    <innerclass refid="classrr_1_1IntegratorListener" prot="public">rr::IntegratorListener</innerclass>
    <innerclass refid="classrr_1_1IntegratorRegistrar" prot="public">rr::IntegratorRegistrar</innerclass>
    <innerclass refid="classrr_1_1IntegratorRegistrationMgr" prot="public">rr::IntegratorRegistrationMgr</innerclass>
    <innerclass refid="classrr_1_1InvalidKeyException" prot="public">rr::InvalidKeyException</innerclass>
    <innerclass refid="classrr_1_1LoadSBMLOptions" prot="public">rr::LoadSBMLOptions</innerclass>
    <innerclass refid="classrr_1_1Logger" prot="public">rr::Logger</innerclass>
    <innerclass refid="classrr_1_1LoggingBuffer" prot="public">rr::LoggingBuffer</innerclass>
    <innerclass refid="classrr_1_1NLEQ1Interface" prot="public">rr::NLEQ1Interface</innerclass>
    <innerclass refid="classrr_1_1NLEQ1Solver" prot="public">rr::NLEQ1Solver</innerclass>
    <innerclass refid="classrr_1_1NLEQ1SolverRegistrar" prot="public">rr::NLEQ1SolverRegistrar</innerclass>
    <innerclass refid="classrr_1_1NLEQ2Interface" prot="public">rr::NLEQ2Interface</innerclass>
    <innerclass refid="classrr_1_1NLEQ2Solver" prot="public">rr::NLEQ2Solver</innerclass>
    <innerclass refid="classrr_1_1NLEQ2SolverRegistrar" prot="public">rr::NLEQ2SolverRegistrar</innerclass>
    <innerclass refid="classrr_1_1NLEQException" prot="public">rr::NLEQException</innerclass>
    <innerclass refid="classrr_1_1NOMException" prot="public">rr::NOMException</innerclass>
    <innerclass refid="classrr_1_1NotImplementedException" prot="public">rr::NotImplementedException</innerclass>
    <innerclass refid="classrr_1_1RK45Integrator" prot="public">rr::RK45Integrator</innerclass>
    <innerclass refid="classrr_1_1RK45IntegratorRegistrar" prot="public">rr::RK45IntegratorRegistrar</innerclass>
    <innerclass refid="classrr_1_1RK4Integrator" prot="public">rr::RK4Integrator</innerclass>
    <innerclass refid="classrr_1_1RK4IntegratorRegistrar" prot="public">rr::RK4IntegratorRegistrar</innerclass>
    <innerclass refid="classrr_1_1RoadRunner" prot="public">rr::RoadRunner</innerclass>
    <innerclass refid="classrr_1_1RoadRunnerData" prot="public">rr::RoadRunnerData</innerclass>
    <innerclass refid="classrr_1_1RoadRunnerImpl" prot="public">rr::RoadRunnerImpl</innerclass>
    <innerclass refid="structrr_1_1RoadRunnerOptions" prot="public">rr::RoadRunnerOptions</innerclass>
    <innerclass refid="structrr_1_1rrSteadyStateOptions" prot="public">rr::rrSteadyStateOptions</innerclass>
    <innerclass refid="classrr_1_1rrSteadyStateSolver" prot="public">rr::rrSteadyStateSolver</innerclass>
    <innerclass refid="classrr_1_1SBMLModelSimulation" prot="public">rr::SBMLModelSimulation</innerclass>
    <innerclass refid="classrr_1_1SBMLReader" prot="public">rr::SBMLReader</innerclass>
    <innerclass refid="classrr_1_1ScannerException" prot="public">rr::ScannerException</innerclass>
    <innerclass refid="classrr_1_1SelectionRecord" prot="public">rr::SelectionRecord</innerclass>
    <innerclass refid="classrr_1_1SimulateOptions" prot="public">rr::SimulateOptions</innerclass>
    <innerclass refid="classrr_1_1Solver" prot="public">rr::Solver</innerclass>
    <innerclass refid="classrr_1_1SolverRegistrationMgr" prot="public">rr::SolverRegistrationMgr</innerclass>
    <innerclass refid="structrr_1_1sort__pred" prot="public">rr::sort_pred</innerclass>
    <innerclass refid="classrr_1_1SteadyStateSolver" prot="public">rr::SteadyStateSolver</innerclass>
    <innerclass refid="classrr_1_1SteadyStateSolverFactory" prot="public">rr::SteadyStateSolverFactory</innerclass>
    <innerclass refid="classrr_1_1SteadyStateSolverRegistrar" prot="public">rr::SteadyStateSolverRegistrar</innerclass>
    <innerclass refid="classrr_1_1TestSuiteModelSimulation" prot="public">rr::TestSuiteModelSimulation</innerclass>
    <innerclass refid="classrr_1_1UninitializedValueException" prot="public">rr::UninitializedValueException</innerclass>
    <innerclass refid="classrr_1_1Variant" prot="public">rr::Variant</innerclass>
    <innerclass refid="structrr_1_1VariantImpl" prot="public">rr::VariantImpl</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="rrConstants_8h_1a2f22df52beab4b09418ce2a7966f5838" prot="public" static="no" strong="no">
        <type></type>
        <name>SBMLType</name>
        <enumvalue id="rrConstants_8h_1a2f22df52beab4b09418ce2a7966f5838ab6b42795286e312b309617aab1edf045" prot="public">
          <name>stCompartment</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrConstants_8h_1a2f22df52beab4b09418ce2a7966f5838a786262f2c9a0943562a639053a786afb" prot="public">
          <name>stSpecies</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrConstants_8h_1a2f22df52beab4b09418ce2a7966f5838a9bf69ba641af67fd22d8a4d811278aa9" prot="public">
          <name>stParameter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.h" line="35" column="1" bodyfile="rrConstants.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="enum" id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005" prot="public" static="no" strong="no">
        <type></type>
        <name>LogLevel</name>
        <enumvalue id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005a57ea5f7b58b033bb996dff4fc61111c2" prot="public">
          <name>lAny</name>
          <initializer>= Logger::LOG_ERROR</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005a583ad5f4b72b03317171c6f551c8fe5f" prot="public">
          <name>lError</name>
          <initializer>= Logger::LOG_ERROR</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005a00aa81761706ab49daf71fa6e5f551a8" prot="public">
          <name>lWarning</name>
          <initializer>= Logger::LOG_WARNING</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005a2f42fa8f4f5a1517178f590d89926b25" prot="public">
          <name>lInfo</name>
          <initializer>= Logger::LOG_INFORMATION</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005a084507cdaef3a71aa5fac1bd2ba49cf6" prot="public">
          <name>lDebug</name>
          <initializer>= Logger::LOG_DEBUG</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005aef41bfdd00db7a5493b994ad38b29df6" prot="public">
          <name>lDebug1</name>
          <initializer>= Logger::LOG_TRACE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005a5861aa71de669526e837b8333143b4a5" prot="public">
          <name>lDebug2</name>
          <initializer>= Logger::LOG_TRACE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005a3358096093513cf8f0634aee17280385" prot="public">
          <name>lDebug3</name>
          <initializer>= Logger::LOG_TRACE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005ac3a4c65456d59ce5ec9727134784da62" prot="public">
          <name>lDebug4</name>
          <initializer>= Logger::LOG_TRACE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005a6a3f5f1f3357952ab0e565ff7477e224" prot="public">
          <name>lDebug5</name>
          <initializer>= Logger::LOG_TRACE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrLogger_8h_1a83364c91d5282fcf907b0fcf14af9005afc1ec5e492e1e63ca85d42b0a686b5e8" prot="public">
          <name>lUser</name>
          <initializer>= Logger::LOG_TRACE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>old logging levels, here for compatibility </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.h" line="284" column="1" bodyfile="rrLogger.h" bodystart="285" bodyend="297"/>
      </memberdef>
      <memberdef kind="enum" id="rrRoadRunner_8cpp_1a61c49222ad5319277c02823eaa961f56" prot="public" static="no" strong="no">
        <type></type>
        <name>ParameterType</name>
        <enumvalue id="rrRoadRunner_8cpp_1a61c49222ad5319277c02823eaa961f56a3dba6d50202df38b2f98df112f02e042" prot="public">
          <name>ptGlobalParameter</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrRoadRunner_8cpp_1a61c49222ad5319277c02823eaa961f56a336c860c1f4d6fc972a711095c0018fe" prot="public">
          <name>ptLocalParameter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrRoadRunner_8cpp_1a61c49222ad5319277c02823eaa961f56a8888f4e11cd052e0584d154b93086118" prot="public">
          <name>ptBoundaryParameter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrRoadRunner_8cpp_1a61c49222ad5319277c02823eaa961f56a9ece480b3e8b36b5c9cfb34d051811b4" prot="public">
          <name>ptConservationParameter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrRoadRunner_8cpp_1a61c49222ad5319277c02823eaa961f56a1235718ad15aaac0d900ef332c146ecf" prot="public">
          <name>ptFloatingSpecies</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The type of sbml element that the RoadRunner::setParameterValue and RoadRunner::getParameterValue method operate on. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use the <ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> methods directly. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="159" column="1" bodyfile="rrRoadRunner.cpp" bodystart="160" bodyend="166"/>
      </memberdef>
      <memberdef kind="enum" id="rrVersionInfo_8h_1a50723fed79be1ce514a65d4e010aff3b" prot="public" static="no" strong="no">
        <type></type>
        <name>VersionStrOptions</name>
        <enumvalue id="rrVersionInfo_8h_1a50723fed79be1ce514a65d4e010aff3ba6629a8b77bfe508c80f97b575d4a23df" prot="public">
          <name>VERSIONSTR_BASIC</name>
          <initializer>= (0x1 &lt;&lt; 0)</initializer>
          <briefdescription>
<para>the basic version string, i.e. </para>
          </briefdescription>
          <detaileddescription>
<para>&quot;1.0.0&quot; </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrVersionInfo_8h_1a50723fed79be1ce514a65d4e010aff3bae0e5e919c0af20e824ce3ce0d5bcc4b1" prot="public">
          <name>VERSIONSTR_COMPILER</name>
          <initializer>= (0x1 &lt;&lt; 1)</initializer>
          <briefdescription>
<para>the compiler string </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrVersionInfo_8h_1a50723fed79be1ce514a65d4e010aff3ba2a835cad56772ffa8c765cd58c1c5634" prot="public">
          <name>VERSIONSTR_DATE</name>
          <initializer>= (0x1 &lt;&lt; 2)</initializer>
          <briefdescription>
<para>when roadrunner was compiled </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrVersionInfo_8h_1a50723fed79be1ce514a65d4e010aff3baf0440a04cdcb35f3631313271311b8af" prot="public">
          <name>VERSIONSTR_LIBSBML</name>
          <initializer>= (0x1 &lt;&lt; 3)</initializer>
          <briefdescription>
<para>the version of libSBML we&apos;re using </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrVersionInfo_8h_1a50723fed79be1ce514a65d4e010aff3ba245d09cebef10dc72e44559d0f173fe8" prot="public">
          <name>VERSIONSTR_JITCOMPILER</name>
          <initializer>= (0x1 &lt;&lt; 4)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrVersionInfo_8h_1a50723fed79be1ce514a65d4e010aff3ba60f8eb486c3078c258f5518a5a7eb54e" prot="public">
          <name>VERSIONSTR_GIT_BRANCH</name>
          <initializer>= (0x1 &lt;&lt; 5)</initializer>
          <briefdescription>
<para>what git branch we are on. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrVersionInfo_8h_1a50723fed79be1ce514a65d4e010aff3ba47aea2b9e3498cbec0d49c1774619e40" prot="public">
          <name>VERSIONSTR_GIT_COMMIT</name>
          <initializer>= (0x1 &lt;&lt; 6)</initializer>
          <briefdescription>
<para>the last commit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>various options of how the get the version string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrVersionInfo.h" line="62" column="1" bodyfile="rrVersionInfo.h" bodystart="63" bodyend="95"/>
      </memberdef>
      <memberdef kind="enum" id="SBMLValidator_8h_1ae9b68e1552acb4d494177d09c229a409" prot="public" static="no" strong="no">
        <type></type>
        <name>ValidateSBML</name>
        <enumvalue id="SBMLValidator_8h_1ae9b68e1552acb4d494177d09c229a409a91e73467ba3dbd6a274dab8e7fac52c9" prot="public">
          <name>VALIDATE_UNITS</name>
          <initializer>= (0x1 &lt;&lt; 0)</initializer>
          <briefdescription>
<para>Check consistency of measurement units associated with quantities (SBML L2V4 rules 105nn) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SBMLValidator_8h_1ae9b68e1552acb4d494177d09c229a409a7f2f9396276f61dfd45f1f142724e219" prot="public">
          <name>VALIDATE_IDENTIFIER</name>
          <initializer>= (0x1 &lt;&lt; 1)</initializer>
          <briefdescription>
<para>Check correctness and consistency of identifiers used for model entities (SBML L2V4 rules 103nn) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SBMLValidator_8h_1ae9b68e1552acb4d494177d09c229a409a6cc0cf10536bed22698c42fd731774a6" prot="public">
          <name>VALIDATE_MATHML</name>
          <initializer>= (0x1 &lt;&lt; 2)</initializer>
          <briefdescription>
<para>Check syntax of MathML mathematical expressions (SBML L2V4 rules 102nn) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SBMLValidator_8h_1ae9b68e1552acb4d494177d09c229a409a093b0b6c543098c99ad94fcd33ff4057" prot="public">
          <name>VALIDATE_SBO</name>
          <initializer>= (0x1 &lt;&lt; 3)</initializer>
          <briefdescription>
<para>Check validity of SBO identifiers (if any) used in the model (SBML L2V4 rules 107nn) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SBMLValidator_8h_1ae9b68e1552acb4d494177d09c229a409ae6252f4c7f8ed6da606a0a9d18bd5d32" prot="public">
          <name>VALIDATE_OVERDETERMINED</name>
          <initializer>= (0x1 &lt;&lt; 4)</initializer>
          <briefdescription>
<para>Perform static analysis of whether the model is overdetermined. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SBMLValidator_8h_1ae9b68e1552acb4d494177d09c229a409acb352e2696534ae296172f6bc0a28a7b" prot="public">
          <name>VALIDATE_MODELING_PRACTICE</name>
          <initializer>= (0x1 &lt;&lt; 5)</initializer>
          <briefdescription>
<para>Perform additional checks for recommended good modeling practices. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SBMLValidator_8h_1ae9b68e1552acb4d494177d09c229a409aab5e037fc089b392bd806c27b1499268" prot="public">
          <name>VALIDATE_GENERAL</name>
          <initializer>= (0x1 &lt;&lt; 6)</initializer>
          <briefdescription>
<para>Perform all other general SBML consistency checks (SBML L2V4 rules 2nnnn; highly recommended) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SBMLValidator.h" line="17" column="1" bodyfile="SBMLValidator.h" bodystart="18" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="Integrator_8h_1af88f77fb0c8c61ee1848be4c0894ac02" prot="public" static="no">
        <type>cxx11_ns::shared_ptr&lt; <ref refid="classrr_1_1IntegratorListener" kindref="compound">IntegratorListener</ref> &gt;</type>
        <definition>typedef cxx11_ns::shared_ptr&lt;IntegratorListener&gt; rr::IntegratorListenerPtr</definition>
        <argsstring></argsstring>
        <name>IntegratorListenerPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Integrator.h" line="57" column="30" bodyfile="Integrator.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrConfig_8cpp_1ac1de6936195f5f9052335c70a9796a58" prot="public" static="no">
        <type>cxx11_ns::unordered_map&lt; std::string, int &gt;</type>
        <definition>typedef cxx11_ns::unordered_map&lt;std::string, int&gt; rr::StringIntMap</definition>
        <argsstring></argsstring>
        <name>StringIntMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConfig.cpp" line="44" column="33" bodyfile="rrConfig.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrExecutableModel_8h_1af42654ad469e89c71909fbbff90b3c07" prot="public" static="no">
        <type>cxx11_ns::shared_ptr&lt; <ref refid="classrr_1_1EventListener" kindref="compound">EventListener</ref> &gt;</type>
        <definition>typedef cxx11_ns::shared_ptr&lt;EventListener&gt; rr::EventListenerPtr</definition>
        <argsstring></argsstring>
        <name>EventListenerPtr</name>
        <briefdescription>
<para>listeners are shared objects, so use std smart pointers to manage them. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrExecutableModel.h" line="72" column="34" bodyfile="rrExecutableModel.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrIniFile_8h_1ab9ebf92da929093088c06d28fedd9d45" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classrr_1_1IniKey" kindref="compound">IniKey</ref> * &gt;</type>
        <definition>typedef std::vector&lt; IniKey * &gt; rr::KeyList</definition>
        <argsstring></argsstring>
        <name>KeyList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrIniFile.h" line="25" column="33" bodyfile="rrIniFile.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrIniFile_8h_1a9effc5420276eff1ff5fb8fad8ba6911" prot="public" static="no">
        <type>std::vector&lt; string &gt;</type>
        <definition>typedef std::vector&lt; string &gt; rr::NonKeyList</definition>
        <argsstring></argsstring>
        <name>NonKeyList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrIniFile.h" line="26" column="33" bodyfile="rrIniFile.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrIniFile_8h_1ae09add45e217ceb31e3073c599c25541" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classrr_1_1IniSection" kindref="compound">IniSection</ref> * &gt;</type>
        <definition>typedef std::vector&lt;IniSection*&gt; rr::SectionList</definition>
        <argsstring></argsstring>
        <name>SectionList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrIniFile.h" line="27" column="30" bodyfile="rrIniFile.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrIniFile_8h_1a14b8a5d8560799b00bda3bd98084a2f7" prot="public" static="no">
        <type>SectionList::iterator</type>
        <definition>typedef SectionList::iterator rr::SectionItor</definition>
        <argsstring></argsstring>
        <name>SectionItor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrIniFile.h" line="28" column="41" bodyfile="rrIniFile.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrIniSection_8h_1a38624057ef979173229c5fd7824e6445" prot="public" static="no">
        <type>KeyList::iterator</type>
        <definition>typedef KeyList::iterator rr::KeyItor</definition>
        <argsstring></argsstring>
        <name>KeyItor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrIniSection.h" line="13" column="43" bodyfile="rrIniSection.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrIniSection_8h_1a00c945f321f9d4d99587fdaaa14847df" prot="public" static="no">
        <type>NonKeyList::iterator</type>
        <definition>typedef NonKeyList::iterator rr::NonKeyItor</definition>
        <argsstring></argsstring>
        <name>NonKeyItor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrIniSection.h" line="15" column="42" bodyfile="rrIniSection.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrRoadRunner_8cpp_1af7a42b4803d5da5784e2ff9cb6d440a8" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>typedef std::vector&lt;std::string&gt; rr::string_vector</definition>
        <argsstring></argsstring>
        <name>string_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="77" column="21" bodyfile="rrRoadRunner.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrRoadRunner_8cpp_1a3b120721e4a0aa35296922f8bc7f6083" prot="public" static="no">
        <type>string(ExecutableModel::*</type>
        <definition>typedef string(ExecutableModel::* rr::GetNameFuncPtr) (size_t)</definition>
        <argsstring>)(size_t)</argsstring>
        <name>GetNameFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="83" column="9" bodyfile="rrRoadRunner.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrRoadRunner_8cpp_1af48f09ff45a9173cae0c3617ac84ea11" prot="public" static="no">
        <type>int(ExecutableModel::*</type>
        <definition>typedef int(ExecutableModel::* rr::GetNumFuncPtr) ()</definition>
        <argsstring>)()</argsstring>
        <name>GetNumFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="84" column="9" bodyfile="rrRoadRunner.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrRoadRunner_8cpp_1a67c05b3923fa2ea722f9eb140e00957b" prot="public" static="no">
        <type>std::list&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>typedef std::list&lt;std::vector&lt;double&gt; &gt; rr::DoubleVectorList</definition>
        <argsstring></argsstring>
        <name>DoubleVectorList</name>
        <briefdescription>
<para>variable time step integration data struct </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="129" column="19" bodyfile="rrRoadRunner.cpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rrSparse_8h_1aa8a36b3ce021dddb42f59ad71b3346d8" prot="public" static="no">
        <type>struct <ref refid="structrr_1_1csr__matrix__t" kindref="compound">rr::csr_matrix_t</ref></type>
        <definition>typedef struct rr::csr_matrix_t rr::csr_matrix</definition>
        <argsstring></argsstring>
        <name>csr_matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSparse.h" line="68" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="rrConfig_8cpp_1a17dc4769c21b82b396742135681b0af7" prot="public" static="yes" mutable="no">
        <type><ref refid="classrr_1_1Variant" kindref="compound">Variant</ref></type>
        <definition>Variant rr::values[]</definition>
        <argsstring>[]</argsstring>
        <name>values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConfig.cpp" line="80" column="16" bodyfile="rrConfig.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrConfig_8cpp_1a37fae06d4bceadff561d9643590b2b76" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool rr::initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConfig.cpp" line="145" column="13" bodyfile="rrConfig.cpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrConfig_8cpp_1ac5e9124f77795fe26b1eac6c231ec543" prot="public" static="yes" mutable="no">
        <type>Mutex</type>
        <definition>Mutex rr::configMutex</definition>
        <argsstring></argsstring>
        <name>configMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConfig.cpp" line="146" column="14" bodyfile="rrConfig.cpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1aee1cd78af699ae9b98cd6256c37551d6" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>RR_DECLSPEC const char * rr::gComma</definition>
        <argsstring></argsstring>
        <name>gComma</name>
        <initializer>= &quot;,&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="10" column="20" bodyfile="rrConstants.cpp" bodystart="10" bodyend="-1" declfile="rrConstants.h" declline="19" declcolumn="43"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1abbf9710691cf35d54f524cd42f247925" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>RR_DECLSPEC const char rr::gTab</definition>
        <argsstring></argsstring>
        <name>gTab</name>
        <initializer>= &apos;\t&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="11" column="25" bodyfile="rrConstants.cpp" bodystart="11" bodyend="-1" declfile="rrConstants.h" declline="28" declcolumn="35"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1a8629f47cf7f9d8f1638b751643169f19" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>RR_DECLSPEC const char rr::gNL</definition>
        <argsstring></argsstring>
        <name>gNL</name>
        <initializer>= &apos;\n&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="12" column="25" bodyfile="rrConstants.cpp" bodystart="12" bodyend="-1" declfile="rrConstants.h" declline="29" declcolumn="35"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1a535a4b5063a220e6c28c851646f4e885" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>RR_DECLSPEC const char * rr::gDoubleFormat</definition>
        <argsstring></argsstring>
        <name>gDoubleFormat</name>
        <initializer>= &quot;%f&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="13" column="20" bodyfile="rrConstants.cpp" bodystart="13" bodyend="-1" declfile="rrConstants.h" declline="17" declcolumn="43"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1a29fa8290d6819b9562e0233715d4e749" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>RR_DECLSPEC const char * rr::gIntFormat</definition>
        <argsstring></argsstring>
        <name>gIntFormat</name>
        <initializer>= &quot;%d&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="14" column="20" bodyfile="rrConstants.cpp" bodystart="14" bodyend="-1" declfile="rrConstants.h" declline="18" declcolumn="43"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1a8071263fe2845cd4c8afee4d4d604afd" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>RR_DECLSPEC const std::string rr::gNoneString</definition>
        <argsstring></argsstring>
        <name>gNoneString</name>
        <initializer>= &quot;&lt;none&gt;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="16" column="21" bodyfile="rrConstants.cpp" bodystart="16" bodyend="-1" declfile="rrConstants.h" declline="20" declcolumn="42"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1a8d8950ee49418b0c213e229d2745ec46" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>RR_DECLSPEC const std::string rr::gEmptyString</definition>
        <argsstring></argsstring>
        <name>gEmptyString</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="17" column="21" bodyfile="rrConstants.cpp" bodystart="17" bodyend="-1" declfile="rrConstants.h" declline="21" declcolumn="41"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1a957f80bb529634175e903dbd849c5c50" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>RR_DECLSPEC const int rr::gMaxPath</definition>
        <argsstring></argsstring>
        <name>gMaxPath</name>
        <initializer>= 512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="19" column="23" bodyfile="rrConstants.cpp" bodystart="19" bodyend="-1" declfile="rrConstants.h" declline="32" declcolumn="33"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1ab6ea18418aa3901dddb76ed60d8140ee" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>RR_DECLSPEC const double rr::gDoubleNaN</definition>
        <argsstring></argsstring>
        <name>gDoubleNaN</name>
        <initializer>= std::numeric_limits&lt;double&gt;::quiet_NaN()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="20" column="21" bodyfile="rrConstants.cpp" bodystart="20" bodyend="-1" declfile="rrConstants.h" declline="30" declcolumn="36"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1a5ae8e5d14528a26f124acf9ea034aaa6" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>RR_DECLSPEC const float rr::gFloatNaN</definition>
        <argsstring></argsstring>
        <name>gFloatNaN</name>
        <initializer>= std::numeric_limits&lt;float&gt;::quiet_NaN()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="21" column="21" bodyfile="rrConstants.cpp" bodystart="21" bodyend="-1" declfile="rrConstants.h" declline="31" declcolumn="33"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1a2fb6a7e406a8d7288ea0a154216b4669" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>RR_DECLSPEC const std::string rr::gEmptyModelMessage</definition>
        <argsstring></argsstring>
        <name>gEmptyModelMessage</name>
        <initializer>= &quot;A model needs to be loaded before one can use this method&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="24" column="21" bodyfile="rrConstants.cpp" bodystart="24" bodyend="-1" declfile="rrConstants.h" declline="24" declcolumn="38"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1a4bffcbd28e00eaaedc42f024296d59a2" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>RR_DECLSPEC const char rr::gPathSeparator</definition>
        <argsstring></argsstring>
        <name>gPathSeparator</name>
        <initializer>= &apos;/&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="34" column="26" bodyfile="rrConstants.cpp" bodystart="34" bodyend="-1" declfile="rrConstants.h" declline="14" declcolumn="35"/>
      </memberdef>
      <memberdef kind="variable" id="rrConstants_8cpp_1a169d237b44f38c64cbf486483b200179" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>RR_DECLSPEC const std::string rr::gExeSuffix</definition>
        <argsstring></argsstring>
        <name>gExeSuffix</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConstants.cpp" line="35" column="25" bodyfile="rrConstants.cpp" bodystart="35" bodyend="-1" declfile="rrConstants.h" declline="15" declcolumn="38"/>
      </memberdef>
      <memberdef kind="variable" id="rrGetOptions_8cpp_1afa8818ae36ea0b8620e75b7de306f4e5" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>RR_DECLSPEC char * rr::rrOptArg</definition>
        <argsstring></argsstring>
        <name>rrOptArg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrGetOptions.cpp" line="9" column="9" bodyfile="rrGetOptions.cpp" bodystart="9" bodyend="-1" declfile="rrGetOptions.h" declline="9" declcolumn="52"/>
      </memberdef>
      <memberdef kind="variable" id="rrGetOptions_8cpp_1a1ce2b91fef36eae1dbc88f279a91c36b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>RR_DECLSPEC int rr::rrOptInd</definition>
        <argsstring></argsstring>
        <name>rrOptInd</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrGetOptions.cpp" line="10" column="10" bodyfile="rrGetOptions.cpp" bodystart="10" bodyend="-1" declfile="rrGetOptions.h" declline="7" declcolumn="53"/>
      </memberdef>
      <memberdef kind="variable" id="rrIniFile_8h_1ab689ee74563d33406879b36327717d96" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int rr::MAX_LINE_BUFFER_SIZE</definition>
        <argsstring></argsstring>
        <name>MAX_LINE_BUFFER_SIZE</name>
        <initializer>= 2048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrIniFile.h" line="20" column="11" bodyfile="rrIniFile.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrLogger_8cpp_1a240c8553279bcdb6e0690f8c8345d012" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool rr::coloredOutput</definition>
        <argsstring></argsstring>
        <name>coloredOutput</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="49" column="13" bodyfile="rrLogger.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrLogger_8cpp_1a3e0d42a5e9e1df5ab86801b641595730" prot="public" static="yes" mutable="no">
        <type>Poco::Logger *</type>
        <definition>Poco::Logger* rr::pocoLogger</definition>
        <argsstring></argsstring>
        <name>pocoLogger</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="53" column="21" bodyfile="rrLogger.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrLogger_8cpp_1a853449b5fbfed9a59c7be2463dbe4916" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>volatile int rr::logLevel</definition>
        <argsstring></argsstring>
        <name>logLevel</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="54" column="14" bodyfile="rrLogger.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrLogger_8cpp_1a4597728a843e6f12b85c8c1ec7095a67" prot="public" static="no" mutable="no">
        <type>const <ref refid="classrr_1_1Logger_1a72a52e7fe7be48e2ecad639c641ee8aa" kindref="member">Logger::Level</ref></type>
        <definition>const Logger::Level rr::defaultLogLevel</definition>
        <argsstring></argsstring>
        <name>defaultLogLevel</name>
        <initializer>= <ref refid="classrr_1_1Logger_1a72a52e7fe7be48e2ecad639c641ee8aaaa3e3ead40b6448c9d7893f1a33573984" kindref="member">Logger::LOG_NOTICE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="55" column="21" bodyfile="rrLogger.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrLogger_8cpp_1abc6a4e4600b7770a09f338bf5e4a790c" prot="public" static="yes" mutable="no">
        <type>std::string</type>
        <definition>std::string rr::logFileName</definition>
        <argsstring></argsstring>
        <name>logFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="56" column="20" bodyfile="rrLogger.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrLogger_8cpp_1aab874471cff9c53f86e87ec167c465ec" prot="public" static="yes" mutable="no">
        <type>std::ostream *</type>
        <definition>std::ostream* rr::consoleStream</definition>
        <argsstring></argsstring>
        <name>consoleStream</name>
        <initializer>= &amp;std::clog</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="59" column="21" bodyfile="rrLogger.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrLogger_8cpp_1a0e88c456a052958732ac5233de2db924" prot="public" static="yes" mutable="no">
        <type>SimpleFileChannel *</type>
        <definition>SimpleFileChannel* rr::simpleFileChannel</definition>
        <argsstring></argsstring>
        <name>simpleFileChannel</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="72" column="26" bodyfile="rrLogger.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrLogger_8cpp_1a41cc6befaca67660ee13483b39355609" prot="public" static="yes" mutable="no">
        <type>Channel *</type>
        <definition>Channel* rr::consoleChannel</definition>
        <argsstring></argsstring>
        <name>consoleChannel</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="73" column="16" bodyfile="rrLogger.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrLogger_8cpp_1ae2ad90f0b136d21a7478e5a6f7d8cc47" prot="public" static="yes" mutable="no">
        <type>Mutex</type>
        <definition>Mutex rr::loggerMutex</definition>
        <argsstring></argsstring>
        <name>loggerMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="75" column="14" bodyfile="rrLogger.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrNLEQ1Interface_8cpp_1aaa27339705c816f7d0ba3f12f5c6e7e2" prot="public" static="yes" mutable="no">
        <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
        <definition>ExecutableModel* rr::callbackModel</definition>
        <argsstring></argsstring>
        <name>callbackModel</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ1Interface.cpp" line="24" column="24" bodyfile="rrNLEQ1Interface.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrNLEQ1Interface_8cpp_1a1058e9d9f0742e30a8b0ebd2934e032f" prot="public" static="yes" mutable="no">
        <type>Mutex</type>
        <definition>Mutex rr::mutex</definition>
        <argsstring></argsstring>
        <name>mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ1Interface.cpp" line="28" column="14" bodyfile="rrNLEQ1Interface.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrNLEQ1Interface_8cpp_1a81d2604128bda074724901d654267de4" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* rr::keys[]</definition>
        <argsstring>[]</argsstring>
        <name>keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ1Interface.cpp" line="382" column="19" bodyfile="rrNLEQ1Interface.cpp" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrNLEQ2Interface_8cpp_1aaa27339705c816f7d0ba3f12f5c6e7e2" prot="public" static="yes" mutable="no">
        <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
        <definition>ExecutableModel* rr::callbackModel</definition>
        <argsstring></argsstring>
        <name>callbackModel</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ2Interface.cpp" line="24" column="24" bodyfile="rrNLEQ2Interface.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrNLEQ2Interface_8cpp_1a1058e9d9f0742e30a8b0ebd2934e032f" prot="public" static="yes" mutable="no">
        <type>Mutex</type>
        <definition>Mutex rr::mutex</definition>
        <argsstring></argsstring>
        <name>mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ2Interface.cpp" line="28" column="14" bodyfile="rrNLEQ2Interface.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrNLEQ2Interface_8cpp_1a81d2604128bda074724901d654267de4" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* rr::keys[]</definition>
        <argsstring>[]</argsstring>
        <name>keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ2Interface.cpp" line="389" column="19" bodyfile="rrNLEQ2Interface.cpp" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrRoadRunner_8cpp_1a7dfd18ec744c847eb875ac4070921fe8" prot="public" static="yes" mutable="no">
        <type>Mutex</type>
        <definition>Mutex rr::roadRunnerMutex</definition>
        <argsstring></argsstring>
        <name>roadRunnerMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="75" column="14" bodyfile="rrRoadRunner.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrRoadRunner_8cpp_1a7c3eab0b2c50956fefffc2708511c999" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int rr::mInstanceCount</definition>
        <argsstring></argsstring>
        <name>mInstanceCount</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="151" column="12" bodyfile="rrRoadRunner.cpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrSBMLReader_8cpp_1a888d8a9ffcc502f666e2216b17ae8c66" prot="public" static="yes" mutable="no">
        <type>Mutex</type>
        <definition>Mutex rr::httpFactoryMutex</definition>
        <argsstring></argsstring>
        <name>httpFactoryMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSBMLReader.cpp" line="41" column="14" bodyfile="rrSBMLReader.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrSBMLReader_8cpp_1a74dd21e65caa1b0d9ba4af117babb453" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool rr::httpFactoryRegistered</definition>
        <argsstring></argsstring>
        <name>httpFactoryRegistered</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSBMLReader.cpp" line="42" column="13" bodyfile="rrSBMLReader.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="CVODEIntegrator_8cpp_1a0e0b5b6cba398b7913a35234893ba975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rr::cvodeDyDtFcn</definition>
        <argsstring>(realtype t, N_Vector cv_y, N_Vector cv_ydot, void *userData)</argsstring>
        <name>cvodeDyDtFcn</name>
        <param>
          <type>realtype</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="CVODEIntegrator_8h_1a8a91260811ab3718acff6bc5bd55d374" kindref="member">N_Vector</ref></type>
          <declname>cv_y</declname>
        </param>
        <param>
          <type><ref refid="CVODEIntegrator_8h_1a8a91260811ab3718acff6bc5bd55d374" kindref="member">N_Vector</ref></type>
          <declname>cv_ydot</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CVODEIntegrator.cpp" line="1238" column="5" bodyfile="CVODEIntegrator.cpp" bodystart="1238" bodyend="1259" declfile="CVODEIntegrator.cpp" declline="35" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CVODEIntegrator_8cpp_1ad01271862994ece03d70c65edb3bb5d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rr::cvodeRootFcn</definition>
        <argsstring>(realtype t, N_Vector y, realtype *gout, void *userData)</argsstring>
        <name>cvodeRootFcn</name>
        <param>
          <type>realtype</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="CVODEIntegrator_8h_1a8a91260811ab3718acff6bc5bd55d374" kindref="member">N_Vector</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>realtype *</type>
          <declname>gout</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CVODEIntegrator.cpp" line="1307" column="5" bodyfile="CVODEIntegrator.cpp" bodystart="1307" bodyend="1320" declfile="CVODEIntegrator.cpp" declline="36" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CVODEIntegrator_8cpp_1a5c0899abfe5f1d2057c866d8c77875b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rr::SetVector</definition>
        <argsstring>(N_Vector v, int Index, double Value)</argsstring>
        <name>SetVector</name>
        <param>
          <type><ref refid="CVODEIntegrator_8h_1a8a91260811ab3718acff6bc5bd55d374" kindref="member">N_Vector</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CVODEIntegrator.cpp" line="39" column="13" bodyfile="CVODEIntegrator.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="CVODEIntegrator_8cpp_1acd04783ab41493d69ac81ff5a7ec5e8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double rr::GetVector</definition>
        <argsstring>(N_Vector v, int Index)</argsstring>
        <name>GetVector</name>
        <param>
          <type><ref refid="CVODEIntegrator_8h_1a8a91260811ab3718acff6bc5bd55d374" kindref="member">N_Vector</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CVODEIntegrator.cpp" line="45" column="15" bodyfile="CVODEIntegrator.cpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="CVODEIntegrator_8cpp_1a0af301973877a5f64b57749998b369bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::cvodeErrHandler</definition>
        <argsstring>(int error_code, const char *module, const char *function, char *msg, void *eh_data)</argsstring>
        <name>cvodeErrHandler</name>
        <param>
          <type>int</type>
          <declname>error_code</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>module</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>eh_data</declname>
        </param>
        <briefdescription>
<para>Purpose This function processes error and warning messages from CVODE and its sub-modules. </para>
        </briefdescription>
        <detaileddescription>
<para>Arguments: error_code: is the error code. module: is the name of the CVODE module reporting the error. function: is the name of the function in which the error occurred. msg: is the error message. eh_data: is a pointer to user data, the same as the eh_data parameter passed to CVodeSetErrHandlerFn. Return value: A CVErrHandlerFn function has no return value.</para>
<para>Notes: error_code is negative for errors and positive (CV_WARNING) for warnings. If a function that returns a pointer to memory encounters an error, it sets error_code to 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CVODEIntegrator.cpp" line="1493" column="6" bodyfile="CVODEIntegrator.cpp" bodystart="1493" bodyend="1510" declfile="CVODEIntegrator.cpp" declline="70" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="GillespieIntegrator_8cpp_1ab9d4e29b9a395362e1745bfc7ebaf5a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long rr::defaultSeed</definition>
        <argsstring>()</argsstring>
        <name>defaultSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="GillespieIntegrator.cpp" line="29" column="22" bodyfile="GillespieIntegrator.cpp" bodystart="29" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="IntegratorRegistration_8cpp_1ae71c6c363b0dadf4dc4d96fafb1ecfb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rr::register_integrators_at_init</definition>
        <argsstring>()</argsstring>
        <name>register_integrators_at_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IntegratorRegistration.cpp" line="33" column="17" bodyfile="IntegratorRegistration.cpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="rrConfig_8cpp_1adff16f2d5a5cafae53d69fcb162bfa54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string rr::strip</definition>
        <argsstring>(const std::string &amp;in)</argsstring>
        <name>strip</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>strip any leading or trailing whitespace </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConfig.cpp" line="59" column="20" bodyfile="rrConfig.cpp" bodystart="59" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="rrConfig_8cpp_1a37aaf7ea8b652992fa398f33d577cfa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rr::readDefaultConfig</definition>
        <argsstring>()</argsstring>
        <name>readDefaultConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConfig.cpp" line="148" column="13" bodyfile="rrConfig.cpp" bodystart="148" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="rrConfig_8cpp_1af90b1aaf7a3d78680de15fb095efc62f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rr::getKeyNames</definition>
        <argsstring>(StringIntMap &amp;keys)</argsstring>
        <name>getKeyNames</name>
        <param>
          <type>StringIntMap &amp;</type>
          <declname>keys</declname>
        </param>
        <briefdescription>
<para>load the names of the keys and values into a map </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConfig.cpp" line="173" column="13" bodyfile="rrConfig.cpp" bodystart="173" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="rrConfig_8cpp_1a74a039720b7fd872ae85fa0ede7de20c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string rr::reverseLookup</definition>
        <argsstring>(StringIntMap &amp;keys, Config::Keys k)</argsstring>
        <name>reverseLookup</name>
        <param>
          <type>StringIntMap &amp;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="classrr_1_1Config_1aed7c550b9e34222675cd152c9154d053" kindref="member">Config::Keys</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrConfig.cpp" line="263" column="20" bodyfile="rrConfig.cpp" bodystart="263" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="rrException_8cpp_1a4d802c64616bb4e90122ad7109ee4819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::UninitializedValue</definition>
        <argsstring>(const string &amp;msg)</argsstring>
        <name>UninitializedValue</name>
        <param>
          <type>const string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Called whenever an uninitialized value is encountered, throws <ref refid="classrr_1_1UninitializedValueException" kindref="compound">UninitializedValueException</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrException.cpp" line="77" column="6" bodyfile="rrException.cpp" bodystart="77" bodyend="79" declfile="rrException.h" declline="103" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="rrExecutableModel_8cpp_1a73a38b8990efe427c7b88405375bf256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>RR_DECLSPEC std::ostream &amp; rr::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, ExecutableModel *model)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>dump the model to a stream convenience func </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrExecutableModel.cpp" line="37" column="1" bodyfile="rrExecutableModel.cpp" bodystart="37" bodyend="103" declfile="rrExecutableModel.h" declline="781" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="rrFileName_8cpp_1ab319c5c75e448d1128d9ce1112c11bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream&amp; rr::operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, FileName &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classrr_1_1FileName" kindref="compound">FileName</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrFileName.cpp" line="131" column="1" bodyfile="rrFileName.cpp" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="rrFileName_8h_1ab6d23578490caa078f2cf35cc118d465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RR_DECLSPEC std::ostream &amp;</type>
        <definition>RR_DECLSPEC std::ostream&amp; rr::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, FileName &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classrr_1_1FileName" kindref="compound">FileName</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrFileName.h" line="47" column="13" declfile="rrFileName.h" declline="47" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="rrGetOptions_8cpp_1a9ce9c5b80d0240ff326be185790e047d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>RR_DECLSPEC int rr::GetOptions</definition>
        <argsstring>(int argc, char *argv[], const char *optstring)</argsstring>
        <name>GetOptions</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const char *</type>
          <declname>optstring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrGetOptions.cpp" line="12" column="5" bodyfile="rrGetOptions.cpp" bodystart="12" bodyend="73" declfile="rrGetOptions.h" declline="10" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="rrIniKey_8cpp_1af8a5612a7f4e63d79ffcae347f6609c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream&amp; rr::operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;stream, const IniKey &amp;aKey)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classrr_1_1IniKey" kindref="compound">IniKey</ref> &amp;</type>
          <declname>aKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrIniKey.cpp" line="17" column="1" bodyfile="rrIniKey.cpp" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="rrLogger_8cpp_1ac8e9589ad50199c7f695ac3a13e589b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplitterChannel *</type>
        <definition>static SplitterChannel * rr::getSplitterChannel</definition>
        <argsstring>()</argsstring>
        <name>getSplitterChannel</name>
        <briefdescription>
<para>get the splitter channel that is in our logging chain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="351" column="24" bodyfile="rrLogger.cpp" bodystart="351" bodyend="359" declfile="rrLogger.cpp" declline="80" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="rrLogger_8cpp_1abe3093e711e62b578c02180e04ceb980" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PatternFormatter *</type>
        <definition>static PatternFormatter * rr::getPatternFormatter</definition>
        <argsstring>()</argsstring>
        <name>getPatternFormatter</name>
        <briefdescription>
<para>get the pattern formatter that is in our logging chain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="361" column="25" bodyfile="rrLogger.cpp" bodystart="361" bodyend="369" declfile="rrLogger.cpp" declline="85" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrLogger_8cpp_1ae64639d18affe140d67004aa158f3a3c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Channel *</type>
        <definition>static Channel* rr::createConsoleChannel</definition>
        <argsstring>()</argsstring>
        <name>createConsoleChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="87" column="16" bodyfile="rrLogger.cpp" bodystart="87" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="rrLogger_8cpp_1ac105e1e1eb0adf90f77d96af64538dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Poco::Logger &amp;</type>
        <definition>RR_DECLSPEC Poco::Logger &amp; rr::getLogger</definition>
        <argsstring>()</argsstring>
        <name>getLogger</name>
        <briefdescription>
<para>the real logger is actually a Poco::Logger named &quot;RoadRunner&quot;, i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>Poco::Logger::get(&quot;RoadRunner&quot;).</para>
<para>This returns that logger. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="158" column="14" bodyfile="rrLogger.cpp" bodystart="158" bodyend="199" declfile="rrLogger.h" declline="305" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="rrLogger_8cpp_1a4996b05a760f1b8eeedf3abfed936cac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::LoggingBufferCtor</definition>
        <argsstring>()</argsstring>
        <name>LoggingBufferCtor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrLogger.cpp" line="503" column="6" bodyfile="rrLogger.cpp" bodystart="503" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="rrNLEQ1Interface_8cpp_1a602e172bdfe5a8eeea93fa7e1475848e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::ModelFunction</definition>
        <argsstring>(int *nx, double *y, double *fval, int *pErr)</argsstring>
        <name>ModelFunction</name>
        <param>
          <type>int *</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pErr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ1Interface.cpp" line="271" column="6" bodyfile="rrNLEQ1Interface.cpp" bodystart="271" bodyend="323" declfile="rrNLEQ1Interface.cpp" declline="31" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="rrNLEQ1Interface_8cpp_1a8c9d1ea39292d7e710b70e502bd0c330" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string rr::ErrorForStatus</definition>
        <argsstring>(int error)</argsstring>
        <name>ErrorForStatus</name>
        <param>
          <type>int</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ1Interface.cpp" line="358" column="8" bodyfile="rrNLEQ1Interface.cpp" bodystart="358" bodyend="378" declfile="rrNLEQ1Interface.cpp" declline="33" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="rrNLEQ1Interface_8cpp_1a521e52291db0a6b78b5b9dac61132cd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rr::isError</definition>
        <argsstring>(int e)</argsstring>
        <name>isError</name>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ1Interface.cpp" line="35" column="13" bodyfile="rrNLEQ1Interface.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="rrNLEQ1Interface_8cpp_1abde39e918b3c1490e1719e58be90d750" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rr::isWarning</definition>
        <argsstring>(int e)</argsstring>
        <name>isWarning</name>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ1Interface.cpp" line="40" column="13" bodyfile="rrNLEQ1Interface.cpp" bodystart="40" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="rrNLEQ2Interface_8cpp_1a602e172bdfe5a8eeea93fa7e1475848e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::ModelFunction</definition>
        <argsstring>(int *nx, double *y, double *fval, int *pErr)</argsstring>
        <name>ModelFunction</name>
        <param>
          <type>int *</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pErr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ2Interface.cpp" line="31" column="13" bodyfile="rrNLEQ2Interface.cpp" bodystart="278" bodyend="330" declfile="rrNLEQ2Interface.cpp" declline="31" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="rrNLEQ2Interface_8cpp_1a8c9d1ea39292d7e710b70e502bd0c330" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string rr::ErrorForStatus</definition>
        <argsstring>(int error)</argsstring>
        <name>ErrorForStatus</name>
        <param>
          <type>int</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ2Interface.cpp" line="33" column="15" bodyfile="rrNLEQ2Interface.cpp" bodystart="365" bodyend="385" declfile="rrNLEQ2Interface.cpp" declline="33" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="rrNLEQ2Interface_8cpp_1a521e52291db0a6b78b5b9dac61132cd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rr::isError</definition>
        <argsstring>(int e)</argsstring>
        <name>isError</name>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ2Interface.cpp" line="35" column="13" bodyfile="rrNLEQ2Interface.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="rrNLEQ2Interface_8cpp_1abde39e918b3c1490e1719e58be90d750" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rr::isWarning</definition>
        <argsstring>(int e)</argsstring>
        <name>isWarning</name>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrNLEQ2Interface.cpp" line="40" column="13" bodyfile="rrNLEQ2Interface.cpp" bodystart="40" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1a6bd8bff5375481d879e715d3534609ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>static vector&lt;string&gt; rr::createModelStringList</definition>
        <argsstring>(ExecutableModel *model, GetNumFuncPtr numFunc, GetNameFuncPtr nameFunc)</argsstring>
        <name>createModelStringList</name>
        <param>
          <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>GetNumFuncPtr</type>
          <declname>numFunc</declname>
        </param>
        <param>
          <type>GetNameFuncPtr</type>
          <declname>nameFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="87" column="15" bodyfile="rrRoadRunner.cpp" bodystart="87" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1aed3558708e5fa7c09e2b78d62ad5bbc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>static std::vector&lt; std::string &gt; rr::createSelectionList</definition>
        <argsstring>(const SimulateOptions &amp;o)</argsstring>
        <name>createSelectionList</name>
        <param>
          <type>const <ref refid="classrr_1_1SimulateOptions" kindref="compound">SimulateOptions</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>convert the names from the sbml settings file into the <ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> selection syntax. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="4454" column="20" bodyfile="rrRoadRunner.cpp" bodystart="4454" bodyend="4480" declfile="rrRoadRunner.cpp" declline="110" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1a5fce47cc2a4247082462c9d38b6b54c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; rr::logspace</definition>
        <argsstring>(const double &amp;startW, const double &amp;d2, const int &amp;n)</argsstring>
        <name>logspace</name>
        <param>
          <type>const double &amp;</type>
          <declname>startW</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>d2</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Some functions needed for the freq. </para>
        </briefdescription>
        <detaileddescription>
<para>analysis code From Frank Bergmann code, ported to C++ by Totte Karlson Generate log spaced array, algorithm from matlab, note operator precedence y = (10).^ [d1+(0:n-2)*(d2-d1)/(floor(n)-1), d2];</para>
<para>d1 = starting value (10^d1) d2 = ending value (10^d2) n = number of values in the generated series </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="4922" column="8" bodyfile="rrRoadRunner.cpp" bodystart="4922" bodyend="4935" declfile="rrRoadRunner.cpp" declline="122" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1a99a59182a1c1049b7ec6d6758d59b858" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rr::phase</definition>
        <argsstring>(Complex &amp;val)</argsstring>
        <name>phase</name>
        <param>
          <type>Complex &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="4937" column="8" bodyfile="rrRoadRunner.cpp" bodystart="4937" bodyend="4947" declfile="rrRoadRunner.cpp" declline="123" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1ab28f88ea2697b14c6e150126038170a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rr::getAdjustment</definition>
        <argsstring>(Complex &amp;z)</argsstring>
        <name>getAdjustment</name>
        <param>
          <type>Complex &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="4950" column="8" bodyfile="rrRoadRunner.cpp" bodystart="4950" bodyend="4970" declfile="rrRoadRunner.cpp" declline="124" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1acf824e8a1d12cf613cbff9f108fb55e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rr::metabolicControlCheck</definition>
        <argsstring>(ExecutableModel *model)</argsstring>
        <name>metabolicControlCheck</name>
        <param>
          <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>check if metabolic control analysis is valid for the model. </para>
        </briefdescription>
        <detaileddescription>
<para>In effect, this checks that the the model is a pure reaction-kinetics model with no rate rules, no events.</para>
<para>Throws an invaid arg exception if not valid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="5182" column="13" bodyfile="rrRoadRunner.cpp" bodystart="5182" bodyend="5189" declfile="rrRoadRunner.cpp" declline="140" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1a0600f1d6e25aacf7e78a999c5f09ea47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::writeDoubleVectorListToStream</definition>
        <argsstring>(std::ostream &amp;out, const DoubleVectorList &amp;results)</argsstring>
        <name>writeDoubleVectorListToStream</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const DoubleVectorList &amp;</type>
          <declname>results</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="7138" column="6" bodyfile="rrRoadRunner.cpp" bodystart="7138" bodyend="7148" declfile="rrRoadRunner.cpp" declline="146" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1ad900af7633d26b2608f329edb942501a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::writeDoubleMatrixToStream</definition>
        <argsstring>(std::ostream &amp;out, const ls::DoubleMatrix &amp;results, int nrows)</argsstring>
        <name>writeDoubleMatrixToStream</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const ls::DoubleMatrix &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nrows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="7150" column="6" bodyfile="rrRoadRunner.cpp" bodystart="7150" bodyend="7162" declfile="rrRoadRunner.cpp" declline="148" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1ad850b7c1fe5f141aab4e1b61d1a21d20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rr::setSBMLValue</definition>
        <argsstring>(libsbml::Model *model, const string &amp;id, double value)</argsstring>
        <name>setSBMLValue</name>
        <param>
          <type>libsbml::Model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>find an symbol id in the model and set its value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="3018" column="13" bodyfile="rrRoadRunner.cpp" bodystart="3018" bodyend="3065"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1a9340eba32ac3e950d46e7341034fef90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rr::setSpeciesAmount</definition>
        <argsstring>(libsbml::Model *model, const string &amp;id, double value)</argsstring>
        <name>setSpeciesAmount</name>
        <param>
          <type>libsbml::Model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="3068" column="13" bodyfile="rrRoadRunner.cpp" bodystart="3068" bodyend="3085"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1a1cafd89e37efd387f265f4ec951aeb94" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string rr::convertSBMLVersion</definition>
        <argsstring>(const std::string &amp;str, int level, int version)</argsstring>
        <name>convertSBMLVersion</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="4104" column="15" bodyfile="rrRoadRunner.cpp" bodystart="4104" bodyend="4154"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunner_8cpp_1a410ba7a28b6d72c94782c0b8d6a02902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::checkAddRule</definition>
        <argsstring>(const std::string &amp;vid, libsbml::Model *sbmlModel)</argsstring>
        <name>checkAddRule</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>vid</declname>
        </param>
        <param>
          <type>libsbml::Model *</type>
          <declname>sbmlModel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunner.cpp" line="6188" column="6" bodyfile="rrRoadRunner.cpp" bodystart="6188" bodyend="6234"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunnerData_8cpp_1ae1f3a3183fdbf583f0e3689b63572665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream&amp; rr::operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;ss, const RoadRunnerData &amp;data)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>ss</declname>
        </param>
        <param>
          <type>const <ref refid="classrr_1_1RoadRunnerData" kindref="compound">RoadRunnerData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunnerData.cpp" line="374" column="1" bodyfile="rrRoadRunnerData.cpp" bodystart="374" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunnerData_8cpp_1a93c98d3f87d51ae2d514d98b8d23e910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>istream &amp;</type>
        <definition>istream&amp; rr::operator&gt;&gt;</definition>
        <argsstring>(istream &amp;ss, RoadRunnerData &amp;data)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>ss</declname>
        </param>
        <param>
          <type><ref refid="classrr_1_1RoadRunnerData" kindref="compound">RoadRunnerData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunnerData.cpp" line="452" column="9" bodyfile="rrRoadRunnerData.cpp" bodystart="452" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="rrRoadRunnerOptions_8cpp_1aa4340d7eb4783c643c77b908dbbbc927" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rr::getConfigValues</definition>
        <argsstring>(SimulateOptions *s)</argsstring>
        <name>getConfigValues</name>
        <param>
          <type><ref refid="classrr_1_1SimulateOptions" kindref="compound">SimulateOptions</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrRoadRunnerOptions.cpp" line="55" column="13" bodyfile="rrRoadRunnerOptions.cpp" bodystart="55" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="rrSBMLReader_8cpp_1a8335d385693dd8fa56df30c73c372d8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const Poco::RegularExpression</type>
        <definition>static const Poco::RegularExpression rr::sbml_re</definition>
        <argsstring>(&quot;&lt;\\s*sbml\\s*.*?&gt;&quot;, RegularExpression::RE_UNGREEDY)</argsstring>
        <name>sbml_re</name>
        <param>
          <type>&quot;&lt;\\s*sbml\\s*.*?&gt;&quot;</type>
        </param>
        <param>
          <type>RegularExpression::RE_UNGREEDY</type>
        </param>
        <briefdescription>
<para>extract the &lt;sbml...&gt; tag from an sbml document. </para>
        </briefdescription>
        <detaileddescription>
<para>This regex should stop at the first match. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSBMLReader.cpp" line="100" column="38" declfile="rrSBMLReader.cpp" declline="100" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="rrSBMLReader_8cpp_1a2e89ccc901706c17e6f4e3e9522a068b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rr::has_comp</definition>
        <argsstring>(const string &amp;sbml)</argsstring>
        <name>has_comp</name>
        <param>
          <type>const string &amp;</type>
          <declname>sbml</declname>
        </param>
        <briefdescription>
<para>Check if the given sbml string uses the composite extension. </para>
        </briefdescription>
        <detaileddescription>
<para>We only need to scan inside the &lt;sbml ... &gt; tag, which is as the start of the doc, so this should be a very fast search.</para>
<para>&lt;sbml xmlns=&quot;http://www.sbml.org/sbml/level3/version1/core&quot;
    xmlns:comp=&quot;http://www.sbml.org/sbml/level3/version1/comp/version1&quot;
    level=&quot;3&quot; version=&quot;1&quot; comp:required=&quot;false&quot;&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSBMLReader.cpp" line="113" column="13" bodyfile="rrSBMLReader.cpp" bodystart="113" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="rrSBMLReader_8cpp_1a3ea512f197875e28462656e6c45305de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string rr::flatten_comp</definition>
        <argsstring>(const string &amp;sbml, const std::string fname)</argsstring>
        <name>flatten_comp</name>
        <param>
          <type>const string &amp;</type>
          <declname>sbml</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
<para>flatten a comp model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSBMLReader.cpp" line="124" column="15" bodyfile="rrSBMLReader.cpp" bodystart="124" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="rrSBMLReader_8cpp_1abcd7fcef54bd4724c1b162db5b7cab80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char rr::mytolower</definition>
        <argsstring>(char x)</argsstring>
        <name>mytolower</name>
        <param>
          <type>char</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSBMLReader.cpp" line="191" column="6" bodyfile="rrSBMLReader.cpp" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="rrSelectionRecord_8cpp_1a6a8c01f06933bcdbfd80bfaf2d368cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream &amp; rr::operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;stream, const SelectionRecord &amp;rec)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classrr_1_1SelectionRecord" kindref="compound">SelectionRecord</ref> &amp;</type>
          <declname>rec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSelectionRecord.cpp" line="259" column="1" bodyfile="rrSelectionRecord.cpp" bodystart="259" bodyend="267" declfile="rrSelectionRecord.h" declline="389" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="rrSparse_8cpp_1afaa83180a614be810cf93055ae573763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrr_1_1csr__matrix__t" kindref="compound">csr_matrix</ref> *</type>
        <definition>csr_matrix * rr::csr_matrix_new</definition>
        <argsstring>(unsigned m, unsigned n, const std::vector&lt; unsigned &gt; &amp;rowidx, const std::vector&lt; unsigned &gt; &amp;colidx, const std::vector&lt; double &gt; &amp;values)</argsstring>
        <name>csr_matrix_new</name>
        <param>
          <type>unsigned</type>
          <declname>m</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned &gt; &amp;</type>
          <declname>rowidx</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned &gt; &amp;</type>
          <declname>colidx</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>allocate and initialize the buffers and fields of a dcsr_matrix struct. </para>
        </briefdescription>
        <detaileddescription>
<para>TODO: These belong someplace more appropriate that this header file.</para>
<para>These funcs are used by the generated LLVM model. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSparse.cpp" line="44" column="12" bodyfile="rrSparse.cpp" bodystart="44" bodyend="127" declfile="rrSparse.h" declline="79" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="rrSparse_8cpp_1a929716f59371ef3425060046086f05dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rr::csr_matrix_set_nz</definition>
        <argsstring>(csr_matrix *mat, unsigned row, unsigned col, double val)</argsstring>
        <name>csr_matrix_set_nz</name>
        <param>
          <type><ref refid="structrr_1_1csr__matrix__t" kindref="compound">csr_matrix</ref> *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>row</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>col</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>sets a (previously allocted) non-zero value to the given value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true on success, false on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSparse.cpp" line="129" column="6" bodyfile="rrSparse.cpp" bodystart="129" bodyend="143" declfile="rrSparse.h" declline="94" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="rrSparse_8cpp_1a3ee2de95cb632d92d34d21511cb40a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rr::csr_matrix_get_nz</definition>
        <argsstring>(const csr_matrix *mat, unsigned row, unsigned col)</argsstring>
        <name>csr_matrix_get_nz</name>
        <param>
          <type>const <ref refid="structrr_1_1csr__matrix__t" kindref="compound">csr_matrix</ref> *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>row</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>sets a (previously allocted) non-zero value to the given value. </para>
        </briefdescription>
        <detaileddescription>
<para>returns NaN if the entry (i,j) has not been alocated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSparse.cpp" line="145" column="8" bodyfile="rrSparse.cpp" bodystart="145" bodyend="158" declfile="rrSparse.h" declline="101" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="rrSparse_8cpp_1a28f33517451a18ef65ef8833cb8656da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::csr_matrix_delete</definition>
        <argsstring>(csr_matrix *mat)</argsstring>
        <name>csr_matrix_delete</name>
        <param>
          <type><ref refid="structrr_1_1csr__matrix__t" kindref="compound">csr_matrix</ref> *</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>free the buffers belonging to a dcsr_matrix, and the matrix itself. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSparse.cpp" line="160" column="6" bodyfile="rrSparse.cpp" bodystart="160" bodyend="169" declfile="rrSparse.h" declline="87" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="rrSparse_8cpp_1a8299de7cf9253ebb7383d5e612eccd95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::csr_matrix_dgemv</definition>
        <argsstring>(double alpha, const csr_matrix *A, double const *x, double beta, double *y)</argsstring>
        <name>csr_matrix_dgemv</name>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="structrr_1_1csr__matrix__t" kindref="compound">csr_matrix</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>performs the matrix-vector operations y := alpha*A*x + beta*y </para>
        </briefdescription>
        <detaileddescription>
<para>LAPACK sig: SUBROUTINE DGEMV(TRANS,M,N,ALPHA,A,LDA,X,INCX,BETA,Y,INCY)</para>
<para>The given vectors y and x must be the same size as number of columns in the sparse matrix. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSparse.cpp" line="171" column="6" bodyfile="rrSparse.cpp" bodystart="171" bodyend="202" declfile="rrSparse.h" declline="111" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="rrSparse_8cpp_1aa3bcf65a7d872026cee0db01713685fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rr::csr_matrix_ddot</definition>
        <argsstring>(size_t row, const csr_matrix *x, const double *y)</argsstring>
        <name>csr_matrix_ddot</name>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const <ref refid="structrr_1_1csr__matrix__t" kindref="compound">csr_matrix</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>perform a dot product between the a row in the matrix and a vector y. </para>
        </briefdescription>
        <detaileddescription>
<para>The given vector y must obviously be the same length as the number of rows in matrix x. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSparse.cpp" line="205" column="8" bodyfile="rrSparse.cpp" bodystart="205" bodyend="218" declfile="rrSparse.h" declline="120" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="rrSparse_8cpp_1a0be8d8a7df46cd68894ae9502ed7b5fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::csr_matrix_fill_dense</definition>
        <argsstring>(const csr_matrix *x, double *dense)</argsstring>
        <name>csr_matrix_fill_dense</name>
        <param>
          <type>const <ref refid="structrr_1_1csr__matrix__t" kindref="compound">csr_matrix</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dense</declname>
        </param>
        <briefdescription>
<para>fill dense matrix </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSparse.cpp" line="220" column="6" bodyfile="rrSparse.cpp" bodystart="220" bodyend="241" declfile="rrSparse.h" declline="125" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="rrSparse_8cpp_1abbf742c51f4a7d4ebd46de04e59967a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::csr_matrix_dump_binary</definition>
        <argsstring>(const csr_matrix *x, std::ostream &amp;out)</argsstring>
        <name>csr_matrix_dump_binary</name>
        <param>
          <type>const <ref refid="structrr_1_1csr__matrix__t" kindref="compound">csr_matrix</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSparse.cpp" line="243" column="6" bodyfile="rrSparse.cpp" bodystart="243" bodyend="251" declfile="rrSparse.h" declline="127" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="rrSparse_8cpp_1a5b0c9fedf05679bf01f3affdba23b296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrr_1_1csr__matrix__t" kindref="compound">csr_matrix</ref> *</type>
        <definition>csr_matrix * rr::csr_matrix_new_from_binary</definition>
        <argsstring>(std::istream &amp;in)</argsstring>
        <name>csr_matrix_new_from_binary</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSparse.cpp" line="253" column="12" bodyfile="rrSparse.cpp" bodystart="253" bodyend="269" declfile="rrSparse.h" declline="128" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="rrSparse_8cpp_1a4cca136e41fb9f65c578844b10dc03ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; rr::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const csr_matrix *mat)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structrr_1_1csr__matrix__t" kindref="compound">csr_matrix</ref> *</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>dump the matrix to an output stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrSparse.cpp" line="271" column="1" bodyfile="rrSparse.cpp" bodystart="271" bodyend="324" declfile="rrSparse.h" declline="132" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a4a3a9f9d3e5c08a3ffa3309e58965f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>RR_DECLSPEC char * rr::createText</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>createText</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="19" column="6" bodyfile="rrStringUtils.cpp" bodystart="19" bodyend="30" declfile="rrStringUtils.h" declline="21" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a155d30d4782453020052a9dd7f6a2f57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>RR_DECLSPEC char * rr::createText</definition>
        <argsstring>(const int &amp;count)</argsstring>
        <name>createText</name>
        <param>
          <type>const int &amp;</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="32" column="6" bodyfile="rrStringUtils.cpp" bodystart="32" bodyend="42" declfile="rrStringUtils.h" declline="22" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a1f3deec728908be2c5985f49bf71e489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::freeText</definition>
        <argsstring>(char *str)</argsstring>
        <name>freeText</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="44" column="6" bodyfile="rrStringUtils.cpp" bodystart="44" bodyend="48" declfile="rrStringUtils.h" declline="23" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1aba2d5ab2be51735862290facea80f6f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::replaceWord</definition>
        <argsstring>(const string &amp;str1, const string &amp;str2, const string &amp;theString)</argsstring>
        <name>replaceWord</name>
        <param>
          <type>const string &amp;</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>str2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>theString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="50" column="8" bodyfile="rrStringUtils.cpp" bodystart="50" bodyend="59" declfile="rrStringUtils.h" declline="24" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a8c9094ef0174c5ad05d1392ca38b7402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::convertFunctionCallToUseVarArgsSyntax</definition>
        <argsstring>(const string &amp;funcName, string &amp;expression)</argsstring>
        <name>convertFunctionCallToUseVarArgsSyntax</name>
        <param>
          <type>const string &amp;</type>
          <declname>funcName</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="61" column="6" bodyfile="rrStringUtils.cpp" bodystart="61" bodyend="79" declfile="rrStringUtils.h" declline="25" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1adb65542a0d31a66e4bf172c69e0d96b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::removeChars</definition>
        <argsstring>(const string &amp;str, const string &amp;chars)</argsstring>
        <name>removeChars</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>chars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="81" column="8" bodyfile="rrStringUtils.cpp" bodystart="81" bodyend="90" declfile="rrStringUtils.h" declline="26" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ad33119a80cb315c0865071228cc8f903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::isUnwantedChar</definition>
        <argsstring>(char ch)</argsstring>
        <name>isUnwantedChar</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="92" column="6" bodyfile="rrStringUtils.cpp" bodystart="92" bodyend="99" declfile="rrStringUtils.h" declline="27" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a1619d3da776ce9cb3d1bfdd2df7362e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>RR_DECLSPEC size_t rr::findMatchingRightParenthesis</definition>
        <argsstring>(const string &amp;expression, const size_t startFrom)</argsstring>
        <name>findMatchingRightParenthesis</name>
        <param>
          <type>const string &amp;</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>startFrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="101" column="8" bodyfile="rrStringUtils.cpp" bodystart="101" bodyend="128" declfile="rrStringUtils.h" declline="28" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1adc4967bc9a6d7167cefdc037646e8021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>RR_DECLSPEC int rr::getNumberOfFunctionArguments</definition>
        <argsstring>(const string &amp;expression)</argsstring>
        <name>getNumberOfFunctionArguments</name>
        <param>
          <type>const string &amp;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="130" column="5" bodyfile="rrStringUtils.cpp" bodystart="130" bodyend="158" declfile="rrStringUtils.h" declline="29" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1aa60f0ee940326a5a12d75fae352d8af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::tabs</definition>
        <argsstring>(const int &amp;nr)</argsstring>
        <name>tabs</name>
        <param>
          <type>const int &amp;</type>
          <declname>nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="160" column="8" bodyfile="rrStringUtils.cpp" bodystart="160" bodyend="168" declfile="rrStringUtils.h" declline="30" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a8cc1bec4a063de5213ba0e08f2a2c93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::NL</definition>
        <argsstring>()</argsstring>
        <name>NL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="170" column="8" bodyfile="rrStringUtils.cpp" bodystart="170" bodyend="175" declfile="rrStringUtils.h" declline="31" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ac56b0dea8d863ea0221ad8fe007f92b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getFileName</definition>
        <argsstring>(const string &amp;fileN)</argsstring>
        <name>getFileName</name>
        <param>
          <type>const string &amp;</type>
          <declname>fileN</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="178" column="8" bodyfile="rrStringUtils.cpp" bodystart="178" bodyend="193" declfile="rrStringUtils.h" declline="38" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a8e53548608a1b9299359cd7b12329965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getFileNameNoExtension</definition>
        <argsstring>(const string &amp;fileN)</argsstring>
        <name>getFileNameNoExtension</name>
        <param>
          <type>const string &amp;</type>
          <declname>fileN</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="195" column="8" bodyfile="rrStringUtils.cpp" bodystart="195" bodyend="212" declfile="rrStringUtils.h" declline="39" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a1e505e3ba633c3916cc3fc3e09c1b2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getFileExtension</definition>
        <argsstring>(const string &amp;fileN)</argsstring>
        <name>getFileExtension</name>
        <param>
          <type>const string &amp;</type>
          <declname>fileN</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="214" column="8" bodyfile="rrStringUtils.cpp" bodystart="214" bodyend="229" declfile="rrStringUtils.h" declline="40" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a3c4499435976ed238ee3e99c4ed40056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getFilePath</definition>
        <argsstring>(const string &amp;fileN)</argsstring>
        <name>getFilePath</name>
        <param>
          <type>const string &amp;</type>
          <declname>fileN</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="231" column="8" bodyfile="rrStringUtils.cpp" bodystart="231" bodyend="246" declfile="rrStringUtils.h" declline="37" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ad3eec7f784d81c68d068a1b82f7ff646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::changeFileExtensionTo</definition>
        <argsstring>(const string &amp;_fName, const string &amp;newExtension)</argsstring>
        <name>changeFileExtensionTo</name>
        <param>
          <type>const string &amp;</type>
          <declname>_fName</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>newExtension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="248" column="8" bodyfile="rrStringUtils.cpp" bodystart="248" bodyend="277" declfile="rrStringUtils.h" declline="42" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ad89dabb321087496888f0521e4bc7c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::startsWith</definition>
        <argsstring>(const string &amp;src, const string &amp;sub)</argsstring>
        <name>startsWith</name>
        <param>
          <type>const string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="279" column="6" bodyfile="rrStringUtils.cpp" bodystart="279" bodyend="283" declfile="rrStringUtils.h" declline="46" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a131b4da2d295fc8ca95610161a9489c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::endsWith</definition>
        <argsstring>(const string &amp;src, const string &amp;sub)</argsstring>
        <name>endsWith</name>
        <param>
          <type>const string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="285" column="6" bodyfile="rrStringUtils.cpp" bodystart="285" bodyend="289" declfile="rrStringUtils.h" declline="47" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1aff149a16504632e6689b7f6aba6b8138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::trim</definition>
        <argsstring>(const string &amp;str, const char &amp;ch)</argsstring>
        <name>trim</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char &amp;</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="291" column="8" bodyfile="rrStringUtils.cpp" bodystart="291" bodyend="309" declfile="rrStringUtils.h" declline="45" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a64203470eae42f9cd8eae2482369408e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::removeNewLines</definition>
        <argsstring>(const string &amp;str, const int &amp;howMany)</argsstring>
        <name>removeNewLines</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>howMany</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="311" column="8" bodyfile="rrStringUtils.cpp" bodystart="311" bodyend="314" declfile="rrStringUtils.h" declline="112" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ad5deee1911f75e8f31b42cb6d17d0a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::format</definition>
        <argsstring>(const string &amp;src, const string &amp;arg)</argsstring>
        <name>format</name>
        <param>
          <type>const string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="316" column="8" bodyfile="rrStringUtils.cpp" bodystart="316" bodyend="319" declfile="rrStringUtils.h" declline="87" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a480b95a12d8fb7e0b86e65ec3501794b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::format</definition>
        <argsstring>(const string &amp;src, const int &amp;arg)</argsstring>
        <name>format</name>
        <param>
          <type>const string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="321" column="8" bodyfile="rrStringUtils.cpp" bodystart="321" bodyend="324" declfile="rrStringUtils.h" declline="79" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a89ce9dc9c4f8e1e65b1a644b594993b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::format</definition>
        <argsstring>(const string &amp;src, const string &amp;arg1, const string &amp;arg2)</argsstring>
        <name>format</name>
        <param>
          <type>const string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="326" column="8" bodyfile="rrStringUtils.cpp" bodystart="326" bodyend="330" declfile="rrStringUtils.h" declline="88" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a890559cd1fc4d0c5f397758dc63d89c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::format</definition>
        <argsstring>(const string &amp;src, const string &amp;arg1, const int &amp;arg2)</argsstring>
        <name>format</name>
        <param>
          <type>const string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="332" column="8" bodyfile="rrStringUtils.cpp" bodystart="332" bodyend="336" declfile="rrStringUtils.h" declline="89" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a5b87c34bc74bbf5d35b57030b8700d23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::format</definition>
        <argsstring>(const string &amp;src, const string &amp;arg1, const string &amp;arg2, const string &amp;arg3)</argsstring>
        <name>format</name>
        <param>
          <type>const string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="338" column="8" bodyfile="rrStringUtils.cpp" bodystart="338" bodyend="345" declfile="rrStringUtils.h" declline="91" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a690b0a62d3c1d858f4894a5d1f3ebe16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::format</definition>
        <argsstring>(const string &amp;src, const string &amp;arg1, const int &amp;arg2, const string &amp;arg3)</argsstring>
        <name>format</name>
        <param>
          <type>const string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="347" column="8" bodyfile="rrStringUtils.cpp" bodystart="347" bodyend="352" declfile="rrStringUtils.h" declline="90" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a856a10410e9af3effd5ce59f257fc9cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::format</definition>
        <argsstring>(const string &amp;str1, const string &amp;arg1, const string &amp;arg2, const string &amp;arg3, const string &amp;arg4)</argsstring>
        <name>format</name>
        <param>
          <type>const string &amp;</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg3</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="354" column="8" bodyfile="rrStringUtils.cpp" bodystart="354" bodyend="367" declfile="rrStringUtils.h" declline="92" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a15e474a2e331a6d75b28bb8a215e2219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::format</definition>
        <argsstring>(const string &amp;str1, const string &amp;arg1, const string &amp;arg2, const string &amp;arg3, const string &amp;arg4, const string &amp;arg5)</argsstring>
        <name>format</name>
        <param>
          <type>const string &amp;</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg3</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg4</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="369" column="8" bodyfile="rrStringUtils.cpp" bodystart="369" bodyend="384" declfile="rrStringUtils.h" declline="93" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a143a46f86696737d22be23df4cc2db18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::format</definition>
        <argsstring>(const string &amp;str1, const unsigned int &amp;arg1, const string &amp;arg2)</argsstring>
        <name>format</name>
        <param>
          <type>const string &amp;</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="386" column="8" bodyfile="rrStringUtils.cpp" bodystart="386" bodyend="395" declfile="rrStringUtils.h" declline="95" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a235a84ffc8b932aa3d57427305ec995f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::format</definition>
        <argsstring>(const string &amp;str1, const unsigned int &amp;arg1, const string &amp;arg2, const string &amp;arg3)</argsstring>
        <name>format</name>
        <param>
          <type>const string &amp;</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="397" column="8" bodyfile="rrStringUtils.cpp" bodystart="397" bodyend="409" declfile="rrStringUtils.h" declline="97" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a29d04d0e45b177e4bec8c54a7837a238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::format</definition>
        <argsstring>(const string &amp;str1, const unsigned int &amp;arg1, const unsigned int &amp;arg2, const string &amp;arg3, const string &amp;arg4)</argsstring>
        <name>format</name>
        <param>
          <type>const string &amp;</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg3</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>arg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="411" column="8" bodyfile="rrStringUtils.cpp" bodystart="411" bodyend="425" declfile="rrStringUtils.h" declline="99" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ac537b33d085b90b43e612878efbc022c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::substitute</definition>
        <argsstring>(const string &amp;src, const string &amp;thisOne, const int &amp;withThisOne, const int &amp;howMany)</argsstring>
        <name>substitute</name>
        <param>
          <type>const string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>thisOne</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>withThisOne</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>howMany</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="427" column="8" bodyfile="rrStringUtils.cpp" bodystart="427" bodyend="430" declfile="rrStringUtils.h" declline="110" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a34d25ac13ee67335c2743e3aecb122cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::substitute</definition>
        <argsstring>(const string &amp;src, const string &amp;thisOne, const string &amp;withThisOne, const int &amp;howMany)</argsstring>
        <name>substitute</name>
        <param>
          <type>const string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>thisOne</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>withThisOne</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>howMany</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="437" column="8" bodyfile="rrStringUtils.cpp" bodystart="437" bodyend="455" declfile="rrStringUtils.h" declline="109" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a79ebda8f2d2782018f3be38f0ddb9bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::intToStr</definition>
        <argsstring>(const int &amp;nt)</argsstring>
        <name>intToStr</name>
        <param>
          <type>const int &amp;</type>
          <declname>nt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="463" column="8" bodyfile="rrStringUtils.cpp" bodystart="463" bodyend="473" declfile="rrStringUtils.h" declline="50" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a279e2cce7da78cd7e84c9f5f1e2e57a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::dblToStr</definition>
        <argsstring>(const double &amp;nt)</argsstring>
        <name>dblToStr</name>
        <param>
          <type>const double &amp;</type>
          <declname>nt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="475" column="8" bodyfile="rrStringUtils.cpp" bodystart="475" bodyend="481" declfile="rrStringUtils.h" declline="52" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a6c1d1bc69320c356bce91ed836fdd1cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>RR_DECLSPEC int rr::strToInt</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>strToInt</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="483" column="5" bodyfile="rrStringUtils.cpp" bodystart="483" bodyend="486" declfile="rrStringUtils.h" declline="51" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a7078cda4f9805d17a3f2db4e5a39abb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>RR_DECLSPEC double rr::strToDbl</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>strToDbl</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="488" column="8" bodyfile="rrStringUtils.cpp" bodystart="488" bodyend="492" declfile="rrStringUtils.h" declline="53" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a49970c5c8ebf8a1dac656e7c04439bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>RR_DECLSPEC vector&lt; string &gt; rr::splitString</definition>
        <argsstring>(const string &amp;text, const char &amp;oneSep)</argsstring>
        <name>splitString</name>
        <param>
          <type>const string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const char &amp;</type>
          <declname>oneSep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="494" column="8" bodyfile="rrStringUtils.cpp" bodystart="494" bodyend="499" declfile="rrStringUtils.h" declline="55" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ae7fd164f55b54e4c52cc5f670332aab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>RR_DECLSPEC vector&lt; string &gt; rr::splitString</definition>
        <argsstring>(const string &amp;text, const string &amp;separators)</argsstring>
        <name>splitString</name>
        <param>
          <type>const string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>separators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="501" column="8" bodyfile="rrStringUtils.cpp" bodystart="501" bodyend="519" declfile="rrStringUtils.h" declline="54" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1aa934bdf182d4e72f7a332705ac4cd87d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; rr::splitString</definition>
        <argsstring>(const string &amp;text, const string &amp;separators, bool cutDelimiter)</argsstring>
        <name>splitString</name>
        <param>
          <type>const string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>separators</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cutDelimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="521" column="8" bodyfile="rrStringUtils.cpp" bodystart="521" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1afe324c670e311210afb744246869eae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rr::splitString</definition>
        <argsstring>(vector&lt; string &gt; &amp;words, const string &amp;text, const string &amp;separators)</argsstring>
        <name>splitString</name>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>words</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>separators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="553" column="8" bodyfile="rrStringUtils.cpp" bodystart="553" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ac72d65250b52bc82a33f181ccc65a4b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>RR_DECLSPEC int rr::toInt</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>toInt</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="571" column="5" bodyfile="rrStringUtils.cpp" bodystart="571" bodyend="574" declfile="rrStringUtils.h" declline="56" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a80a9b5b4393005ad74d24ec1be19503c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::toBool</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>toBool</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="576" column="6" bodyfile="rrStringUtils.cpp" bodystart="576" bodyend="587" declfile="rrStringUtils.h" declline="57" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1adbe2b932c487f2c0f478dde5c8ccf8d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>RR_DECLSPEC double rr::toDouble</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>toDouble</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="589" column="8" bodyfile="rrStringUtils.cpp" bodystart="589" bodyend="640" declfile="rrStringUtils.h" declline="58" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1aee0c1a30aef68570f5d50d0e9d9c2bc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>RR_DECLSPEC vector&lt; double &gt; rr::toDoubleVector</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>toDoubleVector</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="642" column="8" bodyfile="rrStringUtils.cpp" bodystart="642" bodyend="656" declfile="rrStringUtils.h" declline="60" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a7177891f14c48e1aab0f04abc51c9c84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>complex&lt; double &gt;</type>
        <definition>RR_DECLSPEC complex&lt; double &gt; rr::toComplex</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>toComplex</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="658" column="9" bodyfile="rrStringUtils.cpp" bodystart="658" bodyend="690" declfile="rrStringUtils.h" declline="61" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a42e504f7ed1c735f5bef05f62cc866d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toUpperOrLowerCase</definition>
        <argsstring>(const string &amp;inStr, int(*func)(int))</argsstring>
        <name>toUpperOrLowerCase</name>
        <param>
          <type>const string &amp;</type>
          <declname>inStr</declname>
        </param>
        <param>
          <type>int(*)(int)</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="692" column="8" bodyfile="rrStringUtils.cpp" bodystart="692" bodyend="697" declfile="rrStringUtils.h" declline="33" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a6de7a125abe379ebcc6e151da6af1f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toUpper</definition>
        <argsstring>(const string &amp;inStr)</argsstring>
        <name>toUpper</name>
        <param>
          <type>const string &amp;</type>
          <declname>inStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="699" column="8" bodyfile="rrStringUtils.cpp" bodystart="699" bodyend="704" declfile="rrStringUtils.h" declline="34" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a404c4c23625ee352e3d87c732033aa9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toLower</definition>
        <argsstring>(const string &amp;inStr)</argsstring>
        <name>toLower</name>
        <param>
          <type>const string &amp;</type>
          <declname>inStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="706" column="8" bodyfile="rrStringUtils.cpp" bodystart="706" bodyend="711" declfile="rrStringUtils.h" declline="35" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a35399386a634e3b7538417d45adfeaf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const char *str)</argsstring>
        <name>toString</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="713" column="8" bodyfile="rrStringUtils.cpp" bodystart="713" bodyend="716" declfile="rrStringUtils.h" declline="74" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a3ddeadc39561751ad284636aea9112d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const bool &amp;val)</argsstring>
        <name>toString</name>
        <param>
          <type>const bool &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="718" column="8" bodyfile="rrStringUtils.cpp" bodystart="718" bodyend="721" declfile="rrStringUtils.h" declline="63" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a8d960db75f6864806af22efe8d8338cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const double &amp;val, const string &amp;format)</argsstring>
        <name>toString</name>
        <param>
          <type>const double &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="723" column="8" bodyfile="rrStringUtils.cpp" bodystart="723" bodyend="728" declfile="rrStringUtils.h" declline="64" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a6a6878b0da6a2aa7c37928b353ad0fc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const unsigned int &amp;n, const string &amp;format, const int nBase)</argsstring>
        <name>toString</name>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="737" column="8" bodyfile="rrStringUtils.cpp" bodystart="737" bodyend="764" declfile="rrStringUtils.h" declline="65" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ac18661b956f810e5ee0f8bbd07e5a292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const int &amp;n, const string &amp;format, const int nBase)</argsstring>
        <name>toString</name>
        <param>
          <type>const int &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="766" column="8" bodyfile="rrStringUtils.cpp" bodystart="766" bodyend="793" declfile="rrStringUtils.h" declline="66" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a7184e305f4cda15f24df8ac77baff884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string rr::toString</definition>
        <argsstring>(const int n, const int nBase)</argsstring>
        <name>toString</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="795" column="8" bodyfile="rrStringUtils.cpp" bodystart="795" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a405b670c18c6305e85056d159f2485f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const long n, const int nBase)</argsstring>
        <name>toString</name>
        <param>
          <type>const long</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="824" column="8" bodyfile="rrStringUtils.cpp" bodystart="824" bodyend="833" declfile="rrStringUtils.h" declline="67" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a12b34cb3554da1079ff51d30df01e3c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const unsigned long n, const int nBase)</argsstring>
        <name>toString</name>
        <param>
          <type>const unsigned long</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="835" column="8" bodyfile="rrStringUtils.cpp" bodystart="835" bodyend="844" declfile="rrStringUtils.h" declline="68" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ad75bd403043729f221a67c08f94b7c6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const unsigned short n, const int nBase)</argsstring>
        <name>toString</name>
        <param>
          <type>const unsigned short</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="846" column="8" bodyfile="rrStringUtils.cpp" bodystart="846" bodyend="855" declfile="rrStringUtils.h" declline="69" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a8df47fa918b5f7db7d8537a6e329654f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const short n, const int nBase)</argsstring>
        <name>toString</name>
        <param>
          <type>const short</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="857" column="8" bodyfile="rrStringUtils.cpp" bodystart="857" bodyend="860" declfile="rrStringUtils.h" declline="70" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a92f35e4f52e524e24dde89efc92c4c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const char n)</argsstring>
        <name>toString</name>
        <param>
          <type>const char</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="862" column="8" bodyfile="rrStringUtils.cpp" bodystart="862" bodyend="867" declfile="rrStringUtils.h" declline="71" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a2bfca44d9ee922a958e142884f70c1e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const unsigned char n)</argsstring>
        <name>toString</name>
        <param>
          <type>const unsigned char</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="869" column="8" bodyfile="rrStringUtils.cpp" bodystart="869" bodyend="874" declfile="rrStringUtils.h" declline="72" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a106a10f56a208ae84e9265d1ef37e0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>toString</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="876" column="8" bodyfile="rrStringUtils.cpp" bodystart="876" bodyend="879" declfile="rrStringUtils.h" declline="73" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ac50e8c3b77640d9e92c21b5dafb42132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toString</definition>
        <argsstring>(const vector&lt; string &gt; &amp;vec, const string &amp;sep)</argsstring>
        <name>toString</name>
        <param>
          <type>const vector&lt; string &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="881" column="8" bodyfile="rrStringUtils.cpp" bodystart="881" bodyend="895" declfile="rrStringUtils.h" declline="75" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a2039d20ede5075236e06573dafc310db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::toStringSize</definition>
        <argsstring>(size_t n)</argsstring>
        <name>toStringSize</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="897" column="8" bodyfile="rrStringUtils.cpp" bodystart="897" bodyend="902" declfile="rrStringUtils.h" declline="76" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a1ed081a76a07c6272537fad0417d984a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>RR_DECLSPEC int rr::compareNoCase</definition>
        <argsstring>(const string &amp;str1, const string &amp;str2)</argsstring>
        <name>compareNoCase</name>
        <param>
          <type>const string &amp;</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="904" column="5" bodyfile="rrStringUtils.cpp" bodystart="904" bodyend="912" declfile="rrStringUtils.h" declline="44" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1af25f913a83472575119e4bd8a7d29a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::append</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>append</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="914" column="8" bodyfile="rrStringUtils.cpp" bodystart="914" bodyend="919" declfile="rrStringUtils.h" declline="101" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a2f94c02273901895aa5d240ee995953e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::append</definition>
        <argsstring>(const int &amp;str)</argsstring>
        <name>append</name>
        <param>
          <type>const int &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="921" column="8" bodyfile="rrStringUtils.cpp" bodystart="921" bodyend="926" declfile="rrStringUtils.h" declline="102" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ab97bbd736e8c8b39bc2f1a91f6c2fe5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::append</definition>
        <argsstring>(const unsigned int &amp;str)</argsstring>
        <name>append</name>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="929" column="8" bodyfile="rrStringUtils.cpp" bodystart="929" bodyend="934" declfile="rrStringUtils.h" declline="103" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a6fb0582d1d4318441b5db3fee2efd3fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::append</definition>
        <argsstring>(const string &amp;s1, const string &amp;s2)</argsstring>
        <name>append</name>
        <param>
          <type>const string &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="937" column="8" bodyfile="rrStringUtils.cpp" bodystart="937" bodyend="942" declfile="rrStringUtils.h" declline="104" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1a953ef897a6c73030134586111a6c492c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::append</definition>
        <argsstring>(const string &amp;s1, const string &amp;s2, const string &amp;s3)</argsstring>
        <name>append</name>
        <param>
          <type>const string &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>s3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="944" column="8" bodyfile="rrStringUtils.cpp" bodystart="944" bodyend="949" declfile="rrStringUtils.h" declline="105" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1af07f9c5e99713b52de46871b74f4f938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::append</definition>
        <argsstring>(const string &amp;s1, const unsigned int &amp;s2, const string &amp;s3)</argsstring>
        <name>append</name>
        <param>
          <type>const string &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>s3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="951" column="8" bodyfile="rrStringUtils.cpp" bodystart="951" bodyend="956" declfile="rrStringUtils.h" declline="106" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8cpp_1ac045ad726d5a3aecf573ac0252bc0d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::append</definition>
        <argsstring>(const string &amp;s1, const unsigned int &amp;s2, const string &amp;s3, const string &amp;s4)</argsstring>
        <name>append</name>
        <param>
          <type>const string &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>s4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.cpp" line="958" column="8" bodyfile="rrStringUtils.cpp" bodystart="958" bodyend="963" declfile="rrStringUtils.h" declline="107" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1a5834f4c8e5fd5a47d0a3db5bc9c19c23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::saveBinary</definition>
        <argsstring>(std::ostream &amp;out, const T &amp;t)</argsstring>
        <name>saveBinary</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="121" column="28" bodyfile="rrStringUtils.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1a097e937c65e6b309579f9e0c25b96823" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::saveBinary</definition>
        <argsstring>(std::ostream &amp;out, const std::string &amp;s)</argsstring>
        <name>saveBinary</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="127" column="28" bodyfile="rrStringUtils.h" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1a1b13ab73b9f0ae188baba26335868b4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::saveBinary</definition>
        <argsstring>(std::ostream &amp;out, const std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>saveBinary</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="134" column="28" bodyfile="rrStringUtils.h" bodystart="134" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1a09342ff650bd4ff0d25f7ae86de2faa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::saveBinary</definition>
        <argsstring>(std::ostream &amp;out, const std::map&lt; K, V &gt; &amp;m)</argsstring>
        <name>saveBinary</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::map&lt; K, V &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="144" column="13" bodyfile="rrStringUtils.h" bodystart="144" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1a015da2b8130c19654c037ab9208003be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::saveBinary</definition>
        <argsstring>(std::ostream &amp;out, const std::unordered_map&lt; K, V &gt; &amp;m)</argsstring>
        <name>saveBinary</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; K, V &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="155" column="13" bodyfile="rrStringUtils.h" bodystart="155" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1a13f29ec4e8ee8d0aa4a207dbf7dc0099" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::saveBinary</definition>
        <argsstring>(std::ostream &amp;out, const std::set&lt; T &gt; &amp;s)</argsstring>
        <name>saveBinary</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::set&lt; T &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="166" column="28" bodyfile="rrStringUtils.h" bodystart="166" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1af6219cadbb4be110d1497c9509f4270f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::saveBinary&lt; rr::Variant &gt;</definition>
        <argsstring>(std::ostream &amp;out, const rr::Variant &amp;var)</argsstring>
        <name>saveBinary&lt; rr::Variant &gt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classrr_1_1Variant" kindref="compound">rr::Variant</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="176" column="8" bodyfile="rrStringUtils.h" bodystart="176" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1a60b73bc6ee53472c6d75d5b4dbecd62e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::loadBinary</definition>
        <argsstring>(std::istream &amp;in, T &amp;t)</argsstring>
        <name>loadBinary</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="224" column="28" bodyfile="rrStringUtils.h" bodystart="224" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1a625d298a2759c0d9ecc3f9526a5f569e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::loadBinary</definition>
        <argsstring>(std::istream &amp;in, std::string &amp;s)</argsstring>
        <name>loadBinary</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="232" column="28" bodyfile="rrStringUtils.h" bodystart="232" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1a398974d0e4b38c8d0887b7694e2fb6a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::loadBinary</definition>
        <argsstring>(std::istream &amp;in, std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>loadBinary</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="241" column="28" bodyfile="rrStringUtils.h" bodystart="241" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1a5cb731d9058bfef3caaff0a0155365ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::loadBinary</definition>
        <argsstring>(std::istream &amp;in, std::map&lt; K, V &gt; &amp;m)</argsstring>
        <name>loadBinary</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>std::map&lt; K, V &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="255" column="13" bodyfile="rrStringUtils.h" bodystart="255" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1af76b918320b9988556f3db3240d172e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::loadBinary</definition>
        <argsstring>(std::istream &amp;in, std::unordered_map&lt; K, V &gt; &amp;m)</argsstring>
        <name>loadBinary</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; K, V &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="271" column="13" bodyfile="rrStringUtils.h" bodystart="271" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1aa04a7851764c21dc667dd5dcc93d34da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::loadBinary</definition>
        <argsstring>(std::istream &amp;in, std::set&lt; T &gt; &amp;s)</argsstring>
        <name>loadBinary</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>std::set&lt; T &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="287" column="28" bodyfile="rrStringUtils.h" bodystart="287" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="rrStringUtils_8h_1ac5c8545b117f57f2c525f9374df50dc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void rr::loadBinary&lt; rr::Variant &gt;</definition>
        <argsstring>(std::istream &amp;in, rr::Variant &amp;var)</argsstring>
        <name>loadBinary&lt; rr::Variant &gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classrr_1_1Variant" kindref="compound">rr::Variant</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrStringUtils.h" line="301" column="8" bodyfile="rrStringUtils.h" bodystart="301" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a8155d63c83fa5fe43fb44f52d78b8196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::cleanFolder</definition>
        <argsstring>(const string &amp;folder, const string &amp;baseName, const std::vector&lt; std::string &gt; &amp;extensions)</argsstring>
        <name>cleanFolder</name>
        <param>
          <type>const string &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>baseName</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>extensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="66" column="6" bodyfile="rrUtils.cpp" bodystart="66" bodyend="78" declfile="rrUtils.h" declline="27" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1afbc098885501d10bfe6ae5024b2184ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getMD5</definition>
        <argsstring>(const string &amp;text)</argsstring>
        <name>getMD5</name>
        <param>
          <type>const string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="109" column="8" bodyfile="rrUtils.cpp" bodystart="109" bodyend="115" declfile="rrUtils.h" declline="30" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1aa5d5b516f1300fe849eb87b41ca577d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getTime</definition>
        <argsstring>()</argsstring>
        <name>getTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="117" column="8" bodyfile="rrUtils.cpp" bodystart="117" bodyend="129" declfile="rrUtils.h" declline="28" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a8df7892a13d5816ff369493dac0f4554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getDateTime</definition>
        <argsstring>()</argsstring>
        <name>getDateTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="131" column="8" bodyfile="rrUtils.cpp" bodystart="131" bodyend="143" declfile="rrUtils.h" declline="29" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a0fcfe7004671266883200908483ea4d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC std::string rr::getTempDir</definition>
        <argsstring>()</argsstring>
        <name>getTempDir</name>
        <briefdescription>
<para>Get a temporary directory path. </para>
        </briefdescription>
        <detaileddescription>
<para>If the config specifies a TEMP_DIR entry, this is used, if not this will return the system specified temporary directory. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="145" column="8" bodyfile="rrUtils.cpp" bodystart="145" bodyend="171" declfile="rrUtils.h" declline="79" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a264c80dddd9b21acd4ab1304487296d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>RR_DECLSPEC std::string rr::getCurrentSharedLibDir</definition>
        <argsstring>()</argsstring>
        <name>getCurrentSharedLibDir</name>
        <briefdescription>
<para>If roadrunner is build and running as shared library, either using the C++ shared library, or using the _roadrunner.so (or .pyd on Win). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="173" column="13" bodyfile="rrUtils.cpp" bodystart="173" bodyend="212" declfile="rrUtils.h" declline="71" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a83f87ca6e47f8d9d092b5bfbd7db87c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getCurrentExeFolder</definition>
        <argsstring>()</argsstring>
        <name>getCurrentExeFolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="215" column="8" bodyfile="rrUtils.cpp" bodystart="215" bodyend="256" declfile="rrUtils.h" declline="64" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1aefd333b55b78ec6f430d73acc975a810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getParentFolder</definition>
        <argsstring>(const string &amp;path)</argsstring>
        <name>getParentFolder</name>
        <param>
          <type>const string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="258" column="8" bodyfile="rrUtils.cpp" bodystart="258" bodyend="267" declfile="rrUtils.h" declline="63" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a384b90355bb318509b647103175f33ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getCWD</definition>
        <argsstring>()</argsstring>
        <name>getCWD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="269" column="8" bodyfile="rrUtils.cpp" bodystart="269" bodyend="288" declfile="rrUtils.h" declline="102" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1af80d533e7578d61e1f5e35c899f338be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>RR_DECLSPEC void rr::sleep</definition>
        <argsstring>(int milliSeconds)</argsstring>
        <name>sleep</name>
        <param>
          <type>int</type>
          <declname>milliSeconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="290" column="6" bodyfile="rrUtils.cpp" bodystart="290" bodyend="293" declfile="rrUtils.h" declline="31" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1ac34c1c7b25242a250e7635ef78d2ea2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char</type>
        <definition>RR_DECLSPEC const char rr::getPathSeparator</definition>
        <argsstring>()</argsstring>
        <name>getPathSeparator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="295" column="12" bodyfile="rrUtils.cpp" bodystart="295" bodyend="298" declfile="rrUtils.h" declline="103" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a092e8bf6e1adfdefe7d73eaf6f2354f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getFileContent</definition>
        <argsstring>(const string &amp;fName)</argsstring>
        <name>getFileContent</name>
        <param>
          <type>const string &amp;</type>
          <declname>fName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="300" column="8" bodyfile="rrUtils.cpp" bodystart="300" bodyend="312" declfile="rrUtils.h" declline="106" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1ac0790c1e1914bb5049102b7bc9643d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>RR_DECLSPEC vector&lt; string &gt; rr::getLinesInFile</definition>
        <argsstring>(const string &amp;fName)</argsstring>
        <name>getLinesInFile</name>
        <param>
          <type>const string &amp;</type>
          <declname>fName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="314" column="8" bodyfile="rrUtils.cpp" bodystart="314" bodyend="328" declfile="rrUtils.h" declline="105" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1aafaabbfa0bff0f791334b6dda2a0e86d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ptrdiff_t</type>
        <definition>RR_DECLSPEC std::ptrdiff_t rr::indexOf</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;vec, const std::string &amp;elem)</argsstring>
        <name>indexOf</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>indexOf returns the index of an element in the vector. If not found, or if vector size is zero, it returns -1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="330" column="16" bodyfile="rrUtils.cpp" bodystart="330" bodyend="341" declfile="rrUtils.h" declline="37" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1abb56e000f83b4deb9121cfc435ad6048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::removeTrailingSeparator</definition>
        <argsstring>(const string &amp;_folder, const char sep)</argsstring>
        <name>removeTrailingSeparator</name>
        <param>
          <type>const string &amp;</type>
          <declname>_folder</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="345" column="8" bodyfile="rrUtils.cpp" bodystart="345" bodyend="357" declfile="rrUtils.h" declline="43" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a7f15b8135a4a24399e23a493a7435324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::isNaN</definition>
        <argsstring>(const double &amp;aNum)</argsstring>
        <name>isNaN</name>
        <param>
          <type>const double &amp;</type>
          <declname>aNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="359" column="6" bodyfile="rrUtils.cpp" bodystart="359" bodyend="366" declfile="rrUtils.h" declline="38" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a82a0883948e5aa2fa9e2b458b7b54a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::isNullOrEmpty</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>isNullOrEmpty</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="368" column="6" bodyfile="rrUtils.cpp" bodystart="368" bodyend="371" declfile="rrUtils.h" declline="39" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1ae1757d1a777fd8c856229ae80eb97ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>RR_DECLSPEC void rr::pause</definition>
        <argsstring>(bool doIt, const string &amp;msg)</argsstring>
        <name>pause</name>
        <param>
          <type>bool</type>
          <declname>doIt</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="373" column="6" bodyfile="rrUtils.cpp" bodystart="373" bodyend="393" declfile="rrUtils.h" declline="40" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1acb446bf778623b3a5a5dc23843064e76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::fileExists</definition>
        <argsstring>(const string &amp;fname, int fileMode)</argsstring>
        <name>fileExists</name>
        <param>
          <type>const string &amp;</type>
          <declname>fname</declname>
          <defname>fileN</defname>
        </param>
        <param>
          <type>int</type>
          <declname>fileMode</declname>
        </param>
        <briefdescription>
<para>check file access, just calls access, but on windows, access is _access, </para>
        </briefdescription>
        <detaileddescription>
<para>file modes: 00 Existence only 02 Write permission 04 Read permission 06 Read and write permission </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="404" column="6" bodyfile="rrUtils.cpp" bodystart="404" bodyend="413" declfile="rrUtils.h" declline="58" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a69e87f813912552ae52d29b20e0d35cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::folderExists</definition>
        <argsstring>(const string &amp;folderName)</argsstring>
        <name>folderExists</name>
        <param>
          <type>const string &amp;</type>
          <declname>folderName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="415" column="6" bodyfile="rrUtils.cpp" bodystart="415" bodyend="425" declfile="rrUtils.h" declline="60" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a8da448d996dc6765a9395b3cb491ef15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>RR_DECLSPEC void rr::createTestSuiteFileNameParts</definition>
        <argsstring>(int caseNr, const string &amp;postFixPart, string &amp;modelFilePath, string &amp;modelName, string &amp;settingsFName, string &amp;descriptionFName)</argsstring>
        <name>createTestSuiteFileNameParts</name>
        <param>
          <type>int</type>
          <declname>caseNr</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>postFixPart</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>modelFilePath</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>modelName</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>settingsFName</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>descriptionFName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="427" column="6" bodyfile="rrUtils.cpp" bodystart="427" bodyend="439" declfile="rrUtils.h" declline="107" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1aedfc284f14a1544ae739728ccdb46ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC string rr::getTestSuiteSubFolderName</definition>
        <argsstring>(int caseNr)</argsstring>
        <name>getTestSuiteSubFolderName</name>
        <param>
          <type>int</type>
          <declname>caseNr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="441" column="8" bodyfile="rrUtils.cpp" bodystart="441" bodyend="446" declfile="rrUtils.h" declline="108" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a7186ee71af111b0571f094a2b354ad8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::hasUnimplementedTags</definition>
        <argsstring>(const string &amp;descriptionFileName)</argsstring>
        <name>hasUnimplementedTags</name>
        <param>
          <type>const string &amp;</type>
          <declname>descriptionFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="448" column="6" bodyfile="rrUtils.cpp" bodystart="448" bodyend="473" declfile="rrUtils.h" declline="110" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1ac8c10eccca3750d533442d96ed5bc3d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::isSemiStochasticTest</definition>
        <argsstring>(const string &amp;descriptionFileName)</argsstring>
        <name>isSemiStochasticTest</name>
        <param>
          <type>const string &amp;</type>
          <declname>descriptionFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="475" column="6" bodyfile="rrUtils.cpp" bodystart="475" bodyend="487" declfile="rrUtils.h" declline="112" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a180291b2986f505d401d76b616bf7b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::isFBCTest</definition>
        <argsstring>(const string &amp;descriptionFileName)</argsstring>
        <name>isFBCTest</name>
        <param>
          <type>const string &amp;</type>
          <declname>descriptionFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="489" column="6" bodyfile="rrUtils.cpp" bodystart="489" bodyend="506" declfile="rrUtils.h" declline="114" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1addfcc61e238fed821f4c60ad7a44759d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::createFolder</definition>
        <argsstring>(const string &amp;folder)</argsstring>
        <name>createFolder</name>
        <param>
          <type>const string &amp;</type>
          <declname>folder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="508" column="6" bodyfile="rrUtils.cpp" bodystart="508" bodyend="527" declfile="rrUtils.h" declline="61" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1ad4890ed3b9b711d0948ecbd79807dda3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::createFile</definition>
        <argsstring>(const string &amp;fName, std::ios_base::openmode mode)</argsstring>
        <name>createFile</name>
        <param>
          <type>const string &amp;</type>
          <declname>fName</declname>
        </param>
        <param>
          <type>std::ios_base::openmode</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="529" column="6" bodyfile="rrUtils.cpp" bodystart="529" bodyend="535" declfile="rrUtils.h" declline="134" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a80ae4a49fa526072d04180dad9276db6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::copyValues</definition>
        <argsstring>(vector&lt; double &gt; &amp;dest, double *source, const int &amp;nrVals, const int &amp;startIndex)</argsstring>
        <name>copyValues</name>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nrVals</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>startIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="537" column="6" bodyfile="rrUtils.cpp" bodystart="537" bodyend="551" declfile="rrUtils.h" declline="119" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1accac610ef66274a3d39da2edf6a5b602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::copyStdVectorToCArray</definition>
        <argsstring>(const vector&lt; double &gt; &amp;src, double *dest, int size)</argsstring>
        <name>copyStdVectorToCArray</name>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="553" column="6" bodyfile="rrUtils.cpp" bodystart="553" bodyend="566" declfile="rrUtils.h" declline="121" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1aecf6e88935ef6c9e02c16d021158b1e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::copyStdVectorToCArray</definition>
        <argsstring>(const vector&lt; bool &gt; &amp;src, bool *dest, int size)</argsstring>
        <name>copyStdVectorToCArray</name>
        <param>
          <type>const vector&lt; bool &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="568" column="6" bodyfile="rrUtils.cpp" bodystart="568" bodyend="581" declfile="rrUtils.h" declline="122" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a36b3ae158674372b7740fb5a7651da52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>RR_DECLSPEC vector&lt; double &gt; rr::createVector</definition>
        <argsstring>(const double *src, const int &amp;size)</argsstring>
        <name>createVector</name>
        <param>
          <type>const double *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="583" column="8" bodyfile="rrUtils.cpp" bodystart="583" bodyend="598" declfile="rrUtils.h" declline="124" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1aa83cab7d89cf90ca3ff6e9894d2a9308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::copyCArrayToStdVector</definition>
        <argsstring>(const int *src, vector&lt; int &gt; &amp;dest, int size)</argsstring>
        <name>copyCArrayToStdVector</name>
        <param>
          <type>const int *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="600" column="6" bodyfile="rrUtils.cpp" bodystart="600" bodyend="614" declfile="rrUtils.h" declline="117" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a918a0430a2756e2c3f76ae27e76c7131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::copyCArrayToStdVector</definition>
        <argsstring>(const double *src, vector&lt; double &gt; &amp;dest, int size)</argsstring>
        <name>copyCArrayToStdVector</name>
        <param>
          <type>const double *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="616" column="6" bodyfile="rrUtils.cpp" bodystart="616" bodyend="630" declfile="rrUtils.h" declline="118" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a6d95cc25b85b5a29a84de52893cf9131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>RR_DECLSPEC bool rr::copyCArrayToStdVector</definition>
        <argsstring>(const bool *src, vector&lt; bool &gt; &amp;dest, int size)</argsstring>
        <name>copyCArrayToStdVector</name>
        <param>
          <type>const bool *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>vector&lt; bool &gt; &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="632" column="6" bodyfile="rrUtils.cpp" bodystart="632" bodyend="646" declfile="rrUtils.h" declline="120" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1acd0ce4285b263bc47651c60105c69614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>RR_DECLSPEC double * rr::createVector</definition>
        <argsstring>(const vector&lt; double &gt; &amp;vec)</argsstring>
        <name>createVector</name>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="648" column="8" bodyfile="rrUtils.cpp" bodystart="648" bodyend="662" declfile="rrUtils.h" declline="123" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a473f23cdd4afded7551d35d316588263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC std::string rr::joinPath</definition>
        <argsstring>(const string &amp;p1, const string &amp;p2, const char pathSeparator=gPathSeparator)</argsstring>
        <name>joinPath</name>
        <param>
          <type>const string &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>pathSeparator</declname>
        </param>
        <briefdescription>
<para>Join two file paths together. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="664" column="8" bodyfile="rrUtils.cpp" bodystart="664" bodyend="677" declfile="rrUtils.h" declline="84" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1aab3c37fa859ea13109a88d6287feee1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC std::string rr::joinPath</definition>
        <argsstring>(const string &amp;p1, const string &amp;p2, const string &amp;p3, const char pathSeparator=gPathSeparator)</argsstring>
        <name>joinPath</name>
        <param>
          <type>const string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>pathSeparator</declname>
        </param>
        <briefdescription>
<para>join three file paths together. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="679" column="8" bodyfile="rrUtils.cpp" bodystart="679" bodyend="683" declfile="rrUtils.h" declline="90" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a6ba8cdc1dac6cb93c91adfae751363fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC std::string rr::joinPath</definition>
        <argsstring>(const string &amp;p1, const string &amp;p2, const string &amp;p3, const string &amp;p4, const char pathSeparator)</argsstring>
        <name>joinPath</name>
        <param>
          <type>const string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>pathSeparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="685" column="8" bodyfile="rrUtils.cpp" bodystart="685" bodyend="689" declfile="rrUtils.h" declline="93" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1a10af64b6f85d0b301848ea2ac1e88896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>RR_DECLSPEC std::string rr::joinPath</definition>
        <argsstring>(const string &amp;p1, const string &amp;p2, const string &amp;p3, const string &amp;p4, const string &amp;p5, const char pathSeparator)</argsstring>
        <name>joinPath</name>
        <param>
          <type>const string &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>p5</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>pathSeparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="691" column="8" bodyfile="rrUtils.cpp" bodystart="691" bodyend="695" declfile="rrUtils.h" declline="97" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8cpp_1ad1b5afe93a1b01cb209678d5657b6f5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>RR_DECLSPEC int64_t rr::getMicroSeconds</definition>
        <argsstring>()</argsstring>
        <name>getMicroSeconds</name>
        <briefdescription>
<para>Returns the timestamp expressed in microseconds since the Unix epoch, midnight, January 1, 1970. </para>
        </briefdescription>
        <detaileddescription>
<para>Note, this is a <emphasis>PRIVATE</emphasis> function, only reason why it is exported is so that the test suite can verify that it is increasing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.cpp" line="744" column="9" bodyfile="rrUtils.cpp" bodystart="744" bodyend="747" declfile="rrUtils.h" declline="144" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="rrUtils_8h_1af42371c63b84f382fe10ad407d0f1c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RR_DECLSPEC size_t</type>
        <definition>RR_DECLSPEC size_t rr::populateFileSet</definition>
        <argsstring>(const string &amp;modelsFolder, set&lt; string &gt; &amp;models)</argsstring>
        <name>populateFileSet</name>
        <param>
          <type>const string &amp;</type>
          <declname>modelsFolder</declname>
        </param>
        <param>
          <type>set&lt; string &gt; &amp;</type>
          <declname>models</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrUtils.h" line="46" column="29" declfile="rrUtils.h" declline="46" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="rrVersionInfo_8cpp_1abe5db9b8271f41644fa2c6b6b2b6f614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>RR_DECLSPEC std::string rr::getVersionStr</definition>
        <argsstring>(unsigned options=VERSIONSTR_BASIC|VERSIONSTR_COMPILER|VERSIONSTR_LIBSBML|VERSIONSTR_JITCOMPILER|VERSIONSTR_DATE)</argsstring>
        <name>getVersionStr</name>
        <param>
          <type>unsigned</type>
          <declname>options</declname>
          <defval>VERSIONSTR_BASIC|VERSIONSTR_COMPILER|VERSIONSTR_LIBSBML|VERSIONSTR_JITCOMPILER|VERSIONSTR_DATE</defval>
        </param>
        <briefdescription>
<para>get the roadrunner version string. </para>
        </briefdescription>
        <detaileddescription>
<para>The options can be any set of the values from the VersionStrOptions enum.</para>
<para>Each one of these options are concatenated into the output string and there are &apos;;&apos; separators between each of them. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrVersionInfo.cpp" line="17" column="13" bodyfile="rrVersionInfo.cpp" bodystart="17" bodyend="102" declfile="rrVersionInfo.h" declline="105" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="rrVersionInfo_8cpp_1a93ac3ac049826f33c95dd1f6e9835900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>RR_DECLSPEC std::string rr::getCopyrightStr</definition>
        <argsstring>()</argsstring>
        <name>getCopyrightStr</name>
        <briefdescription>
<para>get the copyright string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rrVersionInfo.cpp" line="104" column="13" bodyfile="rrVersionInfo.cpp" bodystart="104" bodyend="107" declfile="rrVersionInfo.h" declline="112" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="SBMLValidator_8cpp_1a7f405d05e71fef7173969b80f7dfb1d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rr::validateSBML</definition>
        <argsstring>(const std::string src, unsigned opt)</argsstring>
        <name>validateSBML</name>
        <param>
          <type>const std::string</type>
          <declname>src</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SBMLValidator.cpp" line="22" column="13" bodyfile="SBMLValidator.cpp" bodystart="22" bodyend="64" declfile="SBMLValidator.h" declline="62" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="SBMLValidator_8cpp_1ab8b63e9bff22a1e32c3161072b648285" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rr::hasInitialAssignment</definition>
        <argsstring>(const SpeciesReference *s)</argsstring>
        <name>hasInitialAssignment</name>
        <param>
          <type>const SpeciesReference *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SBMLValidator.cpp" line="67" column="13" bodyfile="SBMLValidator.cpp" bodystart="67" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="SBMLValidator_8cpp_1ad940221265fda26be8825c8a17683ed5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rr::hasAssignmentRule</definition>
        <argsstring>(const SpeciesReference *s)</argsstring>
        <name>hasAssignmentRule</name>
        <param>
          <type>const SpeciesReference *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SBMLValidator.cpp" line="81" column="13" bodyfile="SBMLValidator.cpp" bodystart="81" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="SBMLValidator_8cpp_1ad9b66b84d1c41deb4ab5390db8cf44c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rr::isStoichDefined</definition>
        <argsstring>(const SpeciesReference *s)</argsstring>
        <name>isStoichDefined</name>
        <param>
          <type>const SpeciesReference *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SBMLValidator.cpp" line="96" column="13" bodyfile="SBMLValidator.cpp" bodystart="96" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="SBMLValidator_8cpp_1af585973884561ea0c16025f92d59db34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::setSpeciesRefId</definition>
        <argsstring>(SpeciesReference *sr, const string &amp;idbase)</argsstring>
        <name>setSpeciesRefId</name>
        <param>
          <type>SpeciesReference *</type>
          <declname>sr</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>idbase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SBMLValidator.cpp" line="106" column="6" bodyfile="SBMLValidator.cpp" bodystart="106" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="SBMLValidator_8cpp_1a9ff6266c35facdac8de65e8105d38572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rr::fixMissingStoich</definition>
        <argsstring>(const std::string sbml)</argsstring>
        <name>fixMissingStoich</name>
        <param>
          <type>const std::string</type>
          <declname>sbml</declname>
        </param>
        <briefdescription>
<para>Adds missing stoichiometry information. Assumes unit stoichiometry where not specified. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
<simplesect kind="return"><para>SBML string with stoich fixed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SBMLValidator.cpp" line="135" column="13" bodyfile="SBMLValidator.cpp" bodystart="135" bodyend="213" declfile="SBMLValidator.h" declline="71" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="SolverRegistration_8cpp_1a0daebaea18e8b80851dae53b57e700ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rr::register_solvers_at_init</definition>
        <argsstring>()</argsstring>
        <name>register_solvers_at_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SolverRegistration.cpp" line="30" column="17" bodyfile="SolverRegistration.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="Variant_8cpp_1adff16f2d5a5cafae53d69fcb162bfa54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string rr::strip</definition>
        <argsstring>(const std::string &amp;in)</argsstring>
        <name>strip</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>strip any leading or trailing whitespace </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Variant.cpp" line="118" column="20" bodyfile="Variant.cpp" bodystart="118" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CVODEIntegrator.cpp" line="29" column="1"/>
  </compounddef>
</doxygen>
