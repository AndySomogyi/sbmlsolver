<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classrrllvm_1_1LLVMModelDataSymbols" kind="class" language="C++" prot="public">
    <compoundname>rrllvm::LLVMModelDataSymbols</compoundname>
    <includes refid="LLVMModelDataSymbols_8h" local="no">LLVMModelDataSymbols.h</includes>
    <innerclass refid="structrrllvm_1_1LLVMModelDataSymbols_1_1SpeciesReferenceInfo" prot="public">rrllvm::LLVMModelDataSymbols::SpeciesReferenceInfo</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classrrllvm_1_1LLVMModelDataSymbols_1aa5fe1d1312587483ae09898afee84e61" prot="public" static="no" strong="no">
        <type></type>
        <name>SpeciesReferenceType</name>
        <enumvalue id="classrrllvm_1_1LLVMModelDataSymbols_1aa5fe1d1312587483ae09898afee84e61afe5f7fb7789e29cbc3e7501442a51069" prot="public">
          <name>Reactant</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrrllvm_1_1LLVMModelDataSymbols_1aa5fe1d1312587483ae09898afee84e61afa44f253da6d8714f6849a60464bfe7e" prot="public">
          <name>Product</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrrllvm_1_1LLVMModelDataSymbols_1aa5fe1d1312587483ae09898afee84e61a33019cb8f29c3196f13c49fc4f4a1b4b" prot="public">
          <name>Modifier</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrrllvm_1_1LLVMModelDataSymbols_1aa5fe1d1312587483ae09898afee84e61a7067aad533bfacadb8c48a652b9f82db" prot="public">
          <name>MultiReactantProduct</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="135" column="5" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="enum" id="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63ced" prot="public" static="no" strong="no">
        <type></type>
        <name>SymbolIndexType</name>
        <enumvalue id="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63cedaa65ff14e7d52f8a4e4559180e222410e" prot="public">
          <name>FLOATING_SPECIES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63cedaef286fe1fdc493e91e499d27808851b6" prot="public">
          <name>BOUNDARY_SPECIES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63ceda779645ee2c527ab0ce5450124b37bbaa" prot="public">
          <name>COMPARTMENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63ceda8cbcf9a30aede8ca4fec98f952136b20" prot="public">
          <name>GLOBAL_PARAMETER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63ceda64179098652660463c58a59c15721976" prot="public">
          <name>REACTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63ceda3b21822f739c881acf98d826753a2ab1" prot="public">
          <name>EVENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63cedabe1bc48cc69db2e3b37dc6a0acf9f3f9" prot="public">
          <name>INVALID_SYMBOL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The model frequently looks for indices to sbml symbols. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a list of the types of sbml symbols that this class keeps track of. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="146" column="5" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="typedef" id="classrrllvm_1_1LLVMModelDataSymbols_1ab4534ab9e1b1dc198812208f11960702" prot="public" static="no">
        <type>std::map&lt; std::string, uint &gt;</type>
        <definition>typedef std::map&lt;std::string, uint&gt; rrllvm::LLVMModelDataSymbols::StringUIntMap</definition>
        <argsstring></argsstring>
        <name>StringUIntMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="130" column="22" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrrllvm_1_1LLVMModelDataSymbols_1a2cbc1c062773ded9fabbd5e9bffdab0b" prot="public" static="no">
        <type>std::map&lt; std::string, std::vector&lt; uint &gt; &gt;</type>
        <definition>typedef std::map&lt;std::string, std::vector&lt;uint&gt; &gt; rrllvm::LLVMModelDataSymbols::StringUIntVectorMap</definition>
        <argsstring></argsstring>
        <name>StringUIntVectorMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="131" column="22" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrrllvm_1_1LLVMModelDataSymbols_1a4bf890563731b1fe296dca200ce1ef98" prot="public" static="no">
        <type>std::pair&lt; std::string, uint &gt;</type>
        <definition>typedef std::pair&lt;std::string, uint&gt; rrllvm::LLVMModelDataSymbols::StringUIntPair</definition>
        <argsstring></argsstring>
        <name>StringUIntPair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="132" column="23" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrrllvm_1_1LLVMModelDataSymbols_1abffc137dab59dc26f324c12537ea207c" prot="public" static="no">
        <type>cxx11_ns::unordered_map&lt; uint, uint &gt;</type>
        <definition>typedef cxx11_ns::unordered_map&lt;uint, uint&gt; rrllvm::LLVMModelDataSymbols::UIntUIntMap</definition>
        <argsstring></argsstring>
        <name>UIntUIntMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="133" column="37" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classrrllvm_1_1LLVMModelDataSymbols_1a3163b3fe2cad57085c7776df4872e31c" prot="private" static="no">
        <type>std::map&lt; std::string, <ref refid="structrrllvm_1_1LLVMModelDataSymbols_1_1SpeciesReferenceInfo" kindref="compound">SpeciesReferenceInfo</ref> &gt;</type>
        <definition>typedef std::map&lt;std::string, SpeciesReferenceInfo&gt; rrllvm::LLVMModelDataSymbols::StringRefInfoMap</definition>
        <argsstring></argsstring>
        <name>StringRefInfoMap</name>
        <briefdescription>
<para>map of all identified species reference (species references with ids) to their indices in the stoichiometric matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="626" column="22" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a9b1eafc22dedc132d4c6ee3f8a7bd525" prot="private" static="no" mutable="no">
        <type>std::set&lt; std::string &gt;</type>
        <definition>std::set&lt;std::string&gt; rrllvm::LLVMModelDataSymbols::conservedMoietySpeciesSet</definition>
        <argsstring></argsstring>
        <name>conservedMoietySpeciesSet</name>
        <briefdescription>
<para>initialized in initFloatingSpecies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="411" column="14" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1afac2c4cca4d957282d3d63e90b5af17e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; rrllvm::LLVMModelDataSymbols::conservedMoietyGlobalParameter</definition>
        <argsstring></argsstring>
        <name>conservedMoietyGlobalParameter</name>
        <briefdescription>
<para>global parameter id conserved moiety status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="416" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a9010dde62214df0daf909d136220cdeb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint &gt;</type>
        <definition>std::vector&lt;uint&gt; rrllvm::LLVMModelDataSymbols::conservedMoietyGlobalParameterIndex</definition>
        <argsstring></argsstring>
        <name>conservedMoietyGlobalParameterIndex</name>
        <briefdescription>
<para>the index of a global parameter from a conserved moeity index. </para>
        </briefdescription>
        <detaileddescription>
<para>This array will be the size of the number of CM, each value of this array will be a global parameter index. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="425" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1ad97816e45bb3f490904ee731829067a2" prot="private" static="no" mutable="no">
        <type>UIntUIntMap</type>
        <definition>UIntUIntMap rrllvm::LLVMModelDataSymbols::floatingSpeciesToConservedMoietyIdMap</definition>
        <argsstring></argsstring>
        <name>floatingSpeciesToConservedMoietyIdMap</name>
        <briefdescription>
<para>map of floating species ids to conserved moiety ids. </para>
        </briefdescription>
        <detaileddescription>
<para>assume conserved moeity speces are stored in the sbml in the same order as the conserved moieties. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="433" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1ac4b7e8531062a9f27b3ae857d199faaa" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::conservedMoietyDepSpecies</definition>
        <argsstring></argsstring>
        <name>conservedMoietyDepSpecies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="436" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a5955a9a767446f6813579a58894c35e4" prot="private" static="no" mutable="no">
        <type>StringUIntVectorMap</type>
        <definition>StringUIntVectorMap rrllvm::LLVMModelDataSymbols::conservedMoietyIndSpecies</definition>
        <argsstring></argsstring>
        <name>conservedMoietyIndSpecies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="439" column="25" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a2f1348459bfb2bfdd293c1dbceabd481" prot="private" static="no" mutable="no">
        <type>std::set&lt; std::string &gt;</type>
        <definition>std::set&lt;std::string&gt; rrllvm::LLVMModelDataSymbols::initAssignmentRules</definition>
        <argsstring></argsstring>
        <name>initAssignmentRules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="554" column="14" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1aa61568481d95d1b470a92021329b50b7" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::initFloatingSpeciesMap</definition>
        <argsstring></argsstring>
        <name>initFloatingSpeciesMap</name>
        <briefdescription>
<para>map of floating species init value symbols to thier index in the array. </para>
        </briefdescription>
        <detaileddescription>
<para>All floating species are stored in this map, however they are reordered and only the ones with index &lt; independentInitFloatingSpeciesSize are allocated storage. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="564" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1ae185b55f6d198a1b93d02f639e6e65be" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::initBoundarySpeciesMap</definition>
        <argsstring></argsstring>
        <name>initBoundarySpeciesMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="565" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a05101d353db9fc29339b06a382905f71" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::initCompartmentsMap</definition>
        <argsstring></argsstring>
        <name>initCompartmentsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="566" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1af528abf5cfe89e34205d4f0c9a42a732" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::initGlobalParametersMap</definition>
        <argsstring></argsstring>
        <name>initGlobalParametersMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="567" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a8e56613d5cee0bd0578b5b1ade074355" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint rrllvm::LLVMModelDataSymbols::independentInitFloatingSpeciesSize</definition>
        <argsstring></argsstring>
        <name>independentInitFloatingSpeciesSize</name>
        <briefdescription>
<para>Elements that do NOT have assignment rules are considered independent initial conditions. </para>
        </briefdescription>
        <detaileddescription>
<para>Ind init conditions CAN however defined by rules.</para>
<para>ind init conditions are all elements that do not have assignment or initial assignment rules. float species init array has floating species NOT defined by init assignment rules, assignment rules, but rate rules are OK. This does not contain the init values for conserved species. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="585" column="10" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a3ad1d2334cafab5c366a10ab935a89f3" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint rrllvm::LLVMModelDataSymbols::independentInitBoundarySpeciesSize</definition>
        <argsstring></argsstring>
        <name>independentInitBoundarySpeciesSize</name>
        <briefdescription>
<para>boundary species not defined by any rule including init assignment rules. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="591" column="10" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1ad915ae8529f5d1739724a138dd951f8b" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint rrllvm::LLVMModelDataSymbols::independentInitGlobalParameterSize</definition>
        <argsstring></argsstring>
        <name>independentInitGlobalParameterSize</name>
        <briefdescription>
<para>global params not defined by any rule </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="596" column="10" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1ace4e8ba519e7d52af3f50141136fe5d0" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint rrllvm::LLVMModelDataSymbols::independentInitCompartmentSize</definition>
        <argsstring></argsstring>
        <name>independentInitCompartmentSize</name>
        <briefdescription>
<para>compartments not defined by any rules. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="601" column="10" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a076f2928ad6aeb44694e90cd4c9a7239" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint &gt;</type>
        <definition>std::vector&lt;uint&gt; rrllvm::LLVMModelDataSymbols::floatingSpeciesCompartmentIndices</definition>
        <argsstring></argsstring>
        <name>floatingSpeciesCompartmentIndices</name>
        <briefdescription>
<para>index of compartments for each float species. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="606" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a15562ccc22c7074cfb6fa217caa8f7f7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rrllvm::LLVMModelDataSymbols::modelName</definition>
        <argsstring></argsstring>
        <name>modelName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="615" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1af9bed36aa9c0087e58041dafe727ded7" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::floatingSpeciesMap</definition>
        <argsstring></argsstring>
        <name>floatingSpeciesMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="616" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a49aeda0eb1c41694f31f7d8a28ed7211" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::boundarySpeciesMap</definition>
        <argsstring></argsstring>
        <name>boundarySpeciesMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="617" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a4c528527bfa3aea016ce240c43e12012" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::compartmentsMap</definition>
        <argsstring></argsstring>
        <name>compartmentsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="618" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a843e911720f97ebce2837a806bd5b662" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::globalParametersMap</definition>
        <argsstring></argsstring>
        <name>globalParametersMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="619" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1aca9286b0dd1d69a946995f1e763092f5" prot="private" static="no" mutable="no">
        <type>StringRefInfoMap</type>
        <definition>StringRefInfoMap rrllvm::LLVMModelDataSymbols::namedSpeciesReferenceInfo</definition>
        <argsstring></argsstring>
        <name>namedSpeciesReferenceInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="627" column="22" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1aa6d3638ba24f564a0b17820754dba7d3" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::reactionsMap</definition>
        <argsstring></argsstring>
        <name>reactionsMap</name>
        <briefdescription>
<para>all reactions are named. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="632" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1acd7cc0aa3dbe15c85ca27c01d6021cb4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint &gt;</type>
        <definition>std::vector&lt;uint&gt; rrllvm::LLVMModelDataSymbols::stoichColIndx</definition>
        <argsstring></argsstring>
        <name>stoichColIndx</name>
        <briefdescription>
<para>the stochiometry matrix is # reactions rows by # species columns. </para>
        </briefdescription>
        <detaileddescription>
<para>the species indices go here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="639" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="639" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a6d642018d754d342f0fb1a5c7bfa2c52" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint &gt;</type>
        <definition>std::vector&lt;uint&gt; rrllvm::LLVMModelDataSymbols::stoichRowIndx</definition>
        <argsstring></argsstring>
        <name>stoichRowIndx</name>
        <briefdescription>
<para>and the reaction indices go here. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="644" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="644" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1abbf81109d40cf140a6e8c6651ab2489a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; rrllvm::LLVMModelDataSymbols::stoichIds</definition>
        <argsstring></argsstring>
        <name>stoichIds</name>
        <briefdescription>
<para>most species references are un-named, this is used so that if named ones have a rate rule, we can set the proper initial conditions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="650" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="650" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a03a85ffdaed8ede2f57d8b235ddb21f6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; SpeciesReferenceType &gt;</type>
        <definition>std::vector&lt;SpeciesReferenceType&gt; rrllvm::LLVMModelDataSymbols::stoichTypes</definition>
        <argsstring></argsstring>
        <name>stoichTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="652" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a33d7a4af64f56aa6d2a7a3bafba2903c" prot="private" static="no" mutable="no">
        <type>std::set&lt; std::string &gt;</type>
        <definition>std::set&lt;std::string&gt; rrllvm::LLVMModelDataSymbols::assignmentRules</definition>
        <argsstring></argsstring>
        <name>assignmentRules</name>
        <briefdescription>
<para>the set of rule, these contain the variable name of the rule so that we can quickly see if a symbol has an associated rule. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="658" column="14" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1aebf062f181b0248270975d64c260a2f3" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::rateRules</definition>
        <argsstring></argsstring>
        <name>rateRules</name>
        <briefdescription>
<para>rate rules, index by variable name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="663" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="663" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1af2174a52f790f539312c20b3ddd72de4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; rrllvm::LLVMModelDataSymbols::globalParameterRateRules</definition>
        <argsstring></argsstring>
        <name>globalParameterRateRules</name>
        <briefdescription>
<para>are global params defined by rate rules, set in initGlobalParam </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="669" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="669" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1aa567bc1eb6a3bec1fdd9c7b8d0dae69f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::independentFloatingSpeciesSize</definition>
        <argsstring></argsstring>
        <name>independentFloatingSpeciesSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="671" column="13" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1aa08fbea35330159bc2581bb4809ce1ee" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::independentBoundarySpeciesSize</definition>
        <argsstring></argsstring>
        <name>independentBoundarySpeciesSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="672" column="13" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="672" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1ae7502ae1c957279c1b4aaaaac4eaa179" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::independentGlobalParameterSize</definition>
        <argsstring></argsstring>
        <name>independentGlobalParameterSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="673" column="13" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="673" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a930ade38f7437bf3c80ea3a6493a8376" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::independentCompartmentSize</definition>
        <argsstring></argsstring>
        <name>independentCompartmentSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="674" column="13" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a235a336f09f4b9e69b5653904702e2ef" prot="private" static="no" mutable="no">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; rrllvm::LLVMModelDataSymbols::eventAssignmentsSize</definition>
        <argsstring></argsstring>
        <name>eventAssignmentsSize</name>
        <briefdescription>
<para>the number of assignments each event has </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="679" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1ae9a94fc760f5e44ad5fafde4c572deda" prot="private" static="no" mutable="no">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; rrllvm::LLVMModelDataSymbols::eventAttributes</definition>
        <argsstring></argsstring>
        <name>eventAttributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="681" column="17" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrrllvm_1_1LLVMModelDataSymbols_1a78411f48e153eeaa2a068f062f510ce6" prot="private" static="no" mutable="no">
        <type>StringUIntMap</type>
        <definition>StringUIntMap rrllvm::LLVMModelDataSymbols::eventIds</definition>
        <argsstring></argsstring>
        <name>eventIds</name>
        <briefdescription>
<para>map of event ids </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="686" column="19" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="686" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a5ad2e9b8c0ac752e91e167227fc1f9dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rrllvm::LLVMModelDataSymbols::LLVMModelDataSymbols</definition>
        <argsstring>()</argsstring>
        <name>LLVMModelDataSymbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="164" column="5" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="107" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a9e721ce6fe3fe2074a958948f30ed923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rrllvm::LLVMModelDataSymbols::LLVMModelDataSymbols</definition>
        <argsstring>(libsbml::Model const *model, unsigned options)</argsstring>
        <name>LLVMModelDataSymbols</name>
        <param>
          <type>libsbml::Model const *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="166" column="5" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="122" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ae1abf97dc1fed101bee0ee84eaec7765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rrllvm::LLVMModelDataSymbols::LLVMModelDataSymbols</definition>
        <argsstring>(std::istream &amp;in)</argsstring>
        <name>LLVMModelDataSymbols</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="168" column="1" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1aa9b2c22cf23f626f87c7b07bfa4a76cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>rrllvm::LLVMModelDataSymbols::~LLVMModelDataSymbols</definition>
        <argsstring>()</argsstring>
        <name>~LLVMModelDataSymbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="170" column="13" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a80dfffdf5f2ee467df1a8597ce158ab1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; rrllvm::LLVMModelDataSymbols::getModelName</definition>
        <argsstring>() const</argsstring>
        <name>getModelName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="172" column="23" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1af7456581fbe3fad0360424520a1a2eb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getCompartmentIndex</definition>
        <argsstring>(std::string const &amp;) const</argsstring>
        <name>getCompartmentIndex</name>
        <param>
          <type>std::string const &amp;</type>
          <defname>id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="174" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="257" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a2e17c59cadacce94bb68f93bcb7431bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63ced" kindref="member">SymbolIndexType</ref></type>
        <definition>LLVMModelDataSymbols::SymbolIndexType rrllvm::LLVMModelDataSymbols::getSymbolIndex</definition>
        <argsstring>(const std::string &amp;name, int &amp;result) const</argsstring>
        <name>getSymbolIndex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>checks to see if we have the given symbol in the sbml. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the sbml symbol to look up. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>if successfull, this is set to the index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the type of symbol, if no symbol is found, then INVALID_SYMBOL is returned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="184" column="21" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="217" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a4686047d567ae2d05491afc81514c4e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getFloatingSpeciesIndex</definition>
        <argsstring>(std::string const &amp;, bool requireIndependent=true) const</argsstring>
        <name>getFloatingSpeciesIndex</name>
        <param>
          <type>std::string const &amp;</type>
          <defname>id</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>requireIndependent</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>get the index of a floating species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>requireIndependent</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, the float species must be independent <ndash/> not defined by a rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="192" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="268" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1aaa19ecfa680f9c6e0fd683bbfd3f8e03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getBoundarySpeciesIndex</definition>
        <argsstring>(std::string const &amp;) const</argsstring>
        <name>getBoundarySpeciesIndex</name>
        <param>
          <type>std::string const &amp;</type>
          <defname>id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="194" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="283" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1abb28706ff4c68035973b79779cd932c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getIndependentBoundarySpeciesSize</definition>
        <argsstring>() const</argsstring>
        <name>getIndependentBoundarySpeciesSize</name>
        <briefdescription>
<para>number of boundary species not defined by rules. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="199" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="551" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a262c5cc26d6bd5fc7c3b4efdf49a76b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getIndependentFloatingSpeciesSize</definition>
        <argsstring>() const</argsstring>
        <name>getIndependentFloatingSpeciesSize</name>
        <briefdescription>
<para>number of fully indenpendent species, these are species that have thier dynamics fully determined by the reaction rates / stoichiometric matrix <ndash/> these DO NOT have any rules determining their dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para>This is size of the allocated array in the ModelData struct. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="209" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="486" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a76465828770aec3ce22b2de0e7e569f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getGlobalParameterIndex</definition>
        <argsstring>(std::string const &amp;) const</argsstring>
        <name>getGlobalParameterIndex</name>
        <param>
          <type>std::string const &amp;</type>
          <defname>id</defname>
        </param>
        <briefdescription>
<para>index of a global param given its name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>exception</parametername>
</parameternamelist>
<parameterdescription>
<para>if invalid name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="215" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="299" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a500d6e30fcb2a773c760b0951e627b02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getRateRuleIndex</definition>
        <argsstring>(std::string const &amp;) const</argsstring>
        <name>getRateRuleIndex</name>
        <param>
          <type>std::string const &amp;</type>
          <defname>id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="217" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="556" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a69e9b0306dfd2983d5454dc086bf91a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getRateRuleSize</definition>
        <argsstring>() const</argsstring>
        <name>getRateRuleSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="219" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="566" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ae1b9fb86d935f840f8ad9e60585ac8a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rrllvm::LLVMModelDataSymbols::getRateRuleId</definition>
        <argsstring>(size_t indx) const</argsstring>
        <name>getRateRuleId</name>
        <param>
          <type>size_t</type>
          <declname>indx</declname>
        </param>
        <briefdescription>
<para>get the symbolic id of the i&apos;th rate rule </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="224" column="17" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="571" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1aeace8ad2fe12479179b7b882270e92f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getIndependentGlobalParameterSize</definition>
        <argsstring>() const</argsstring>
        <name>getIndependentGlobalParameterSize</name>
        <briefdescription>
<para>number of global parameters which are not determined by rules. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="229" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="541" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ac46efa4d9e3dbc0aa6224a9324263b32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getReactionIndex</definition>
        <argsstring>(std::string const &amp;) const</argsstring>
        <name>getReactionIndex</name>
        <param>
          <type>std::string const &amp;</type>
          <defname>id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="231" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="371" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a7602edaf7eedfda3e0180fe40d0c4e8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; rrllvm::LLVMModelDataSymbols::getReactionIds</definition>
        <argsstring>() const</argsstring>
        <name>getReactionIds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="232" column="17" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="381" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1aa4b9afd9c0e75a2e8d4bbfea4811be0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getReactionSize</definition>
        <argsstring>() const</argsstring>
        <name>getReactionSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="233" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="386" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a4bef3053ddd428ae99f51d8260a5443f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; rrllvm::LLVMModelDataSymbols::getGlobalParameterIds</definition>
        <argsstring>() const</argsstring>
        <name>getGlobalParameterIds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="236" column="17" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="449" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a574e97b63fdb6098718d7f86bf0fab12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isRateRuleGlobalParameter</definition>
        <argsstring>(uint gid) const</argsstring>
        <name>isRateRuleGlobalParameter</name>
        <param>
          <type>uint</type>
          <declname>gid</declname>
        </param>
        <briefdescription>
<para>is the global parameter index defined by a rate rule. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="241" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1026" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a330dc333f5b9116091f8f79c10f4db46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; rrllvm::LLVMModelDataSymbols::getFloatingSpeciesIds</definition>
        <argsstring>() const</argsstring>
        <name>getFloatingSpeciesIds</name>
        <briefdescription>
<para>the list that is returned by ExecutableModel, so order must remain constant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="247" column="17" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="454" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a87b3733f8993e9654c1385256a370685" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rrllvm::LLVMModelDataSymbols::getFloatingSpeciesId</definition>
        <argsstring>(size_t indx) const</argsstring>
        <name>getFloatingSpeciesId</name>
        <param>
          <type>size_t</type>
          <declname>indx</declname>
        </param>
        <briefdescription>
<para>get the symbolic id of the i&apos;th floating species. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="253" column="17" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="459" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1af4ff843ba9adeebe28e935a7a20e4c1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rrllvm::LLVMModelDataSymbols::getGlobalParameterId</definition>
        <argsstring>(size_t indx) const</argsstring>
        <name>getGlobalParameterId</name>
        <param>
          <type>size_t</type>
          <declname>indx</declname>
        </param>
        <briefdescription>
<para>find the id of the given global parameter index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="259" column="17" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1032" bodyend="1056"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1af008f3b08eec501c2a338403cd33ef07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getFloatingSpeciesSize</definition>
        <argsstring>() const</argsstring>
        <name>getFloatingSpeciesSize</name>
        <briefdescription>
<para>total size of all floating species. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="264" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a141bc08ae5e8c6a2f27889179a8c05e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getBoundarySpeciesSize</definition>
        <argsstring>() const</argsstring>
        <name>getBoundarySpeciesSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="266" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1aa1ff9230c47c62ac39139aa8a1a537b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getCompartmentsSize</definition>
        <argsstring>() const</argsstring>
        <name>getCompartmentsSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="268" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="613" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ac85f10c85db3ae8ac13e8cadd9e5847f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getGlobalParametersSize</definition>
        <argsstring>() const</argsstring>
        <name>getGlobalParametersSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="270" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="618" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a9d22d5634a62074692775b8410ac2bfa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; rrllvm::LLVMModelDataSymbols::getCompartmentIds</definition>
        <argsstring>() const</argsstring>
        <name>getCompartmentIds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="272" column="17" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1af15296d2d5be06122ee753e6d13f61e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getIndependentCompartmentSize</definition>
        <argsstring>() const</argsstring>
        <name>getIndependentCompartmentSize</name>
        <briefdescription>
<para>number of compartments which are not determined by rules. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="277" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="546" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a293abc94dbd65d23e12295885c883bd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; rrllvm::LLVMModelDataSymbols::getBoundarySpeciesIds</definition>
        <argsstring>() const</argsstring>
        <name>getBoundarySpeciesIds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="280" column="17" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="366" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ace13c6c788427ff65704820837096248" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; <ref refid="structrrllvm_1_1LLVMModelDataSymbols_1_1SpeciesReferenceInfo" kindref="compound">SpeciesReferenceInfo</ref> &gt;</type>
        <definition>std::list&lt; LLVMModelDataSymbols::SpeciesReferenceInfo &gt; rrllvm::LLVMModelDataSymbols::getStoichiometryIndx</definition>
        <argsstring>() const</argsstring>
        <name>getStoichiometryIndx</name>
        <briefdescription>
<para>get a list of all the non-zero entries in the stoichiometry matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>in the list of pairs, first is the row (species) index, and second is the column (reaction) index. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="289" column="15" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="397" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a10947a4f97f82f04320462c1508fdbb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
<para>initialize and allocate the buffers (including the stoich matrix) for an existing ModelData struct. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="297" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="411" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a704d4971c8a1d8f0a5021cacb6a1c4f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isIndependentElement</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>isIndependentElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>if there are no rules for an element, then they are considered independent. </para>
        </briefdescription>
        <detaileddescription>
<para>These are only for elements, not init values, will return false for all init symbols.</para>
<para>Only valid after class has been constructed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="308" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="597" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a506d1122968d4951673a4aec87c78ea0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::hasRateRule</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>hasRateRule</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="311" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="608" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a740913ccaa569ba8da3489e386140f27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::hasAssignmentRule</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>hasAssignmentRule</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="313" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="603" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ac948be567dc482a2236a6bf30b9224fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::hasInitialAssignmentRule</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>hasInitialAssignmentRule</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="315" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1493" bodyend="1496"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a1d115b42b3308eef6ec4366d7a572578" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isIndependentFloatingSpecies</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>isIndependentFloatingSpecies</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="317" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="491" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a289116dff2ca1b0013e0615313fedee9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isIndependentBoundarySpecies</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>isIndependentBoundarySpecies</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="319" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="499" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a65eb83ec0a148efde52b6ab89da1534f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isBoundarySpecies</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>isBoundarySpecies</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="321" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="507" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1abefe8482dd1cfde6a58b1c9e613809de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isIndependentGlobalParameter</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>isIndependentGlobalParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="323" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="514" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1aae3e5082c125a0d26a1fae4a426774bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isIndependentCompartment</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>isIndependentCompartment</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="325" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="522" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a693082c5cd7013a90b6047c2a2cf37e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isNamedSpeciesReference</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>isNamedSpeciesReference</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="327" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1395" bodyend="1398"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1aa1caf7bc88917aa0719de4f738badb5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structrrllvm_1_1LLVMModelDataSymbols_1_1SpeciesReferenceInfo" kindref="compound">SpeciesReferenceInfo</ref> &amp;</type>
        <definition>const LLVMModelDataSymbols::SpeciesReferenceInfo &amp; rrllvm::LLVMModelDataSymbols::getNamedSpeciesReferenceInfo</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>getNamedSpeciesReferenceInfo</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="329" column="32" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1401" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a55a42e526c9ae39fe0a7a3c4befe7630" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isConservedMoietySpecies</definition>
        <argsstring>(const std::string &amp;symbol) const</argsstring>
        <name>isConservedMoietySpecies</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>checks if the given symbol is a init value for a conserved species. </para>
        </briefdescription>
        <detaileddescription>
<para>Global parameters or floating species can be conservied moieties, a global parameter is a CM if it is defined by a inital assignment rules as a linear of one CM species and a set of indepdent floating species.</para>
<para>A floating species may be a CM if it is defined by a rule as a linear combination of independent species.</para>
<para>If a floating species is a CM, then it must by definition be a dependent floating species.</para>
<para>It can however have independent initial conditions defined either by intial values or initial assignment rules. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="357" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1451" bodyend="1454"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ae43de59bdc21713da5ce118e627a3146" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isConservedMoietySpecies</definition>
        <argsstring>(uint id, uint &amp;result) const</argsstring>
        <name>isConservedMoietySpecies</name>
        <param>
          <type>uint</type>
          <declname>id</declname>
        </param>
        <param>
          <type>uint &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>checks if the given floating species id corresponds to to a conserved moiety species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>index of floating species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the conserved moiety if this is a conserved moiety species. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true or false if this is a cm species or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="368" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1068" bodyend="1077"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a9e49129c6b005685104b5870624e9b42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isConservedMoietyParameter</definition>
        <argsstring>(uint id) const</argsstring>
        <name>isConservedMoietyParameter</name>
        <param>
          <type>uint</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>check if the global parameter with the given id is a conserved moiety. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="374" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1020" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a9270500be0ded95f93647ae6ef84f16e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getConservedMoietySize</definition>
        <argsstring>() const</argsstring>
        <name>getConservedMoietySize</name>
        <briefdescription>
<para>get the number of conserved moieties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="379" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1559" bodyend="1562"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ad61a2037d76721bade273a24383870d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getDepSpeciesIndexForConservedMoietyId</definition>
        <argsstring>(std::string id) const</argsstring>
        <name>getDepSpeciesIndexForConservedMoietyId</name>
        <param>
          <type>std::string</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>get the dependent species for a given conserved moiety id </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="384" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1564" bodyend="1572"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a60afb2eed41a8fed24efdc44306bb23f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint &gt; &amp;</type>
        <definition>const std::vector&lt; uint &gt; &amp; rrllvm::LLVMModelDataSymbols::getIndSpeciesIndexForConservedMoietyId</definition>
        <argsstring>(std::string id) const</argsstring>
        <name>getIndSpeciesIndexForConservedMoietyId</name>
        <param>
          <type>std::string</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>get all the independent species for a given conserved moiety id </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="389" column="23" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1574" bodyend="1585"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a4cb1789b52faa73f68f50cd1dd8d7705" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getConservedMoietyGlobalParameterIndex</definition>
        <argsstring>(uint cmIndex) const</argsstring>
        <name>getConservedMoietyGlobalParameterIndex</name>
        <param>
          <type>uint</type>
          <declname>cmIndex</declname>
        </param>
        <briefdescription>
<para>get the index of a global parameter given a conserved moiety index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="394" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1587" bodyend="1595"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1adfa3954a853a482b31714be8d7e16280" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rrllvm::LLVMModelDataSymbols::getConservedMoietyId</definition>
        <argsstring>(size_t indx) const</argsstring>
        <name>getConservedMoietyId</name>
        <param>
          <type>size_t</type>
          <declname>indx</declname>
        </param>
        <briefdescription>
<para>find the id of the given conserved moiety index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="399" column="17" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1597" bodyend="1601"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a7236921758c3602ce5d77acd73aa61b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getConservedMoietyIndex</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>getConservedMoietyIndex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>get the id of a conserved moiety given its name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="404" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1603" bodyend="1621"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a673f85f4bfe115781be2090428b800b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; unsigned char &gt; &amp;</type>
        <definition>const std::vector&lt; unsigned char &gt; &amp; rrllvm::LLVMModelDataSymbols::getEventAttributes</definition>
        <argsstring>() const</argsstring>
        <name>getEventAttributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="447" column="23" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1384" bodyend="1387"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1aaa8a9bca324a06ec19edbc2c50b3f262" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getEventBufferSize</definition>
        <argsstring>(size_t eventId) const</argsstring>
        <name>getEventBufferSize</name>
        <param>
          <type>size_t</type>
          <declname>eventId</declname>
        </param>
        <briefdescription>
<para>get the size (in number of doubles) of the buffer that events need to save the event data to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="458" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1389" bodyend="1393"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a32e0b4d1aa32145bc261775d323e67b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint &gt; &amp;</type>
        <definition>const std::vector&lt; uint &gt; &amp; rrllvm::LLVMModelDataSymbols::getStoichRowIndx</definition>
        <argsstring>() const</argsstring>
        <name>getStoichRowIndx</name>
        <briefdescription>
<para>the the row indices of non-zero stoichiometry values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="463" column="23" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="351" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a2c749029ee8a4a5f3dcfa3e49ee54824" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint &gt; &amp;</type>
        <definition>const std::vector&lt; uint &gt; &amp; rrllvm::LLVMModelDataSymbols::getStoichColIndx</definition>
        <argsstring>() const</argsstring>
        <name>getStoichColIndx</name>
        <briefdescription>
<para>the the column indices of non-zero stoichiometry values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="468" column="23" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="356" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1af242d61196597833aa9e1c5c1850910d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isIndependentInitFloatingSpecies</definition>
        <argsstring>(const std::string &amp;symbol) const</argsstring>
        <name>isIndependentInitFloatingSpecies</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>checks if the given symbol is an init value for an independent floating species. </para>
        </briefdescription>
        <detaileddescription>
<para>Conserved Moiety species are considered to have independent initial condtions as in this case, the assignment rule only applies at time t &gt; 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="483" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1456" bodyend="1462"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a775dc49eff5e65aa7e7e88d3a7485976" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isIndependentInitElement</definition>
        <argsstring>(const std::string &amp;symbol) const</argsstring>
        <name>isIndependentInitElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>Is this sbml element an independent initial value. </para>
        </briefdescription>
        <detaileddescription>
<para>True if this value does NOT have an assignment or initial assignment rule.</para>
<para>Independent initial values do not have assignment or initial assigment rules, but may have rate rules. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="494" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1485" bodyend="1491"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a8711b0a0c667e10454984b6589409514" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isIndependentInitCompartment</definition>
        <argsstring>(const std::string &amp;symbol) const</argsstring>
        <name>isIndependentInitCompartment</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="496" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1464" bodyend="1470"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a9e69809c00382d494280b0124bae2e57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isIndependentInitGlobalParameter</definition>
        <argsstring>(const std::string &amp;symbol) const</argsstring>
        <name>isIndependentInitGlobalParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>has this string been found to be an independent init global param<ndash/> is a global param and not having an assignment or init assignment rule. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="502" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1472" bodyend="1478"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a4980057e894a24a75faad509c9ecc616" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isIndependentInitGlobalParameter</definition>
        <argsstring>(size_t id) const</argsstring>
        <name>isIndependentInitGlobalParameter</name>
        <param>
          <type>size_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>is this global parameter id an independent init param <ndash/> a global param without an init assignment rule. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="509" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1480" bodyend="1483"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ac7d78cdbadcc805571ab7ce9ff8870be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getFloatingSpeciesInitIndex</definition>
        <argsstring>(const std::string &amp;symbol) const</argsstring>
        <name>getFloatingSpeciesInitIndex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>get the index of a floating species initial value. </para>
        </briefdescription>
        <detaileddescription>
<para>has the same index as the run time floating species. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="516" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1416" bodyend="1425"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1af08014c2f00c6f8721f5ec253e9af2a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getCompartmentInitIndex</definition>
        <argsstring>(const std::string &amp;symbol) const</argsstring>
        <name>getCompartmentInitIndex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>get the index of a compartment initial value </para>
        </briefdescription>
        <detaileddescription>
<para>has the same index as the run time compartment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="523" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1427" bodyend="1436"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ac8c9d2e8c243bcbfc4b524dcee460be0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getCompartmentIndexForFloatingSpecies</definition>
        <argsstring>(size_t floatIndex) const</argsstring>
        <name>getCompartmentIndexForFloatingSpecies</name>
        <param>
          <type>size_t</type>
          <declname>floatIndex</declname>
        </param>
        <briefdescription>
<para>get the index of a compartment for a float species. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="528" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1058" bodyend="1066"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ade8b52affdb741d79c538f14c0813acf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getGlobalParameterInitIndex</definition>
        <argsstring>(const std::string &amp;symbol) const</argsstring>
        <name>getGlobalParameterInitIndex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>get the index of a global parameter initial value </para>
        </briefdescription>
        <detaileddescription>
<para>has the same index as the run time global parameter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="535" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1439" bodyend="1448"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a318fc67557734a7a50eab9e4a0def38d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getInitCompartmentSize</definition>
        <argsstring>() const</argsstring>
        <name>getInitCompartmentSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="537" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1498" bodyend="1501"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ad5b54f92fccaa1fe92d8406e2f9bc14c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getInitFloatingSpeciesSize</definition>
        <argsstring>() const</argsstring>
        <name>getInitFloatingSpeciesSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="538" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1503" bodyend="1506"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1aeb1eadd29a31d11893946d97ab58800e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getInitBoundarySpeciesSize</definition>
        <argsstring>() const</argsstring>
        <name>getInitBoundarySpeciesSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="539" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1508" bodyend="1511"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ae896dde301d464d645a8a477d8e21d81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rrllvm::LLVMModelDataSymbols::getInitGlobalParameterSize</definition>
        <argsstring>() const</argsstring>
        <name>getInitGlobalParameterSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="540" column="12" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1513" bodyend="1516"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1abfcfe60fdf6c0792a2a9cb61132cdff2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; rrllvm::LLVMModelDataSymbols::getEventIds</definition>
        <argsstring>() const</argsstring>
        <name>getEventIds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="542" column="17" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1518" bodyend="1521"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ab3e8054b5ef8d3f6fe151f6f0b28b1c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rrllvm::LLVMModelDataSymbols::getEventId</definition>
        <argsstring>(size_t indx) const</argsstring>
        <name>getEventId</name>
        <param>
          <type>size_t</type>
          <declname>indx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="544" column="17" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1523" bodyend="1547"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a080d4ea2f49acc229c3fd94dccbe1b43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rrllvm::LLVMModelDataSymbols::getEventIndex</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>getEventIndex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="546" column="9" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1549" bodyend="1557"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1adde4ee18438b1cca520afdd1c81c8781" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::saveState</definition>
        <argsstring>(std::ostream &amp;) const</argsstring>
        <name>saveState</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="548" column="6" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1623" bodyend="1671"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a2c9adebe4b3d4deb48cf44ba14ec565b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::loadState</definition>
        <argsstring>(std::istream &amp;)</argsstring>
        <name>loadState</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="550" column="6" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1673" bodyend="1721"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a32e6b447a358eb4a0aa22723cc7ea2e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * rrllvm::LLVMModelDataSymbols::getFieldName</definition>
        <argsstring>(ModelDataFields field)</argsstring>
        <name>getFieldName</name>
        <param>
          <type>ModelDataFields</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>get the textual form of the field names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="452" column="23" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="529" bodyend="539"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1af721c4485e5f9d22716da8925fc66219" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::initBoundarySpecies</definition>
        <argsstring>(const libsbml::Model *)</argsstring>
        <name>initBoundarySpecies</name>
        <param>
          <type>const libsbml::Model *</type>
          <defname>model</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="688" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="734" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a77529f0aa2b1316c84e94b68d68fc0e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::initFloatingSpecies</definition>
        <argsstring>(const libsbml::Model *, bool conservedMoieties)</argsstring>
        <name>initFloatingSpecies</name>
        <param>
          <type>const libsbml::Model *</type>
          <defname>model</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>conservedMoieties</declname>
        </param>
        <briefdescription>
<para>init the floating species symbols. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conservedMoieties</parametername>
</parameternamelist>
<parameterdescription>
<para>are conserved moieties enabled? </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="695" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="793" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a1473cbaf10feca1c969a98540718e580" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::initCompartments</definition>
        <argsstring>(const libsbml::Model *)</argsstring>
        <name>initCompartments</name>
        <param>
          <type>const libsbml::Model *</type>
          <defname>model</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="701" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="953" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1aa051ce8fa18d9cb45009e548aa15b61f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::initGlobalParameters</definition>
        <argsstring>(const libsbml::Model *model, bool conservedMoieties)</argsstring>
        <name>initGlobalParameters</name>
        <param>
          <type>const libsbml::Model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>conservedMoieties</declname>
        </param>
        <briefdescription>
<para>get the global parameters, need to reorder them to set the independent ones first </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conservedMoieties</parametername>
</parameternamelist>
<parameterdescription>
<para>are conserved moieties enabled? </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="709" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="623" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1af92df3745145e552b05e431101f223e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::initReactions</definition>
        <argsstring>(const libsbml::Model *model)</argsstring>
        <name>initReactions</name>
        <param>
          <type>const libsbml::Model *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="712" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1101" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1abae27f91a9bed343c015e0f0fee9ca9d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::displayCompartmentInfo</definition>
        <argsstring>()</argsstring>
        <name>displayCompartmentInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="714" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1319" bodyend="1337"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a651426a37f368fd0bf1dbb24a6b51a1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::initEvents</definition>
        <argsstring>(const libsbml::Model *model)</argsstring>
        <name>initEvents</name>
        <param>
          <type>const libsbml::Model *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="716" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1339" bodyend="1382"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ab9d98368da2244c859e96c32f72b88f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::LLVMModelDataSymbols::isValidFloatingSpeciesReference</definition>
        <argsstring>(const libsbml::SimpleSpeciesReference *, const std::string &amp;reacOrProd)</argsstring>
        <name>isValidFloatingSpeciesReference</name>
        <param>
          <type>const libsbml::SimpleSpeciesReference *</type>
          <defname>ref</defname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>reacOrProd</declname>
        </param>
        <briefdescription>
<para>determine is this species can be used as a species reference, in the sense that it will add a column to the stochiometry matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>Boundary species are not consumed or produced in reactions. If this is invalid float species, such as its defined by a rule this will log the reason. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="727" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1274" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a1b6cd9afb2cdc0cb5e5ba618bdf05f47" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::setNamedSpeciesReferenceInfo</definition>
        <argsstring>(uint row, uint column, SpeciesReferenceType type)</argsstring>
        <name>setNamedSpeciesReferenceInfo</name>
        <param>
          <type>uint</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>column</declname>
        </param>
        <param>
          <type>SpeciesReferenceType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>set the type of all species references. </para>
        </briefdescription>
        <detaileddescription>
<para>row is species, column is reaction </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="734" column="10" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1082" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1ac16cbe072b1acbec2742097346dd967d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::saveStringRefInfoMap</definition>
        <argsstring>(std::ostream &amp;, const StringRefInfoMap &amp;) const</argsstring>
        <name>saveStringRefInfoMap</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <param>
          <type>const StringRefInfoMap &amp;</type>
          <defname>m</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="737" column="6" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1723" bodyend="1731"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a4f0a2de614e3188351fc22c48eee2c6a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::loadStringRefInfoMap</definition>
        <argsstring>(std::istream &amp;, StringRefInfoMap &amp;)</argsstring>
        <name>loadStringRefInfoMap</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>in</defname>
        </param>
        <param>
          <type>StringRefInfoMap &amp;</type>
          <defname>m</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="739" column="6" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1733" bodyend="1746"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a59bfe0b3c1b163610b3a97c7b51f0baa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::saveBinarySpeciesReferenceInfo</definition>
        <argsstring>(std::ostream &amp;, SpeciesReferenceInfo &amp;sri) const</argsstring>
        <name>saveBinarySpeciesReferenceInfo</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <param>
          <type><ref refid="structrrllvm_1_1LLVMModelDataSymbols_1_1SpeciesReferenceInfo" kindref="compound">SpeciesReferenceInfo</ref> &amp;</type>
          <declname>sri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="741" column="6" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1748" bodyend="1754"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelDataSymbols_1a7ba4403878c784f52671d9902d644797" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rrllvm::LLVMModelDataSymbols::loadBinarySpeciesReferenceInfo</definition>
        <argsstring>(std::istream &amp;, SpeciesReferenceInfo &amp;)</argsstring>
        <name>loadBinarySpeciesReferenceInfo</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>in</defname>
        </param>
        <param>
          <type><ref refid="structrrllvm_1_1LLVMModelDataSymbols_1_1SpeciesReferenceInfo" kindref="compound">SpeciesReferenceInfo</ref> &amp;</type>
          <defname>sri</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelDataSymbols.h" line="743" column="6" bodyfile="llvm/LLVMModelDataSymbols.cpp" bodystart="1756" bodyend="1762"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>stores the names of all the symbols in the sbml model and thier indexes in the ModelData arrays. </para>
    </briefdescription>
    <detaileddescription>
<para>This class essentially maps symbol names into ModelData indexes.</para>
<para>The logic behind splitting up <ref refid="classrrllvm_1_1LLVMModelDataSymbols" kindref="compound">LLVMModelDataSymbols</ref> and <ref refid="classrrllvm_1_1LLVMModelSymbols" kindref="compound">LLVMModelSymbols</ref> is that <ref refid="classrrllvm_1_1LLVMModelSymbols" kindref="compound">LLVMModelSymbols</ref> contains all the ASTs from the model, and this contains only ModelData indices <ndash/> once the all the model functions are generated, there is no need to keep AST information around, but we still need to know what symbol is at what index for the various Model accessor functions.</para>
<para><itemizedlist>
<listitem><para>data storage: There can exist rules (assigment, rate, and eventually algebraic) rules that determine the value of a symbol.</para>
</listitem></itemizedlist>
</para>
<para>All items for which a rate rule exists are stored in the modelData::rateRules array.</para>
<para>No space is allocated for items determined by rate rules.</para>
<para><itemizedlist>
<listitem><para>All elements get an index value, even the dependent ones, this allows us uniquely indentify them in the generated accessor functions.</para>
</listitem><listitem><para>Most of the indexes used in this class are indexes into ModelData arrays, therefore we use unsigned integers <ndash/> these are less error prone and its easier to check if they are valid i.e. only check that they are less than the the array size and we do not have to check that it is positive.</para>
</listitem><listitem><para>All symbols from the sbml are reordered such that the independent ones are first, followed by the dependent values. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="llvm/LLVMModelDataSymbols.h" line="126" column="1" bodyfile="llvm/LLVMModelDataSymbols.h" bodystart="127" bodyend="744"/>
    <listofallmembers>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a33d7a4af64f56aa6d2a7a3bafba2903c" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>assignmentRules</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63cedaef286fe1fdc493e91e499d27808851b6" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>BOUNDARY_SPECIES</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a49aeda0eb1c41694f31f7d8a28ed7211" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>boundarySpeciesMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63ceda779645ee2c527ab0ce5450124b37bbaa" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>COMPARTMENT</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a4c528527bfa3aea016ce240c43e12012" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>compartmentsMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ac4b7e8531062a9f27b3ae857d199faaa" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>conservedMoietyDepSpecies</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1afac2c4cca4d957282d3d63e90b5af17e" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>conservedMoietyGlobalParameter</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9010dde62214df0daf909d136220cdeb" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>conservedMoietyGlobalParameterIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a5955a9a767446f6813579a58894c35e4" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>conservedMoietyIndSpecies</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9b1eafc22dedc132d4c6ee3f8a7bd525" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>conservedMoietySpeciesSet</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1abae27f91a9bed343c015e0f0fee9ca9d" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>displayCompartmentInfo</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63ceda3b21822f739c881acf98d826753a2ab1" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>EVENT</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a235a336f09f4b9e69b5653904702e2ef" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>eventAssignmentsSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ae9a94fc760f5e44ad5fafde4c572deda" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>eventAttributes</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a78411f48e153eeaa2a068f062f510ce6" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>eventIds</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63cedaa65ff14e7d52f8a4e4559180e222410e" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>FLOATING_SPECIES</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a076f2928ad6aeb44694e90cd4c9a7239" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>floatingSpeciesCompartmentIndices</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1af9bed36aa9c0087e58041dafe727ded7" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>floatingSpeciesMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ad97816e45bb3f490904ee731829067a2" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>floatingSpeciesToConservedMoietyIdMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a293abc94dbd65d23e12295885c883bd6" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getBoundarySpeciesIds</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aaa19ecfa680f9c6e0fd683bbfd3f8e03" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getBoundarySpeciesIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a141bc08ae5e8c6a2f27889179a8c05e8" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getBoundarySpeciesSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9d22d5634a62074692775b8410ac2bfa" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getCompartmentIds</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1af7456581fbe3fad0360424520a1a2eb2" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getCompartmentIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ac8c9d2e8c243bcbfc4b524dcee460be0" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getCompartmentIndexForFloatingSpecies</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1af08014c2f00c6f8721f5ec253e9af2a2" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getCompartmentInitIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa1ff9230c47c62ac39139aa8a1a537b5" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getCompartmentsSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a4cb1789b52faa73f68f50cd1dd8d7705" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getConservedMoietyGlobalParameterIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1adfa3954a853a482b31714be8d7e16280" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getConservedMoietyId</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a7236921758c3602ce5d77acd73aa61b2" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getConservedMoietyIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9270500be0ded95f93647ae6ef84f16e" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getConservedMoietySize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ad61a2037d76721bade273a24383870d2" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getDepSpeciesIndexForConservedMoietyId</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a673f85f4bfe115781be2090428b800b3" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getEventAttributes</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aaa8a9bca324a06ec19edbc2c50b3f262" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getEventBufferSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ab3e8054b5ef8d3f6fe151f6f0b28b1c4" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getEventId</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1abfcfe60fdf6c0792a2a9cb61132cdff2" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getEventIds</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a080d4ea2f49acc229c3fd94dccbe1b43" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getEventIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a32e6b447a358eb4a0aa22723cc7ea2e6" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getFieldName</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a87b3733f8993e9654c1385256a370685" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getFloatingSpeciesId</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a330dc333f5b9116091f8f79c10f4db46" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getFloatingSpeciesIds</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a4686047d567ae2d05491afc81514c4e1" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getFloatingSpeciesIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ac7d78cdbadcc805571ab7ce9ff8870be" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getFloatingSpeciesInitIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1af008f3b08eec501c2a338403cd33ef07" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getFloatingSpeciesSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1af4ff843ba9adeebe28e935a7a20e4c1c" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getGlobalParameterId</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a4bef3053ddd428ae99f51d8260a5443f" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getGlobalParameterIds</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a76465828770aec3ce22b2de0e7e569f2" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getGlobalParameterIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ade8b52affdb741d79c538f14c0813acf" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getGlobalParameterInitIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ac85f10c85db3ae8ac13e8cadd9e5847f" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getGlobalParametersSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1abb28706ff4c68035973b79779cd932c2" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getIndependentBoundarySpeciesSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1af15296d2d5be06122ee753e6d13f61e1" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getIndependentCompartmentSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a262c5cc26d6bd5fc7c3b4efdf49a76b9" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getIndependentFloatingSpeciesSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aeace8ad2fe12479179b7b882270e92f5" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getIndependentGlobalParameterSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a60afb2eed41a8fed24efdc44306bb23f" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getIndSpeciesIndexForConservedMoietyId</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aeb1eadd29a31d11893946d97ab58800e" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getInitBoundarySpeciesSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a318fc67557734a7a50eab9e4a0def38d" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getInitCompartmentSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ad5b54f92fccaa1fe92d8406e2f9bc14c" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getInitFloatingSpeciesSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ae896dde301d464d645a8a477d8e21d81" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getInitGlobalParameterSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a80dfffdf5f2ee467df1a8597ce158ab1" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getModelName</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa1caf7bc88917aa0719de4f738badb5d" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getNamedSpeciesReferenceInfo</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ae1b9fb86d935f840f8ad9e60585ac8a4" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getRateRuleId</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a500d6e30fcb2a773c760b0951e627b02" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getRateRuleIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a69e9b0306dfd2983d5454dc086bf91a2" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getRateRuleSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a7602edaf7eedfda3e0180fe40d0c4e8f" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getReactionIds</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ac46efa4d9e3dbc0aa6224a9324263b32" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getReactionIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa4b9afd9c0e75a2e8d4bbfea4811be0e" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getReactionSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a2c749029ee8a4a5f3dcfa3e49ee54824" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getStoichColIndx</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ace13c6c788427ff65704820837096248" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getStoichiometryIndx</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a32e0b4d1aa32145bc261775d323e67b0" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getStoichRowIndx</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a2e17c59cadacce94bb68f93bcb7431bb" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>getSymbolIndex</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63ceda8cbcf9a30aede8ca4fec98f952136b20" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>GLOBAL_PARAMETER</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1af2174a52f790f539312c20b3ddd72de4" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>globalParameterRateRules</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a843e911720f97ebce2837a806bd5b662" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>globalParametersMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a740913ccaa569ba8da3489e386140f27" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>hasAssignmentRule</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ac948be567dc482a2236a6bf30b9224fd" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>hasInitialAssignmentRule</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a506d1122968d4951673a4aec87c78ea0" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>hasRateRule</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa08fbea35330159bc2581bb4809ce1ee" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>independentBoundarySpeciesSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a930ade38f7437bf3c80ea3a6493a8376" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>independentCompartmentSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa567bc1eb6a3bec1fdd9c7b8d0dae69f" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>independentFloatingSpeciesSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ae7502ae1c957279c1b4aaaaac4eaa179" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>independentGlobalParameterSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a3ad1d2334cafab5c366a10ab935a89f3" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>independentInitBoundarySpeciesSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ace4e8ba519e7d52af3f50141136fe5d0" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>independentInitCompartmentSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a8e56613d5cee0bd0578b5b1ade074355" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>independentInitFloatingSpeciesSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ad915ae8529f5d1739724a138dd951f8b" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>independentInitGlobalParameterSize</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a2f1348459bfb2bfdd293c1dbceabd481" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>initAssignmentRules</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1af721c4485e5f9d22716da8925fc66219" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>initBoundarySpecies</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ae185b55f6d198a1b93d02f639e6e65be" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>initBoundarySpeciesMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a1473cbaf10feca1c969a98540718e580" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>initCompartments</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a05101d353db9fc29339b06a382905f71" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>initCompartmentsMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a651426a37f368fd0bf1dbb24a6b51a1f" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>initEvents</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a77529f0aa2b1316c84e94b68d68fc0e4" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>initFloatingSpecies</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa61568481d95d1b470a92021329b50b7" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>initFloatingSpeciesMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa051ce8fa18d9cb45009e548aa15b61f" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>initGlobalParameters</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1af528abf5cfe89e34205d4f0c9a42a732" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>initGlobalParametersMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1af92df3745145e552b05e431101f223e8" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>initReactions</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63cedabe1bc48cc69db2e3b37dc6a0acf9f3f9" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>INVALID_SYMBOL</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a65eb83ec0a148efde52b6ab89da1534f" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isBoundarySpecies</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9e49129c6b005685104b5870624e9b42" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isConservedMoietyParameter</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a55a42e526c9ae39fe0a7a3c4befe7630" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isConservedMoietySpecies</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ae43de59bdc21713da5ce118e627a3146" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isConservedMoietySpecies</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a289116dff2ca1b0013e0615313fedee9" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isIndependentBoundarySpecies</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aae3e5082c125a0d26a1fae4a426774bc" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isIndependentCompartment</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a704d4971c8a1d8f0a5021cacb6a1c4f3" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isIndependentElement</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a1d115b42b3308eef6ec4366d7a572578" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isIndependentFloatingSpecies</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1abefe8482dd1cfde6a58b1c9e613809de" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isIndependentGlobalParameter</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a8711b0a0c667e10454984b6589409514" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isIndependentInitCompartment</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a775dc49eff5e65aa7e7e88d3a7485976" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isIndependentInitElement</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1af242d61196597833aa9e1c5c1850910d" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isIndependentInitFloatingSpecies</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9e69809c00382d494280b0124bae2e57" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isIndependentInitGlobalParameter</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a4980057e894a24a75faad509c9ecc616" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isIndependentInitGlobalParameter</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a693082c5cd7013a90b6047c2a2cf37e0" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isNamedSpeciesReference</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a574e97b63fdb6098718d7f86bf0fab12" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isRateRuleGlobalParameter</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ab9d98368da2244c859e96c32f72b88f2" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>isValidFloatingSpeciesReference</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a5ad2e9b8c0ac752e91e167227fc1f9dd" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>LLVMModelDataSymbols</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9e721ce6fe3fe2074a958948f30ed923" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>LLVMModelDataSymbols</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ae1abf97dc1fed101bee0ee84eaec7765" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>LLVMModelDataSymbols</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a7ba4403878c784f52671d9902d644797" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>loadBinarySpeciesReferenceInfo</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a2c9adebe4b3d4deb48cf44ba14ec565b" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>loadState</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a4f0a2de614e3188351fc22c48eee2c6a" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>loadStringRefInfoMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a15562ccc22c7074cfb6fa217caa8f7f7" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>modelName</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa5fe1d1312587483ae09898afee84e61a33019cb8f29c3196f13c49fc4f4a1b4b" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>Modifier</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa5fe1d1312587483ae09898afee84e61a7067aad533bfacadb8c48a652b9f82db" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>MultiReactantProduct</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aca9286b0dd1d69a946995f1e763092f5" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>namedSpeciesReferenceInfo</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a10947a4f97f82f04320462c1508fdbb1" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>print</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa5fe1d1312587483ae09898afee84e61afa44f253da6d8714f6849a60464bfe7e" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>Product</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aebf062f181b0248270975d64c260a2f3" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>rateRules</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa5fe1d1312587483ae09898afee84e61afe5f7fb7789e29cbc3e7501442a51069" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>Reactant</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63ceda64179098652660463c58a59c15721976" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>REACTION</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa6d3638ba24f564a0b17820754dba7d3" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>reactionsMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a59bfe0b3c1b163610b3a97c7b51f0baa" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>saveBinarySpeciesReferenceInfo</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1adde4ee18438b1cca520afdd1c81c8781" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>saveState</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ac16cbe072b1acbec2742097346dd967d" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>saveStringRefInfoMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a1b6cd9afb2cdc0cb5e5ba618bdf05f47" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>setNamedSpeciesReferenceInfo</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa5fe1d1312587483ae09898afee84e61" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>SpeciesReferenceType</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1acd7cc0aa3dbe15c85ca27c01d6021cb4" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>stoichColIndx</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1abbf81109d40cf140a6e8c6651ab2489a" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>stoichIds</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a6d642018d754d342f0fb1a5c7bfa2c52" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>stoichRowIndx</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a03a85ffdaed8ede2f57d8b235ddb21f6" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>stoichTypes</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a3163b3fe2cad57085c7776df4872e31c" prot="private" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>StringRefInfoMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1ab4534ab9e1b1dc198812208f11960702" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>StringUIntMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a4bf890563731b1fe296dca200ce1ef98" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>StringUIntPair</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a2cbc1c062773ded9fabbd5e9bffdab0b" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>StringUIntVectorMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1a9f08fb79670d8c19151880a628a63ced" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>SymbolIndexType</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1abffc137dab59dc26f324c12537ea207c" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>UIntUIntMap</name></member>
      <member refid="classrrllvm_1_1LLVMModelDataSymbols_1aa9b2c22cf23f626f87c7b07bfa4a76cb" prot="public" virt="virtual"><scope>rrllvm::LLVMModelDataSymbols</scope><name>~LLVMModelDataSymbols</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
