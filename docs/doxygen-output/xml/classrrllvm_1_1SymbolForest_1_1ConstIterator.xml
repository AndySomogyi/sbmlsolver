<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classrrllvm_1_1SymbolForest_1_1ConstIterator" kind="class" language="C++" prot="public">
    <compoundname>rrllvm::SymbolForest::ConstIterator</compoundname>
    <includes refid="SymbolForest_8h" local="no">SymbolForest.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classrrllvm_1_1SymbolForest_1_1ConstIterator_1aeea1d56ab66580900aabd197d8ee82e7" prot="public" static="no" mutable="no">
        <type>const libsbml::ASTNode *</type>
        <definition>const libsbml::ASTNode* rrllvm::SymbolForest::ConstIterator::second</definition>
        <argsstring></argsstring>
        <name>second</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/SymbolForest.h" line="51" column="32" bodyfile="llvm/SymbolForest.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classrrllvm_1_1SymbolForest_1_1ConstIterator_1aec9f490e1c76f0c122e54228c785a816" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SymbolForest</definition>
        <argsstring></argsstring>
        <name>SymbolForest</name>
        <briefdescription>
<para>only <ref refid="classrrllvm_1_1SymbolForest" kindref="compound">SymbolForest</ref> can make one of these. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/SymbolForest.h" line="81" column="9" bodyfile="llvm/SymbolForest.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrrllvm_1_1SymbolForest_1_1ConstIterator_1a47afdd4515273bdb4ef9d13dc0ba987f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rrllvm::SymbolForest::ConstIterator::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/SymbolForest.h" line="99" column="14" bodyfile="llvm/SymbolForest.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrrllvm_1_1SymbolForest_1_1ConstIterator_1a5cace9fbaca9ca5eba14c098de30551d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classrrllvm_1_1SymbolForest_1_1ConstIterator" kindref="compound">ConstIterator</ref> *</type>
        <definition>const ConstIterator* rrllvm::SymbolForest::ConstIterator::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/SymbolForest.h" line="53" column="29" bodyfile="llvm/SymbolForest.h" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1SymbolForest_1_1ConstIterator_1af8ce8deb1e59be1c5123287e6ed6e26c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rrllvm::SymbolForest::ConstIterator::operator!=</definition>
        <argsstring>(const ConstIterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classrrllvm_1_1SymbolForest_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/SymbolForest.h" line="58" column="14" bodyfile="llvm/SymbolForest.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1SymbolForest_1_1ConstIterator_1a2ba4d9207ce18d9ea51c6b5f01665a0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrrllvm_1_1SymbolForest_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
        <definition>ConstIterator&amp; rrllvm::SymbolForest::ConstIterator::operator=</definition>
        <argsstring>(const ConstIterator &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classrrllvm_1_1SymbolForest_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/SymbolForest.h" line="63" column="24" bodyfile="llvm/SymbolForest.h" bodystart="63" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1SymbolForest_1_1ConstIterator_1a7e4bc1c9b1a513cf529122659d66ae23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rrllvm::SymbolForest::ConstIterator::ConstIterator</definition>
        <argsstring>(const ConstIterator &amp;o)</argsstring>
        <name>ConstIterator</name>
        <param>
          <type>const <ref refid="classrrllvm_1_1SymbolForest_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/SymbolForest.h" line="71" column="9" bodyfile="llvm/SymbolForest.h" bodystart="71" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrrllvm_1_1SymbolForest_1_1ConstIterator_1ad5ccb05da173a12f55a95c3d14513b48" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rrllvm::SymbolForest::ConstIterator::ConstIterator</definition>
        <argsstring>(_const_iterator i)</argsstring>
        <name>ConstIterator</name>
        <param>
          <type>_const_iterator</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>not end, created from a valid iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/SymbolForest.h" line="86" column="9" bodyfile="llvm/SymbolForest.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1SymbolForest_1_1ConstIterator_1af572907cb2000aca9bece6b09c2a29f3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rrllvm::SymbolForest::ConstIterator::ConstIterator</definition>
        <argsstring>()</argsstring>
        <name>ConstIterator</name>
        <briefdescription>
<para>the end </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/SymbolForest.h" line="94" column="9" bodyfile="llvm/SymbolForest.h" bodystart="94" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>syntatically the same as a std::map&lt;std::string, const libsbml::ASTNode*&gt;::const_iterator </para>
    </briefdescription>
    <detaileddescription>
<para>Designed so that the <ref refid="classrrllvm_1_1SymbolForest" kindref="compound">SymbolForest</ref> can behave like a std::map. </para>
    </detaileddescription>
    <location file="llvm/SymbolForest.h" line="47" column="5" bodyfile="llvm/SymbolForest.h" bodystart="48" bodyend="100"/>
    <listofallmembers>
      <member refid="classrrllvm_1_1SymbolForest_1_1ConstIterator_1a7e4bc1c9b1a513cf529122659d66ae23" prot="public" virt="non-virtual"><scope>rrllvm::SymbolForest::ConstIterator</scope><name>ConstIterator</name></member>
      <member refid="classrrllvm_1_1SymbolForest_1_1ConstIterator_1ad5ccb05da173a12f55a95c3d14513b48" prot="private" virt="non-virtual"><scope>rrllvm::SymbolForest::ConstIterator</scope><name>ConstIterator</name></member>
      <member refid="classrrllvm_1_1SymbolForest_1_1ConstIterator_1af572907cb2000aca9bece6b09c2a29f3" prot="private" virt="non-virtual"><scope>rrllvm::SymbolForest::ConstIterator</scope><name>ConstIterator</name></member>
      <member refid="classrrllvm_1_1SymbolForest_1_1ConstIterator_1a47afdd4515273bdb4ef9d13dc0ba987f" prot="private" virt="non-virtual"><scope>rrllvm::SymbolForest::ConstIterator</scope><name>end</name></member>
      <member refid="classrrllvm_1_1SymbolForest_1_1ConstIterator_1af8ce8deb1e59be1c5123287e6ed6e26c" prot="public" virt="non-virtual"><scope>rrllvm::SymbolForest::ConstIterator</scope><name>operator!=</name></member>
      <member refid="classrrllvm_1_1SymbolForest_1_1ConstIterator_1a5cace9fbaca9ca5eba14c098de30551d" prot="public" virt="non-virtual"><scope>rrllvm::SymbolForest::ConstIterator</scope><name>operator-&gt;</name></member>
      <member refid="classrrllvm_1_1SymbolForest_1_1ConstIterator_1a2ba4d9207ce18d9ea51c6b5f01665a0e" prot="public" virt="non-virtual"><scope>rrllvm::SymbolForest::ConstIterator</scope><name>operator=</name></member>
      <member refid="classrrllvm_1_1SymbolForest_1_1ConstIterator_1aeea1d56ab66580900aabd197d8ee82e7" prot="public" virt="non-virtual"><scope>rrllvm::SymbolForest::ConstIterator</scope><name>second</name></member>
      <member refid="classrrllvm_1_1SymbolForest_1_1ConstIterator_1aec9f490e1c76f0c122e54228c785a816" prot="private" virt="non-virtual"><scope>rrllvm::SymbolForest::ConstIterator</scope><name>SymbolForest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
