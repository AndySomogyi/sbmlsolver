<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="NewtonIteration_8cpp" kind="file" language="C++">
    <compoundname>NewtonIteration.cpp</compoundname>
    <includes refid="NewtonIteration_8h" local="yes">NewtonIteration.h</includes>
    <includes refid="rrExecutableModel_8h" local="yes">rrExecutableModel.h</includes>
    <includes local="no">cassert</includes>
    <includes refid="KinsolErrHandler_8h" local="yes">KinsolErrHandler.h</includes>
    <includes local="yes">sunmatrix/sunmatrix_dense.h</includes>
    <includes local="yes">sunlinsol/sunlinsol_dense.h</includes>
    <incdepgraph>
      <node id="36">
        <label>list</label>
      </node>
      <node id="33">
        <label>rrExecutableModel.h</label>
        <link refid="rrExecutableModel_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="17">
        <label>limits</label>
      </node>
      <node id="34">
        <label>sbml/SBMLDocument.h</label>
      </node>
      <node id="41">
        <label>sunlinsol/sunlinsol_dense.h</label>
      </node>
      <node id="30">
        <label>Registrar.h</label>
        <link refid="Registrar_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>variant</label>
      </node>
      <node id="12">
        <label>Dictionary.h</label>
        <link refid="Dictionary_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>cassert</label>
      </node>
      <node id="11">
        <label>rrOSSpecifics.h</label>
        <link refid="rrOSSpecifics_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>stdexcept</label>
      </node>
      <node id="24">
        <label>string</label>
      </node>
      <node id="5">
        <label>sundials/sundials_types.h</label>
      </node>
      <node id="10">
        <label>rrExporter.h</label>
        <link refid="rrExporter_8h_source"/>
      </node>
      <node id="28">
        <label>tr1proxy/rr_unordered_map.h</label>
      </node>
      <node id="8">
        <label>rrLogger.h</label>
        <link refid="rrLogger_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>setting_t.h</label>
        <link refid="setting__t_8h_source"/>
      </node>
      <node id="1">
        <label>NewtonIteration.cpp</label>
        <link refid="NewtonIteration_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>KinsolErrHandler.h</label>
        <link refid="KinsolErrHandler_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>KinsolSteadyStateSolver.h</label>
        <link refid="KinsolSteadyStateSolver_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>exception</label>
      </node>
      <node id="37">
        <label>ostream</label>
      </node>
      <node id="31">
        <label>FactoryWithRegistration.h</label>
        <link refid="FactoryWithRegistration_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>SteadyStateSolver.h</label>
        <link refid="SteadyStateSolver_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Solver.h</label>
        <link refid="Solver_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>typeinfo</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
      <node id="40">
        <label>sunmatrix/sunmatrix_dense.h</label>
      </node>
      <node id="22">
        <label>rrException.h</label>
        <link refid="rrException_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>kinsol/kinsol.h</label>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="25">
        <label>unordered_map</label>
      </node>
      <node id="13">
        <label>Setting.h</label>
        <link refid="Setting_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>tr1proxy/rr_memory.h</label>
      </node>
      <node id="2">
        <label>NewtonIteration.h</label>
        <link refid="NewtonIteration_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>nvector/nvector_serial.h</label>
      </node>
      <node id="18">
        <label>type_traits</label>
      </node>
      <node id="32">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacerr">rr</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Ciaran<sp/>on<sp/>26/02/2021.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;NewtonIteration.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rrExecutableModel_8h" kindref="compound">rrExecutableModel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;KinsolErrHandler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sunmatrix/sunmatrix_dense.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sunlinsol/sunlinsol_dense.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rr<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>NewtonIteration::NewtonIteration(ExecutableModel<sp/>*executableModel)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><sp/>KinsolSteadyStateSolver(executableModel)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note:<sp/>we<sp/>deliberately<sp/>use<sp/>the<sp/>NewtonIteration<sp/>namespace<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>calling<sp/>virtual<sp/>methods<sp/>from<sp/>constructors<sp/>is<sp/>dangerous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>ensure<sp/>we<sp/>call<sp/>the<sp/>right<sp/>version<sp/>of<sp/>createKinsol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1NewtonIteration_1aef52744c9ff9f21ad69a49b1fe8ef9c4" kindref="member">NewtonIteration::resetSettings</ref>();<sp/></highlight><highlight class="comment">//<sp/>note:<sp/>must<sp/>be<sp/>called<sp/>before<sp/>createKinsol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1NewtonIteration_1a17436ae1ae76642be8f525addd8e2834" kindref="member">NewtonIteration::createKinsol</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>NewtonIteration::~NewtonIteration()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1NewtonIteration_1ae27ea4ad5e78a6fb781bb1d8272f0756" kindref="member">NewtonIteration::freeKinsol</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrr_1_1NewtonIteration_1a17436ae1ae76642be8f525addd8e2834" kindref="member">NewtonIteration::createKinsol</ref>()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1KinsolSteadyStateSolver_1a7c7a941fbf27c7a3a5326b254ee2f1b1" kindref="member">KinsolSteadyStateSolver::createKinsol</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kinsolDyDtFcn<sp/>has<sp/>the<sp/>signature<sp/>of<sp/>&quot;KINSysFn&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((err<sp/>=<sp/>KINInit(<ref refid="classrr_1_1KinsolSteadyStateSolver_1a64033039dc53f114855985463ad108f6" kindref="member">mKinsol_Memory</ref>,<sp/>kinsolDyDtFcn<sp/>&lt;<sp/>NewtonIteration<sp/>&gt;<sp/>,<sp/><ref refid="classrr_1_1KinsolSteadyStateSolver_1a5f5802fe0c668fe5569bfb163748a621" kindref="member">mStateVector</ref>))<sp/>!=<sp/>KIN_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeKinsolError(err);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>dense<sp/>SUNMatrix<sp/>for<sp/>jacobian<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numEq<sp/>=<sp/><ref refid="classrr_1_1KinsolSteadyStateSolver_1a5f5802fe0c668fe5569bfb163748a621" kindref="member">mStateVector</ref>-&gt;ops-&gt;nvgetlength(<ref refid="classrr_1_1KinsolSteadyStateSolver_1a5f5802fe0c668fe5569bfb163748a621" kindref="member">mStateVector</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1NewtonIteration_1ad891d4df2058bfc69c879ba46d84e71b" kindref="member">jac</ref><sp/>=<sp/>SUNDenseMatrix(numEq,<sp/>numEq);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KinsolCheckForNull(<ref refid="classrr_1_1NewtonIteration_1ad891d4df2058bfc69c879ba46d84e71b" kindref="member">jac</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SUNDenseMatrix&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SUNMatrix&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>dense<sp/>SUNLinearSolver<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1NewtonIteration_1afbdfd60977ad079dc27cdd282fdfc201" kindref="member">linearSolver</ref><sp/>=<sp/>SUNLinSol_Dense(<ref refid="classrr_1_1KinsolSteadyStateSolver_1a5f5802fe0c668fe5569bfb163748a621" kindref="member">mStateVector</ref>,<sp/><ref refid="classrr_1_1NewtonIteration_1ad891d4df2058bfc69c879ba46d84e71b" kindref="member">jac</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KinsolCheckForNull(<ref refid="classrr_1_1NewtonIteration_1ad891d4df2058bfc69c879ba46d84e71b" kindref="member">jac</ref>,<sp/>&quot;SUNLinSol_Dense&quot;,<sp/>&quot;SUNLinearSolver&quot;)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attach<sp/>the<sp/>matrix<sp/>and<sp/>linear<sp/>solver<sp/>to<sp/>KINSOL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memory<sp/>leak<sp/>somewhere???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((err<sp/>=<sp/>KINSetLinearSolver(<ref refid="classrr_1_1KinsolSteadyStateSolver_1a64033039dc53f114855985463ad108f6" kindref="member">mKinsol_Memory</ref>,<sp/><ref refid="classrr_1_1NewtonIteration_1afbdfd60977ad079dc27cdd282fdfc201" kindref="member">linearSolver</ref>,<sp/><ref refid="classrr_1_1NewtonIteration_1ad891d4df2058bfc69c879ba46d84e71b" kindref="member">jac</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeKinsolError(err);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrr_1_1NewtonIteration_1ae27ea4ad5e78a6fb781bb1d8272f0756" kindref="member">NewtonIteration::freeKinsol</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1KinsolSteadyStateSolver_1a9ddc7acd14dad905333c11667363de66" kindref="member">KinsolSteadyStateSolver::freeKinsol</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classrr_1_1NewtonIteration_1afbdfd60977ad079dc27cdd282fdfc201" kindref="member">linearSolver</ref>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUNLinSolFree(<ref refid="classrr_1_1NewtonIteration_1afbdfd60977ad079dc27cdd282fdfc201" kindref="member">linearSolver</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classrr_1_1NewtonIteration_1ad891d4df2058bfc69c879ba46d84e71b" kindref="member">jac</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUNMatDestroy(<ref refid="classrr_1_1NewtonIteration_1ad891d4df2058bfc69c879ba46d84e71b" kindref="member">jac</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1NewtonIteration_1afbdfd60977ad079dc27cdd282fdfc201" kindref="member">linearSolver</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1NewtonIteration_1ad891d4df2058bfc69c879ba46d84e71b" kindref="member">jac</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrr_1_1NewtonIteration_1aa4600fcd777890b6afc99694bd306a50" kindref="member">NewtonIteration::solveNewtonIteration</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;strategy)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrr_1_1KinsolSteadyStateSolver_1a7523fec309a03e68bd30d2cf604510f3" kindref="member">solveForSteadyState</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classrr_1_1Solver_1a87339915a211b22ecd63078bb1cb7ca9" kindref="member">getValue</ref>(</highlight><highlight class="stringliteral">&quot;strategy&quot;</highlight><highlight class="normal">).get&lt;std::string&gt;()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;basic&quot;</highlight><highlight class="normal"><sp/>?<sp/>KIN_NONE<sp/>:<sp/>KIN_LINESEARCH);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrr_1_1NewtonIteration_1a6d10c08312d90016647826dd1c824ad2" kindref="member">NewtonIteration::updateKinsol</ref>()<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1KinsolSteadyStateSolver_1a46e1ca358f9d1a8bbfe1150a1f6cf8ed" kindref="member">KinsolSteadyStateSolver::updateKinsol</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrr_1_1NewtonIteration_1aef52744c9ff9f21ad69a49b1fe8ef9c4" kindref="member">NewtonIteration::resetSettings</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1KinsolSteadyStateSolver_1ad6bb33d80ec7660150167cac4aefa2ae" kindref="member">KinsolSteadyStateSolver::resetSettings</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrr_1_1NewtonIteration_1a46d2940bc5e23fa377be239f5cc21e4a" kindref="member">NewtonIteration::getSolverStatsFromKinsol</ref>()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrr_1_1KinsolSteadyStateSolver_1a6e2deeb6268b4dcf40893529abd6c192" kindref="member">KinsolSteadyStateSolver::getSolverStatsFromKinsol</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KINGetNumLinConvFails(<ref refid="classrr_1_1KinsolSteadyStateSolver_1a64033039dc53f114855985463ad108f6" kindref="member">mKinsol_Memory</ref>,<sp/>&amp;numLinConvFails);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KINGetNumJacEvals(<ref refid="classrr_1_1KinsolSteadyStateSolver_1a64033039dc53f114855985463ad108f6" kindref="member">mKinsol_Memory</ref>,<sp/>&amp;numJacEvals);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KINGetNumJtimesEvals(<ref refid="classrr_1_1KinsolSteadyStateSolver_1a64033039dc53f114855985463ad108f6" kindref="member">mKinsol_Memory</ref>,<sp/>&amp;numJtimesEvals);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KINGetNumLinFuncEvals(<ref refid="classrr_1_1KinsolSteadyStateSolver_1a64033039dc53f114855985463ad108f6" kindref="member">mKinsol_Memory</ref>,<sp/>&amp;numLinFuncEvals);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KINGetNumLinIters(<ref refid="classrr_1_1KinsolSteadyStateSolver_1a64033039dc53f114855985463ad108f6" kindref="member">mKinsol_Memory</ref>,<sp/>&amp;numLinIters);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KINGetNumPrecEvals(<ref refid="classrr_1_1KinsolSteadyStateSolver_1a64033039dc53f114855985463ad108f6" kindref="member">mKinsol_Memory</ref>,<sp/>&amp;numPrecEvals);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KINGetNumPrecSolves(<ref refid="classrr_1_1KinsolSteadyStateSolver_1a64033039dc53f114855985463ad108f6" kindref="member">mKinsol_Memory</ref>,<sp/>&amp;numPrecSolves);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classrr_1_1NewtonIteration_1a5a77fd21be6a9af126872232998bfeb2" kindref="member">NewtonIteration::getName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrr_1_1NewtonIteration_1a8f887dc497c97796c527f78c9c8edc02" kindref="member">NewtonIteration::getNewtonIterationName</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classrr_1_1NewtonIteration_1ae1119d11821a6b1fb52fc84186d91b1e" kindref="member">NewtonIteration::getDescription</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrr_1_1NewtonIteration_1acfa3b9dcb97628591e853629c2e40b4b" kindref="member">NewtonIteration::getNewtonIterationDescription</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classrr_1_1NewtonIteration_1ac346fbad167b7d4f1bcadb6ad9049ac2" kindref="member">NewtonIteration::getHint</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrr_1_1NewtonIteration_1a107c604fb367c5ca927fc02e31cf5016" kindref="member">NewtonIteration::getNewtonIterationHint</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classrr_1_1NewtonIteration_1a8f887dc497c97796c527f78c9c8edc02" kindref="member">NewtonIteration::getNewtonIterationName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;NewtonIteration&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classrr_1_1NewtonIteration_1acfa3b9dcb97628591e853629c2e40b4b" kindref="member">NewtonIteration::getNewtonIterationDescription</ref>()<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Uses<sp/>the<sp/>sundials<sp/>implementation<sp/>of<sp/>newton<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;iteration&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classrr_1_1NewtonIteration_1a107c604fb367c5ca927fc02e31cf5016" kindref="member">NewtonIteration::getNewtonIterationHint</ref>()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Newton<sp/>Iteration&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="NewtonIteration.cpp"/>
  </compounddef>
</doxygen>
