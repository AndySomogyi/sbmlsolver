<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="NEWS_8txt" kind="file" language="C++">
    <compoundname>NEWS.txt</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="NEWS_8txt_1aed3c6a1c84bbffabb80dc9fb9c8591eb" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name</type>
        <definition>Version* Fix conserved moieties contains row column name info</definition>
        <argsstring></argsstring>
        <name>info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="12" column="37" bodyfile="NEWS.txt" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1a3df50a47ec6c4d4eb36772ec216d0924" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to DoubleMatrix</definition>
        <argsstring></argsstring>
        <name>DoubleMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="15" column="28" bodyfile="NEWS.txt" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1aad5dd5f6a5dbe38dde6192d64d21b279" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event triggers</definition>
        <argsstring></argsstring>
        <name>triggers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="23" column="90" bodyfile="NEWS.txt" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1ab818f1cd943ba4d5020688eafe79ec78" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for everything</definition>
        <argsstring></argsstring>
        <name>everything</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="48" column="62" bodyfile="NEWS.txt" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1ad9be9c52fc77b78c00861868ca9c4e03" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added updated python and C docs to reflect this *Added new eigenr and eigenc selections to get real and complex values of</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added updated python and C docs to reflect this* Added new eigenr and eigenc selections to get real and complex values of eigenvalues</definition>
        <argsstring></argsstring>
        <name>eigenvalues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="55" column="75" bodyfile="NEWS.txt" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1ac6f903d71678a7ed8bdd0a5dd99b3b77" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added updated python and C docs to reflect this *Added new eigenr and eigenc selections to get real and complex values of</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added updated python and C docs to reflect this* Added new eigenr and eigenc selections to get real and complex values of note</definition>
        <argsstring></argsstring>
        <name>note</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="56" column="3" bodyfile="NEWS.txt" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1a094003f64360dd6e940cea4a6986fc0d" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added updated python and C docs to reflect this *Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue *new rrtest testing file format *Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians *support for distrib SBML package for random distributions Version *Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object *Fixed bug in dynamic properties where they were not cleared when a new model is loaded *Added boundary species to python dynamics properties *Redesign dynamic property generations new code is much cleaner *testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files *Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file *If model has comp</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added updated python and C docs to reflect this* Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue* new rrtest testing file format* Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians* support for distrib SBML package for random distributions Version* Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object* Fixed bug in dynamic properties where they were not cleared when a new model is loaded* Added boundary species to python dynamics properties* Redesign dynamic property generations new code is much cleaner* testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files* Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file* If model has comp extension</definition>
        <argsstring></argsstring>
        <name>extension</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="80" column="21" bodyfile="NEWS.txt" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1a31e65c077634560bf73f9087696fc691" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added updated python and C docs to reflect this *Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue *new rrtest testing file format *Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians *support for distrib SBML package for random distributions Version *Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object *Fixed bug in dynamic properties where they were not cleared when a new model is loaded *Added boundary species to python dynamics properties *Redesign dynamic property generations new code is much cleaner *testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files *Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file *If model has comp automatically flatten</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added updated python and C docs to reflect this* Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue* new rrtest testing file format* Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians* support for distrib SBML package for random distributions Version* Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object* Fixed bug in dynamic properties where they were not cleared when a new model is loaded* Added boundary species to python dynamics properties* Redesign dynamic property generations new code is much cleaner* testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files* Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file* If model has comp automatically flatten Note</definition>
        <argsstring></argsstring>
        <name>Note</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="81" column="5" bodyfile="NEWS.txt" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1a9cecd4e14a641f85bdecb92b2948863d" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added updated python and C docs to reflect this *Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue *new rrtest testing file format *Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians *support for distrib SBML package for random distributions Version *Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object *Fixed bug in dynamic properties where they were not cleared when a new model is loaded *Added boundary species to python dynamics properties *Redesign dynamic property generations new code is much cleaner *testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files *Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file *If model has comp automatically flatten libSBML comp extension has numerous memory</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added updated python and C docs to reflect this* Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue* new rrtest testing file format* Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians* support for distrib SBML package for random distributions Version* Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object* Fixed bug in dynamic properties where they were not cleared when a new model is loaded* Added boundary species to python dynamics properties* Redesign dynamic property generations new code is much cleaner* testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files* Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file* If model has comp automatically flatten libSBML comp extension has numerous memory issues</definition>
        <argsstring></argsstring>
        <name>issues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="81" column="53" bodyfile="NEWS.txt" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1a9793fdc334c774f5437350a15a7fdaa6" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added updated python and C docs to reflect this *Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue *new rrtest testing file format *Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians *support for distrib SBML package for random distributions Version *Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object *Fixed bug in dynamic properties where they were not cleared when a new model is loaded *Added boundary species to python dynamics properties *Redesign dynamic property generations new code is much cleaner *testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files *Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file *If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models *might *cause instability *Upgrade to libSBML *All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console *Support mixed mode arithmetic *workarounds for buggy MSVC stdlib functions *Significantly improve error messages for mal formed SBML models Version *New parallel ensemble function and roadrunner stochastic python module *Added new example files to python package *New function in C API to create RRDataPtr directly from RoadRunner</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added updated python and C docs to reflect this* Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue* new rrtest testing file format* Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians* support for distrib SBML package for random distributions Version* Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object* Fixed bug in dynamic properties where they were not cleared when a new model is loaded* Added boundary species to python dynamics properties* Redesign dynamic property generations new code is much cleaner* testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files* Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file* If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models* might* cause instability* Upgrade to libSBML* All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console* Support mixed mode arithmetic* workarounds for buggy MSVC stdlib functions* Significantly improve error messages for mal formed SBML models Version* New parallel ensemble function and roadrunner stochastic python module* Added new example files to python package* New function in C API to create RRDataPtr directly from RoadRunner object</definition>
        <argsstring></argsstring>
        <name>object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="100" column="70" bodyfile="NEWS.txt" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1a4c3f7441990823c6593dafab0939ee7a" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added updated python and C docs to reflect this *Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue *new rrtest testing file format *Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians *support for distrib SBML package for random distributions Version *Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object *Fixed bug in dynamic properties where they were not cleared when a new model is loaded *Added boundary species to python dynamics properties *Redesign dynamic property generations new code is much cleaner *testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files *Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file *If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models *might *cause instability *Upgrade to libSBML *All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console *Support mixed mode arithmetic *workarounds for buggy MSVC stdlib functions *Significantly improve error messages for mal formed SBML models Version *New parallel ensemble function and roadrunner stochastic python module *Added new example files to python package *New function in C API to create RRDataPtr directly from RoadRunner completly bypassing RoadRunnerData C object *Conserved moiety species amounts and concentrations are directly mutable *RoadRunner reset is now very</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added updated python and C docs to reflect this* Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue* new rrtest testing file format* Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians* support for distrib SBML package for random distributions Version* Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object* Fixed bug in dynamic properties where they were not cleared when a new model is loaded* Added boundary species to python dynamics properties* Redesign dynamic property generations new code is much cleaner* testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files* Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file* If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models* might* cause instability* Upgrade to libSBML* All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console* Support mixed mode arithmetic* workarounds for buggy MSVC stdlib functions* Significantly improve error messages for mal formed SBML models Version* New parallel ensemble function and roadrunner stochastic python module* Added new example files to python package* New function in C API to create RRDataPtr directly from RoadRunner completly bypassing RoadRunnerData C object* Conserved moiety species amounts and concentrations are directly mutable* RoadRunner reset is now very flexible</definition>
        <argsstring></argsstring>
        <name>flexible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="105" column="31" bodyfile="NEWS.txt" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1aeb73a465053bf32155adc51dc57cef7f" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added updated python and C docs to reflect this *Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue *new rrtest testing file format *Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians *support for distrib SBML package for random distributions Version *Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object *Fixed bug in dynamic properties where they were not cleared when a new model is loaded *Added boundary species to python dynamics properties *Redesign dynamic property generations new code is much cleaner *testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files *Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file *If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models *might *cause instability *Upgrade to libSBML *All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console *Support mixed mode arithmetic *workarounds for buggy MSVC stdlib functions *Significantly improve error messages for mal formed SBML models Version *New parallel ensemble function and roadrunner stochastic python module *Added new example files to python package *New function in C API to create RRDataPtr directly from RoadRunner completly bypassing RoadRunnerData C object *Conserved moiety species amounts and concentrations are directly mutable *RoadRunner reset is now very can reset a variety of values based on args Version *Extended information such as git branch and last commit available via they will only be reset if users also changes init species cond *Correctly display CM ids *Major cleanup in handling temp dir</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added updated python and C docs to reflect this* Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue* new rrtest testing file format* Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians* support for distrib SBML package for random distributions Version* Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object* Fixed bug in dynamic properties where they were not cleared when a new model is loaded* Added boundary species to python dynamics properties* Redesign dynamic property generations new code is much cleaner* testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files* Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file* If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models* might* cause instability* Upgrade to libSBML* All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console* Support mixed mode arithmetic* workarounds for buggy MSVC stdlib functions* Significantly improve error messages for mal formed SBML models Version* New parallel ensemble function and roadrunner stochastic python module* Added new example files to python package* New function in C API to create RRDataPtr directly from RoadRunner completly bypassing RoadRunnerData C object* Conserved moiety species amounts and concentrations are directly mutable* RoadRunner reset is now very can reset a variety of values based on args Version* Extended information such as git branch and last commit available via they will only be reset if users also changes init species cond* Correctly display CM ids* Major cleanup in handling temp dir path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="123" column="39" bodyfile="NEWS.txt" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1ab168c5b99f820ea7b58e3a758d8c93e7" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added updated python and C docs to reflect this *Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue *new rrtest testing file format *Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians *support for distrib SBML package for random distributions Version *Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object *Fixed bug in dynamic properties where they were not cleared when a new model is loaded *Added boundary species to python dynamics properties *Redesign dynamic property generations new code is much cleaner *testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files *Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file *If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models *might *cause instability *Upgrade to libSBML *All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console *Support mixed mode arithmetic *workarounds for buggy MSVC stdlib functions *Significantly improve error messages for mal formed SBML models Version *New parallel ensemble function and roadrunner stochastic python module *Added new example files to python package *New function in C API to create RRDataPtr directly from RoadRunner completly bypassing RoadRunnerData C object *Conserved moiety species amounts and concentrations are directly mutable *RoadRunner reset is now very can reset a variety of values based on args Version *Extended information such as git branch and last commit available via they will only be reset if users also changes init species cond *Correctly display CM ids *Major cleanup in handling temp dir added config value for specifiying tmp dir and log file path *Added model checks to</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added updated python and C docs to reflect this* Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue* new rrtest testing file format* Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians* support for distrib SBML package for random distributions Version* Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object* Fixed bug in dynamic properties where they were not cleared when a new model is loaded* Added boundary species to python dynamics properties* Redesign dynamic property generations new code is much cleaner* testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files* Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file* If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models* might* cause instability* Upgrade to libSBML* All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console* Support mixed mode arithmetic* workarounds for buggy MSVC stdlib functions* Significantly improve error messages for mal formed SBML models Version* New parallel ensemble function and roadrunner stochastic python module* Added new example files to python package* New function in C API to create RRDataPtr directly from RoadRunner completly bypassing RoadRunnerData C object* Conserved moiety species amounts and concentrations are directly mutable* RoadRunner reset is now very can reset a variety of values based on args Version* Extended information such as git branch and last commit available via they will only be reset if users also changes init species cond* Correctly display CM ids* Major cleanup in handling temp dir added config value for specifiying tmp dir and log file path* Added model checks to getCurrentSBML</definition>
        <argsstring></argsstring>
        <name>getCurrentSBML</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="126" column="26" bodyfile="NEWS.txt" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NEWS_8txt_1ae34dd48257037f5cb8fd6e48d5ee0e81" prot="public" static="no" mutable="no">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added updated python and C docs to reflect this *Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue *new rrtest testing file format *Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians *support for distrib SBML package for random distributions Version *Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object *Fixed bug in dynamic properties where they were not cleared when a new model is loaded *Added boundary species to python dynamics properties *Redesign dynamic property generations new code is much cleaner *testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files *Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file *If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models *might *cause instability *Upgrade to libSBML *All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console *Support mixed mode arithmetic *workarounds for buggy MSVC stdlib functions *Significantly improve error messages for mal formed SBML models Version *New parallel ensemble function and roadrunner stochastic python module *Added new example files to python package *New function in C API to create RRDataPtr directly from RoadRunner completly bypassing RoadRunnerData C object *Conserved moiety species amounts and concentrations are directly mutable *RoadRunner reset is now very can reset a variety of values based on args Version *Extended information such as git branch and last commit available via they will only be reset if users also changes init species cond *Correctly display CM ids *Major cleanup in handling temp dir added config value for specifiying tmp dir and log file path *Added model checks to fixes with CM is enabled *Merged Alex s documentation updates to C API *Fixed bug with CM being displayed twice in items *Fix bug when getting stoich matrix when CM is enabled *New Runge Kutta</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added updated python and C docs to reflect this* Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue* new rrtest testing file format* Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians* support for distrib SBML package for random distributions Version* Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object* Fixed bug in dynamic properties where they were not cleared when a new model is loaded* Added boundary species to python dynamics properties* Redesign dynamic property generations new code is much cleaner* testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files* Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file* If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models* might* cause instability* Upgrade to libSBML* All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console* Support mixed mode arithmetic* workarounds for buggy MSVC stdlib functions* Significantly improve error messages for mal formed SBML models Version* New parallel ensemble function and roadrunner stochastic python module* Added new example files to python package* New function in C API to create RRDataPtr directly from RoadRunner completly bypassing RoadRunnerData C object* Conserved moiety species amounts and concentrations are directly mutable* RoadRunner reset is now very can reset a variety of values based on args Version* Extended information such as git branch and last commit available via they will only be reset if users also changes init species cond* Correctly display CM ids* Major cleanup in handling temp dir added config value for specifiying tmp dir and log file path* Added model checks to fixes with CM is enabled* Merged Alex s documentation updates to C API* Fixed bug with CM being displayed twice in items* Fix bug when getting stoich matrix when CM is enabled* New Runge Kutta integrator</definition>
        <argsstring></argsstring>
        <name>integrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="134" column="19" bodyfile="NEWS.txt" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="NEWS_8txt_1af24d305f149d4eb9a516f4e04d2e93e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Version *Fix conserved moieties</type>
        <definition>Version* Fix conserved moieties bug</definition>
        <argsstring>(wcopeland) -- Version 1.3.1 *Fix *Fix -- Version 1.3 *New Python ND array type which inherits from the numpy ndarray</argsstring>
        <name>bug</name>
        <param>
          <type>wcopeland</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="3" column="25"/>
      </memberdef>
      <memberdef kind="function" id="NEWS_8txt_1a4de10d6975a1df5e1ade9e180882f9f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added getKMatrix</definition>
        <argsstring>() method to RoadRunner object</argsstring>
        <name>getKMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="53" column="8"/>
      </memberdef>
      <memberdef kind="function" id="NEWS_8txt_1a17b68271fc5fce6556141d299d787a0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Version *Fix conserved moieties contains row column name and prints the row col names in nicely formatted output *Added row column fields to these are populated by a majority of RoadRunner methods *plotting compatibility between roadrunner and tellurium *DoubleMatrix correctly writes csv format to stream *Update to libSBML *Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots *C and Python documentation updates *new C proxy classes to compile on OSX *Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance *memory leak fixes in numpy binding *code cleanup and new reset option to apply init assignment rules to global params *added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML *many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface *SteadyState solvers properly created by factory Version *made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe *NLEQ steadystate function now uses static a var to hold a pointer to the model object *Added updated python and C docs to reflect this *Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue *new rrtest testing file format *Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians *support for distrib SBML package for random distributions Version *Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object *Fixed bug in dynamic properties where they were not cleared when a new model is loaded *Added boundary species to python dynamics properties *Redesign dynamic property generations new code is much cleaner *testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files *Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file *If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models *might *cause instability *Upgrade to libSBML *All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console *Support mixed mode arithmetic *workarounds for buggy MSVC stdlib functions *Significantly improve error messages for mal formed SBML models Version *New parallel ensemble function and roadrunner stochastic python module *Added new example files to python package *New function in C API to create RRDataPtr directly from RoadRunner completly bypassing RoadRunnerData C object *Conserved moiety species amounts and concentrations are directly mutable *RoadRunner reset is now very can reset a variety of values based on args Version *Extended information such as git branch and last commit available via</type>
        <definition>Version* Fix conserved moieties contains row column name and prints the row col names in nicely formatted output* Added row column fields to these are populated by a majority of RoadRunner methods* plotting compatibility between roadrunner and tellurium* DoubleMatrix correctly writes csv format to stream* Update to libSBML* Add extra time steps in variable step mode to add timesteps at the exact point of event results in crisp vertical lines on plots* C and Python documentation updates* new C proxy classes to compile on OSX* Introduce new LLVM symbol caching optimiztion and scoped cache blocks for read combining results in SIGNIFICANT imporovments in both compile time and run time performance* memory leak fixes in numpy binding* code cleanup and new reset option to apply init assignment rules to global params* added SBML version converter to optionaly version convert resulting sbml string from getSBML and getCurrentSBML* many RoadRunner objects are now properly a Dictionary and methods now accept a Dictionary interface* SteadyState solvers properly created by factory Version* made the NLEQ steadystate single threaded it will block all other threads and only let one thread at a time be in the steadyState function The FORTRAN77 code that it was written in uses globals for there was no possible way that it was ever thread safe* NLEQ steadystate function now uses static a var to hold a pointer to the model object* Added updated python and C docs to reflect this* Added new eigenr and eigenc selections to get real and complex values of the existing eigen is the same as eigenr will get real part of eigenvalue* new rrtest testing file format* Removed RoadRunner::getEigenvalues and replaced with getFullEigenValues and getReducedEigenValues which return the eigenvalues for the respective Jacobians* support for distrib SBML package for random distributions Version* Python dynamic properties are now on the RoadRunner instead of the RoadRunner model object* Fixed bug in dynamic properties where they were not cleared when a new model is loaded* Added boundary species to python dynamics properties* Redesign dynamic property generations new code is much cleaner* testing files in roadrunner testing are automatically enumerated and run from roadrunner testing test_files* Fix for ordering variables correctly when creating an SimulateOptions from a libSBML test suite txt file* If model has comp automatically flatten libSBML comp extension has numerous memory comp extension models* might* cause instability* Upgrade to libSBML* All logging output is re directed to the IPython socket when running in the QT IPython console This allows allows logging messages to show up in the IPython console* Support mixed mode arithmetic* workarounds for buggy MSVC stdlib functions* Significantly improve error messages for mal formed SBML models Version* New parallel ensemble function and roadrunner stochastic python module* Added new example files to python package* New function in C API to create RRDataPtr directly from RoadRunner completly bypassing RoadRunnerData C object* Conserved moiety species amounts and concentrations are directly mutable* RoadRunner reset is now very can reset a variety of values based on args Version* Extended information such as git branch and last commit available via getVersionStr</definition>
        <argsstring>() *Test case for reduced/full Jacobian in both amount and concentration mode. *Reduced Jacobian now works in either amount or concentration mode. *Added getFloatingSpeciesConcentrationRates() function to get rates of change of floating species concentrations. *Made model reset smarter when resetting model with conserved moieties. If users changes CMs</argsstring>
        <name>getVersionStr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NEWS.txt" line="109" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">--<sp/>Version<sp/>1.3.2</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">*<sp/>Fix<sp/>conserved<sp/>moieties<sp/>bug<sp/>(wcopeland)</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">--<sp/>Version<sp/>1.3.1</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">*<sp/>Fix<sp/>#91<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>negative<sp/>spec<sp/>amts<sp/>in<sp/>Gillespie</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">*<sp/>Fix<sp/>#92<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/>bug<sp/>in<sp/>Python<sp/>wrapper</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">--<sp/>Version<sp/>1.3</highlight></codeline>
<codeline lineno="12"><highlight class="normal">*<sp/>New<sp/>Python<sp/>ND<sp/>array<sp/>type<sp/>which<sp/>inherits<sp/>from<sp/>the<sp/>numpy<sp/>ndarray,<sp/>contains<sp/>row/column<sp/>name<sp/>info,<sp/>and</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>prints<sp/>the<sp/>row/col<sp/>names<sp/>in<sp/>nicely<sp/>formatted<sp/>output.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">*<sp/>Added<sp/>row/column<sp/>fields<sp/>to<sp/>DoubleMatrix,<sp/>these<sp/>are<sp/>populated<sp/>by<sp/>a<sp/>majority<sp/>of<sp/>RoadRunner<sp/>methods.</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">*<sp/>plotting<sp/>compatibility<sp/>between<sp/>roadrunner<sp/>and<sp/>tellurium</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">*<sp/>DoubleMatrix<sp/>correctly<sp/>writes<sp/>csv<sp/>format<sp/>to<sp/>stream</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">*<sp/>Update<sp/>to<sp/>libSBML<sp/>5.11</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">*<sp/>Add<sp/>extra<sp/>time<sp/>steps<sp/>in<sp/>variable<sp/>step<sp/>mode<sp/>to<sp/>add<sp/>timesteps<sp/>at<sp/>the<sp/>exact<sp/>point<sp/>of<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>triggers,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>results<sp/>in<sp/>crisp<sp/>vertical<sp/>lines<sp/>on<sp/>plots.</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">*<sp/>C++<sp/>and<sp/>Python<sp/>documentation<sp/>updates.</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">*<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>C++11<sp/>proxy<sp/>classes<sp/>to<sp/>compile<sp/>on<sp/>OSX<sp/>10.9</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">*<sp/>Introduce<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LLVM<sp/>symbol<sp/>caching<sp/>optimiztion<sp/>and<sp/>scoped<sp/>cache<sp/>blocks<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>read<sp/>combining</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>--<sp/>results<sp/>in<sp/>SIGNIFICANT<sp/>imporovments<sp/>in<sp/>both<sp/>compile<sp/>time<sp/>and<sp/>run<sp/>time<sp/>performance.</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">*<sp/>memory<sp/>leak<sp/>fixes<sp/>in<sp/>numpy<sp/>binding.</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">*<sp/>code<sp/>cleanup<sp/>and<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>reset<sp/>option<sp/>to<sp/>apply<sp/>init<sp/>assignment<sp/>rules<sp/>to<sp/>global<sp/>params</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">*<sp/>added<sp/>SBML<sp/>version<sp/>converter<sp/>to<sp/>optionaly<sp/>version<sp/>convert<sp/>resulting<sp/>sbml<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>from<sp/>getSBML<sp/>and<sp/>getCurrentSBML</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">*<sp/>many<sp/>RoadRunner<sp/>objects<sp/>are<sp/>now<sp/>properly<sp/>a<sp/>Dictionary<sp/>and<sp/>methods<sp/>now<sp/>accept<sp/>a</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>Dictionary<sp/>interface.</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">*<sp/>SteadyState<sp/>solvers<sp/>properly<sp/>created<sp/>by<sp/>factory.<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">--<sp/>Version<sp/>1.2.7</highlight></codeline>
<codeline lineno="46"><highlight class="normal">*<sp/>made<sp/>the<sp/>NLEQ<sp/>steadystate<sp/>single<sp/>threaded<sp/>--<sp/>it<sp/>will<sp/>block<sp/>all<sp/>other<sp/>threads</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>and<sp/>only<sp/>let<sp/>one<sp/>thread<sp/>at<sp/>a<sp/>time<sp/>be<sp/>in<sp/>the<sp/>steadyState<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>The<sp/>FORTRAN77<sp/>code<sp/>that<sp/>it<sp/>was<sp/>written<sp/>in<sp/>uses<sp/>globals<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>everything,<sp/>there<sp/>was</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>no<sp/>possible<sp/>way<sp/>that<sp/>it<sp/>was<sp/>ever<sp/>thread<sp/>safe.<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">*<sp/>NLEQ<sp/>steadystate<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>now<sp/>uses<sp/>a<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>var<sp/>to<sp/>hold<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>model<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">*<sp/>Added<sp/>getKMatrix()<sp/>method<sp/>to<sp/>RoadRunner<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>updated<sp/>python<sp/>and<sp/>C++<sp/>docs<sp/>to<sp/>reflect<sp/>this.</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">*<sp/>Added<sp/>new<sp/>&apos;eigenr&apos;<sp/>and<sp/>&apos;eigenc&apos;<sp/>selections<sp/>to<sp/>get<sp/>real<sp/>and<sp/>complex<sp/>values<sp/>of<sp/>eigenvalues,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>note,<sp/>the<sp/>existing<sp/>&apos;eigen&apos;<sp/>is<sp/>the<sp/>same<sp/>as<sp/>&apos;eigenr&apos;<sp/>--<sp/>will<sp/>get<sp/>real<sp/>part<sp/>of<sp/>eigenvalue.</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">*<sp/>new<sp/>rrtest<sp/>testing<sp/>file<sp/>format.</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">*<sp/>Removed<sp/>RoadRunner::getEigenvalues<sp/>and<sp/>replaced<sp/>with<sp/>getFullEigenValues<sp/>and</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>getReducedEigenValues<sp/>which<sp/>return<sp/>the<sp/>eigenvalues<sp/>for<sp/>the<sp/>respective<sp/>Jacobians.</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">*<sp/>support<sp/>for<sp/>&apos;distrib&apos;<sp/>SBML<sp/>package<sp/>for<sp/>random<sp/>distributions.<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">--<sp/>Version<sp/>1.2.6</highlight></codeline>
<codeline lineno="66"><highlight class="normal">*<sp/><sp/>Python<sp/>dynamic<sp/>properties<sp/>are<sp/>now<sp/>on<sp/>the<sp/>RoadRunner<sp/>instead<sp/>of<sp/>the<sp/>RoadRunner.model<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">*<sp/><sp/>Fixed<sp/>bug<sp/>in<sp/>dynamic<sp/>properties<sp/>where<sp/>they<sp/>were<sp/>not<sp/>cleared<sp/>when<sp/>a<sp/>new<sp/>model<sp/>is<sp/>loaded.<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">*<sp/><sp/>Added<sp/>boundary<sp/>species<sp/>to<sp/>python<sp/>dynamics<sp/>properties</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">*<sp/><sp/>Redesign<sp/>dynamic<sp/>property<sp/>generations<sp/>-<sp/>new<sp/>code<sp/>is<sp/>much<sp/>cleaner.<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">*<sp/><sp/>testing<sp/>files<sp/>in<sp/>roadrunner.testing<sp/>are<sp/>automatically<sp/>enumerated<sp/>and<sp/>run<sp/>from</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>roadrunner.testing.test_files</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">*<sp/><sp/>Fix<sp/>for<sp/>ordering<sp/>variables<sp/>correctly<sp/>when<sp/>creating<sp/>an<sp/>SimulateOptions<sp/>from<sp/>a<sp/>libSBML<sp/>test<sp/>suite</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>txt<sp/>file.</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">*<sp/><sp/>If<sp/>model<sp/>has<sp/>comp<sp/>extension,<sp/>automatically<sp/>flatten.<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>-<sp/>Note,<sp/>libSBML<sp/>comp<sp/>extension<sp/>has<sp/>numerous<sp/>memory<sp/>issues,<sp/>comp<sp/>extension<sp/>models<sp/>*might*<sp/>cause</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>instability.<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">*<sp/><sp/>Upgrade<sp/>to<sp/>libSBML<sp/>5.10.2</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">*<sp/><sp/>All<sp/>logging<sp/>output<sp/>is<sp/>re-directed<sp/>to<sp/>the<sp/>IPython<sp/>socket<sp/>when<sp/>running<sp/>in<sp/>the<sp/>QT<sp/>IPython</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>console.<sp/>This<sp/>allows<sp/>allows<sp/>logging<sp/>messages<sp/>to<sp/>show<sp/>up<sp/>in<sp/>the<sp/>IPython<sp/>console.<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">*<sp/><sp/>Support<sp/>mixed<sp/>mode<sp/>arithmetic.<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">*<sp/><sp/>workarounds<sp/>for<sp/>buggy<sp/>MSVC<sp/>stdlib<sp/>functions.<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">*<sp/><sp/>Significantly<sp/>improve<sp/>error<sp/>messages<sp/>for<sp/>mal-formed<sp/>SBML<sp/>models.<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">--<sp/>Version<sp/>1.2.5</highlight></codeline>
<codeline lineno="96"><highlight class="normal">*<sp/><sp/>New<sp/>parallel<sp/>ensemble<sp/>function<sp/>and<sp/>&apos;roadrunner.stochastic&apos;<sp/>python<sp/>module.</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">*<sp/><sp/>Added<sp/>new<sp/>example<sp/>files<sp/>to<sp/>python<sp/>package.</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">*<sp/><sp/>New<sp/>function<sp/>in<sp/>C<sp/>API<sp/>to<sp/>create<sp/>RRDataPtr<sp/>directly<sp/>from<sp/>RoadRunner<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>completly<sp/>bypassing<sp/>RoadRunnerData<sp/>C++<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">*<sp/><sp/>Conserved<sp/>moiety<sp/>species<sp/>amounts<sp/>and<sp/>concentrations<sp/>are<sp/>directly<sp/>mutable.<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">*<sp/><sp/>RoadRunner.reset<sp/>is<sp/>now<sp/>very<sp/>flexible,<sp/>can<sp/>reset<sp/>a<sp/>variety<sp/>of<sp/>values<sp/>based<sp/>on<sp/>args.</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">--<sp/>Version<sp/>1.2.4</highlight></codeline>
<codeline lineno="108"><highlight class="normal">*<sp/><sp/><sp/>Extended<sp/>information<sp/>such<sp/>as<sp/>git<sp/>branch<sp/>and<sp/>last<sp/>commit<sp/>available<sp/>via<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>getVersionStr()</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">*<sp/><sp/><sp/>Test<sp/>case<sp/>for<sp/>reduced<sp/>/<sp/>full<sp/>Jacobian<sp/>in<sp/>both<sp/>amount<sp/>and<sp/>concentration<sp/>mode.<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">*<sp/><sp/><sp/>Reduced<sp/>Jacobian<sp/>now<sp/>works<sp/>in<sp/>either<sp/>amount<sp/>or<sp/>concentration<sp/>mode.</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">*<sp/><sp/><sp/>Added<sp/>getFloatingSpeciesConcentrationRates()<sp/>function<sp/>to<sp/>get<sp/>rates<sp/>of<sp/>change</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>of<sp/>floating<sp/>species<sp/>concentrations.<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">*<sp/><sp/><sp/>Made<sp/>model<sp/>reset<sp/>smarter<sp/>when<sp/>resetting<sp/>model<sp/>with<sp/>conserved<sp/>moieties.<sp/>If<sp/>users</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>changes<sp/>CMs,<sp/>they<sp/>will<sp/>only<sp/>be<sp/>reset<sp/>if<sp/>users<sp/>also<sp/>changes<sp/>init<sp/>species<sp/>cond.</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">*<sp/><sp/><sp/>Correctly<sp/>display<sp/>CM<sp/>ids.</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">*<sp/><sp/><sp/>Major<sp/>cleanup<sp/>in<sp/>handling<sp/>temp<sp/>dir<sp/>path,<sp/>added<sp/>config<sp/>value<sp/>for<sp/>specifiying</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>dir<sp/>and<sp/>log<sp/>file<sp/>path.<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">*<sp/><sp/><sp/>Added<sp/>model<sp/>checks<sp/>to<sp/>getCurrentSBML,<sp/>fixes<sp/>with<sp/>CM<sp/>is<sp/>enabled.<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">*<sp/><sp/><sp/>Merged<sp/>Alex&apos;s<sp/>documentation<sp/>updates<sp/>to<sp/>C<sp/>API.<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>bug<sp/>with<sp/>CM<sp/>being<sp/>displayed<sp/>twice<sp/>in<sp/>items.<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">*<sp/><sp/><sp/>Fix<sp/>bug<sp/>when<sp/>getting<sp/>stoich<sp/>matrix<sp/>when<sp/>CM<sp/>is<sp/>enabled.<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">*<sp/><sp/><sp/>New<sp/>Runge-Kutta<sp/>integrator,<sp/>available<sp/>via<sp/>simulate<sp/>using<sp/>integrator=&quot;rk4&quot;.<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">*<sp/><sp/><sp/>Full<sp/>Jacobian<sp/>works<sp/>in<sp/>either<sp/>concentration<sp/>or<sp/>amount<sp/>mode.<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">*<sp/><sp/><sp/>Update<sp/>make_docs.sh<sp/>shell<sp/>script<sp/>to<sp/>work<sp/>with<sp/>spaces<sp/>in<sp/>directory<sp/>names.<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">*<sp/><sp/><sp/>More<sp/>user<sp/>proofing<sp/>and<sp/>robustness.<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">--<sp/>Version<sp/>1.2.3</highlight></codeline>
<codeline lineno="143"><highlight class="normal">*<sp/><sp/><sp/>Improvments<sp/>to<sp/>error<sp/>and<sp/>display<sp/>messeges.</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">*<sp/><sp/><sp/>Integrator<sp/>state<sp/>is<sp/>NOT<sp/>reset<sp/>when<sp/>changing<sp/>integrators,<sp/>i.e.<sp/>if<sp/>one<sp/>does<sp/>a<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.simulate(integrator=&quot;gillepsie&quot;)<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.simulate(integrator=&quot;cvode&quot;)<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.simulate(integrator=&quot;gillepsie&quot;)<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>state<sp/>of<sp/>the<sp/>integrators<sp/>(including<sp/>the<sp/>random<sp/>number<sp/>stream)<sp/>continues<sp/>from<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>previous<sp/>state.<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">*<sp/><sp/><sp/>The<sp/>&apos;seed&apos;<sp/>keyword<sp/>argument<sp/>to<sp/>simulate<sp/>resets<sp/>the<sp/>RNG<sp/>to<sp/>the<sp/>given<sp/>seed.<sp/>All<sp/>subsequent</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>calls<sp/>to<sp/>simulate<sp/>pick<sp/>up<sp/>the<sp/>RNG<sp/>in<sp/>its<sp/>current<sp/>state.<sp/>The<sp/>RNG<sp/>is<sp/>ONLY<sp/>reset<sp/>when<sp/>the<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>&apos;seed&apos;<sp/>keyword<sp/>argument<sp/>is<sp/>given.<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">*<sp/><sp/><sp/>Integrators<sp/>now<sp/>implement<sp/>the<sp/>dictionary<sp/>protocol.<sp/>For<sp/>example,<sp/>when<sp/>using<sp/>the<sp/>Gilespie</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>integrator,<sp/>it<sp/>supports<sp/>the<sp/>following<sp/>keys:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.getIntegrator().keys()</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&apos;seed&apos;,<sp/>&apos;rand&apos;]</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">*<sp/><sp/><sp/>The<sp/>&apos;rand&apos;<sp/>value<sp/>grabs<sp/>the<sp/>next<sp/>random<sp/>number<sp/>from<sp/>the<sp/>stream,<sp/>and<sp/>the<sp/>&apos;seed&apos;<sp/>resets<sp/>the<sp/>RNG<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>to<sp/>the<sp/>given<sp/>seed.<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">*<sp/><sp/><sp/>User<sp/>specifiable<sp/>RNG<sp/>seed.<sp/>The<sp/>seed<sp/>can<sp/>be<sp/>specified<sp/>either<sp/>via<sp/>an<sp/>optional<sp/>&apos;seed&apos;<sp/>argument<sp/>to</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simulate,<sp/>i.e.</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.simulate(0,<sp/>10,<sp/>seed=23)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>Or,<sp/>can<sp/>be<sp/>specified<sp/>via<sp/>the<sp/>SimulateOptions<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>either<sp/>with<sp/>a<sp/>new<sp/>one,<sp/>or<sp/>the<sp/>existing<sp/>one:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/>SimulateOptions()</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.start<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.end<sp/>=<sp/>10</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.integrator<sp/>=<sp/>SimulateOptions.GILLESPIE</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o[&apos;seed&apos;]<sp/>=<sp/>23<sp/></highlight><highlight class="preprocessor">#<sp/>SimulatOptions<sp/>behaves<sp/>as<sp/>a<sp/>dictionary,<sp/>any<sp/>new<sp/>integrator<sp/>specific<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>can<sp/>be<sp/>added<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.simulate(o)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>Or,<sp/>the<sp/>existing<sp/>one<sp/>can<sp/>be<sp/>modified:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.simulateOptions[</highlight><highlight class="stringliteral">&apos;seed&apos;</highlight><highlight class="normal">]<sp/>=<sp/>23</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>To<sp/>get<sp/>back<sp/>to<sp/>the<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>behavior<sp/>of<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>the<sp/>system<sp/>time,<sp/>just<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>value<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>existing<sp/>object:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>r.simulatOptions[</highlight><highlight class="stringliteral">&apos;seed&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>an<sp/>issue<sp/>with<sp/>conserved<sp/>moieties<sp/>not<sp/>being<sp/>calculated<sp/>correctly<sp/>with<sp/>multi-compartment</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>models.</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">*<sp/><sp/><sp/>Added<sp/>getFullStoichiometryMatrix()<sp/>and<sp/>getReducedStochiometryMatrix()<sp/>methods<sp/>to<sp/>RoadRunner</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">*<sp/><sp/><sp/>Cleanup<sp/>in<sp/>steady<sp/>state<sp/>solver,<sp/>introduced<sp/>new<sp/>configuration<sp/>parameters<sp/>for<sp/>steady<sp/>state<sp/>solver:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STEADYSTATE_RELATIVE,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STEADYSTATE_MAXIMUM_NUM_STEPS,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STEADYSTATE_MINIMUM_DAMPING</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">*<sp/><sp/><sp/>Initial<sp/>value<sp/>assignment<sp/>rules<sp/>now<sp/>access<sp/>the<sp/>present<sp/>value<sp/>of<sp/>parameters<sp/>rather<sp/>than<sp/>their</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>initial<sp/>value.<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">*<sp/><sp/><sp/>Never-ending<sp/>memory<sp/>leak<sp/>fixes<sp/>in<sp/>libSBML.<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">*<sp/><sp/><sp/>Added<sp/>support<sp/>for<sp/>global<sp/>parameter<sp/>rates<sp/>via<sp/>selections<sp/>if<sp/>the<sp/>global<sp/>parameter<sp/>has<sp/>a<sp/>rate<sp/>rule.<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>atanh<sp/>but<sp/>on<sp/>Windows.<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>bug<sp/>with<sp/>incorrect<sp/>model<sp/>resetting<sp/>when<sp/>changing<sp/>integrators.<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>row/column<sp/>major<sp/>bug<sp/>with<sp/>Python<sp/>API.<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">*<sp/><sp/><sp/>python<sp/>RoadRunner<sp/>simulate<sp/>returns<sp/>(optionally)<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>simulation<sp/>result.</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">--<sp/>Version<sp/>1.2.2</highlight></codeline>
<codeline lineno="219"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>bug<sp/>in<sp/>Python<sp/>simulate<sp/>method<sp/>not<sp/>accepting<sp/>4&apos;th<sp/>position<sp/>argument<sp/>in<sp/>certain<sp/>cases.</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">*<sp/><sp/><sp/>Added<sp/>LLVM<sp/>info<sp/>to<sp/>version<sp/>info</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">*<sp/><sp/><sp/>Added<sp/>methods<sp/>to<sp/>Compiler<sp/>interface<sp/>to<sp/>get<sp/>info<sp/>about<sp/>current<sp/>JIT<sp/>processor<sp/>and<sp/>system.<sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">*<sp/><sp/><sp/>Added<sp/>support<sp/>for<sp/>compiling<sp/>with<sp/>LLVM<sp/>3.5,<sp/>we<sp/>now<sp/>support<sp/>LLVM<sp/>version<sp/>3.1<sp/>-<sp/>3.5<sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">--<sp/>Version<sp/>1.2.1</highlight></codeline>
<codeline lineno="228"><highlight class="normal">*<sp/><sp/><sp/>Added<sp/>models<sp/>and<sp/>data<sp/>files<sp/>from<sp/>the<sp/>Discrete<sp/>Stochastic<sp/>Models<sp/>Test<sp/>Suite,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>https:</highlight><highlight class="comment">//code.google.com/p/dsmts/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>to<sp/>the<sp/>roadrunner.testing<sp/>package.</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">*<sp/><sp/><sp/>New<sp/>function<sp/>in<sp/>the<sp/>roadrunner.testing<sp/>package<sp/>to<sp/>enumerate<sp/>testing<sp/>data<sp/>files.</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">*<sp/><sp/><sp/>Clean<sp/>up<sp/>of<sp/>SBML<sp/>warning<sp/>messages<sp/>(thanks<sp/>Lucian)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>major<sp/>bug<sp/>with<sp/>how<sp/>absolute<sp/>and<sp/>relative<sp/>tolerances<sp/>are<sp/>handled<sp/>(major<sp/>thanks<sp/>to<sp/>Matthias</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>Koenig)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">*<sp/><sp/><sp/>Added<sp/>support<sp/>for<sp/>reading<sp/>values<sp/>of<sp/>reaction<sp/>rates<sp/>inside<sp/>the<sp/>model<sp/>(identified<sp/>by<sp/>Matthias)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">*<sp/><sp/><sp/>Event<sp/>status<sp/>is<sp/>not<sp/>available<sp/>as<sp/>a<sp/>selection,<sp/>i.e.<sp/>r.model[&quot;my_event_id&quot;]<sp/>will<sp/>return<sp/>1<sp/>or<sp/>-1</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>depending<sp/>on<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>event<sp/>is<sp/>triggered.</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">*<sp/><sp/><sp/>The<sp/>plot<sp/>method<sp/>no<sp/>longer<sp/>tries<sp/>to<sp/>parse<sp/>labels<sp/>from<sp/>SBML<sp/>ids<sp/>as<sp/>LaTeX.</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">*<sp/><sp/><sp/>made<sp/>structuredResult<sp/>behavior<sp/>backward<sp/>compatible<sp/>(some<sp/>users<sp/>like<sp/>the<sp/>structured<sp/>result).</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">*<sp/><sp/><sp/>major<sp/>revamp<sp/>of<sp/>the<sp/>Python<sp/>simulate<sp/>method,<sp/>it<sp/>now<sp/>accepts<sp/>a<sp/>variety<sp/>of<sp/>positional<sp/>and<sp/>named</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>arguments.</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">*<sp/><sp/><sp/>fix<sp/>bug<sp/>when<sp/>compiling<sp/>with<sp/>clang3.4<sp/>in<sp/>c++<sp/>11<sp/>mode<sp/>(identified<sp/>by<sp/>Andrew<sp/>Millspaugh)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">*<sp/><sp/><sp/>Gillespie<sp/>integrator<sp/>now<sp/>supports<sp/>fixed<sp/>and<sp/>variable<sp/>time<sp/>step<sp/>mode.</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">*<sp/><sp/><sp/>Variable<sp/>time<sp/>step<sp/>mode<sp/>fixes<sp/>with<sp/>deterministic<sp/>solver.</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">--<sp/>Version<sp/>1.2.0</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">*<sp/><sp/><sp/>Enabled<sp/>mutable<sp/>initial<sp/>conditions<sp/>when<sp/>conserved<sp/>moities<sp/>are<sp/>used,<sp/>implemented<sp/>Jacobian<sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>calculation<sp/>when<sp/>conserved<sp/>moieties<sp/>are<sp/>used.<sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>memory<sp/>leaks<sp/>related<sp/>to<sp/>how<sp/>CVODE<sp/>is<sp/>used.<sp/>With<sp/>the<sp/>mem<sp/>leaks<sp/>fixed,<sp/>we<sp/>leak<sp/>a<sp/>total<sp/>of<sp/>16</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes<sp/>ONCE,<sp/>in<sp/>a<sp/>3rd<sp/>party<sp/>library<sp/><sp/>in<sp/>the<sp/>beginning<sp/>for<sp/>running<sp/>the<sp/>entire<sp/>test<sp/>suite.<sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>bugs<sp/>with<sp/>stiff<sp/>solver<sp/>not<sp/>being<sp/>selected</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">*<sp/><sp/><sp/>New<sp/>getValue<sp/>/<sp/>setValue<sp/>methods<sp/>on<sp/>SimulationOptions<sp/>to<sp/>set<sp/>arbitrary<sp/>settings,<sp/>will<sp/>be<sp/>used<sp/>by</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>future<sp/>integrators.<sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">*<sp/><sp/><sp/>Prototype<sp/>Gillespie<sp/>stochastic<sp/>integrator</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">*<sp/><sp/><sp/>Added<sp/>missing<sp/>init<sp/>amount<sp/>method<sp/>to<sp/>python<sp/>API</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">*<sp/><sp/><sp/>Clean<sp/>up<sp/>IL<sp/>code<sp/>generation</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">*<sp/><sp/><sp/>Structured<sp/>result<sp/>disabled<sp/>by<sp/>default</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">*<sp/><sp/><sp/>New<sp/>parameters<sp/>in<sp/>simulate<sp/>and<sp/>plot<sp/>methods<sp/>(Herbert<sp/>has<sp/>these,<sp/>waiting<sp/>on<sp/>feedback),<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>simulate<sp/>now<sp/>accepts<sp/>all<sp/>SimulateOptions<sp/>field<sp/>names<sp/>as<sp/>keywords<sp/>and<sp/>has<sp/>plot<sp/>option,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>i.e.<sp/>simulate(plot=True)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">*<sp/><sp/><sp/>Raise<sp/>exception<sp/>on<sp/>invalid<sp/>selection<sp/>strings</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">*<sp/><sp/><sp/>Removed<sp/>pointless<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>return<sp/>value<sp/>on<sp/>exception<sp/>raising<sp/>methods.</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">*<sp/><sp/><sp/>All<sp/>instance<sp/>variables<sp/>in<sp/>public<sp/>classes<sp/>moved<sp/>to<sp/>private<sp/>internal<sp/>struct<sp/>--<sp/>result<sp/>is<sp/>that<sp/>we</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>can<sp/>now<sp/>add<sp/>and<sp/>remove<sp/>instance<sp/>variables<sp/>and<sp/>never<sp/>break<sp/>binary<sp/>compatibility.<sp/>Relevant<sp/>to<sp/>C++<sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>users.</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">*<sp/><sp/><sp/>Future<sp/>versions<sp/>may<sp/>accept<sp/>more<sp/>complex<sp/>types<sp/>for<sp/>configuration<sp/>settings,<sp/>API<sp/>is<sp/>set<sp/>up<sp/>so<sp/>we</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>never<sp/>break<sp/>binary<sp/>compatibility<sp/>as<sp/>we<sp/>add<sp/>new<sp/>features<sp/>like<sp/>this.</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">*<sp/><sp/><sp/>Continuous<sp/>documentation<sp/>updates<sp/>and<sp/>enhancements.</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">--<sp/>Version<sp/>1.1.0</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">*<sp/><sp/><sp/>Config<sp/>system.<sp/>RoadRunner<sp/>can<sp/>now<sp/>read<sp/>and<sp/>write<sp/>most<sp/>default<sp/>configuration<sp/>parameters<sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>from<sp/>/<sp/>to<sp/>a<sp/>config<sp/>file</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">*<sp/><sp/><sp/>fixed<sp/>memory<sp/>leak<sp/>in<sp/>moiety<sp/>conservation<sp/>converter</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">*<sp/><sp/><sp/>new<sp/>colored<sp/>logging</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal">*<sp/><sp/><sp/>Can<sp/>read<sp/>SBML<sp/>files<sp/>through<sp/>HTTP<sp/>on<sp/>all<sp/>platforms.<sp/>The<sp/>RoadRunner<sp/>constructor<sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>or<sp/>load<sp/>methods<sp/>are<sp/>smart<sp/>in<sp/>that<sp/>accept<sp/>a<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>which<sp/>can<sp/>be<sp/>either:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>a:<sp/>the<sp/>contents<sp/>of<sp/>a<sp/>SBML<sp/>document</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>b:<sp/>a<sp/>local<sp/>file<sp/>path,<sp/>i.e.<sp/>/home/andy/feedback.xml</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>c:<sp/>a<sp/>full<sp/>URI<sp/>identifier<sp/>that<sp/>can<sp/>be<sp/>either<sp/>a<sp/>local<sp/>file<sp/>or<sp/>a<sp/>remote<sp/>file,<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>can<sp/>even<sp/>be<sp/>a<sp/>BioModels<sp/>identifier,<sp/>i.e.<sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r=roadrunner.RoadRunner(&quot;http:</highlight><highlight class="comment">//www.ebi.ac.uk/biomodels-main/download?mid=BIOMD0000000275&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">*<sp/><sp/><sp/>upgraded<sp/>to<sp/>standard<sp/>Poco<sp/>1.5<sp/>distribution.<sp/>RoadRunner&apos;s<sp/>Poco<sp/>is<sp/>now<sp/>linked<sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>directly<sp/>to<sp/>the<sp/>official<sp/>Poco<sp/>git<sp/>repository.<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">*<sp/><sp/><sp/>lots<sp/>of<sp/>integrator<sp/>tuning<sp/>parameters<sp/>are<sp/>now<sp/>accessible<sp/>via<sp/>the<sp/>SimulateOptions<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">*<sp/><sp/><sp/>Can<sp/>run<sp/>the<sp/>integrator<sp/>in<sp/>new<sp/>MULTI_STEP<sp/>mode<sp/>where<sp/>the<sp/>integrator<sp/>determines<sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>step<sp/>size.<sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">*<sp/><sp/><sp/>New<sp/>SBML<sp/>events<sp/>--<sp/>users<sp/>can<sp/>register<sp/>listeners<sp/>for<sp/>any<sp/>SBML<sp/>event.<sp/>Whenever<sp/>a<sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>SBML<sp/>event<sp/>is<sp/>triggered<sp/>or<sp/>assigned,<sp/>the<sp/>user<sp/>can<sp/>be<sp/>notified.<sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">*<sp/><sp/><sp/>New<sp/>integrator<sp/>events<sp/>--<sp/>users<sp/>can<sp/>register<sp/>listeners<sp/>for<sp/>integrator<sp/>events<sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>such<sp/>as<sp/>when<sp/>a<sp/>time<sp/>step<sp/>completes<sp/>or<sp/>an<sp/>event<sp/>was<sp/>detected.<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal">*<sp/><sp/><sp/>Significantly<sp/>improved<sp/>integrator<sp/>error<sp/>handling.<sp/>Whenever<sp/>CVODE<sp/>encounters<sp/>any</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>such<sp/>as<sp/>numeric<sp/>instability,<sp/>the<sp/>error<sp/>is<sp/>written<sp/>directly<sp/>to<sp/>the<sp/>Roadrunner</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>logging<sp/>system<sp/>with<sp/>exact<sp/>details<sp/>about<sp/>the<sp/>error.<sp/>Descriptive<sp/>exceptions<sp/>are<sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>now<sp/>raised<sp/>detailing<sp/>the<sp/>exact<sp/>source<sp/>of<sp/>the<sp/>error.<sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">*<sp/><sp/><sp/>cleanup<sp/>of<sp/>integrator<sp/>code.<sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">*<sp/><sp/><sp/>new<sp/>distutils<sp/>based<sp/>python<sp/>installation<sp/>system.<sp/>We<sp/>now<sp/>provide<sp/>binaries<sp/>for<sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>32/64<sp/>bit<sp/>Linux<sp/>(Intel),<sp/>64<sp/>bit<sp/>Mac<sp/>OSX<sp/>and<sp/>32<sp/>bit<sp/>Windows.<sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">--<sp/>Version<sp/>1.0.1</highlight></codeline>
<codeline lineno="340"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>bug<sp/>where<sp/>nested<sp/>SBML<sp/>functions<sp/>were<sp/>not<sp/>handled<sp/>properly.<sp/>Now</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>correctly<sp/>reports<sp/>when<sp/>SBML<sp/>functions<sp/>are<sp/>called<sp/>with<sp/>invalid<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>number<sp/>of<sp/>args.<sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>bug<sp/>where<sp/>where<sp/>a<sp/>log<sp/>trace<sp/>message<sp/>incorrectly<sp/>created.<sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">*<sp/><sp/><sp/>Display<sp/>version<sp/>info<sp/>correctly<sp/>in<sp/>the<sp/>command<sp/>line<sp/>rr<sp/>program.<sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">*<sp/><sp/><sp/>Cache<sp/>selection<sp/>types<sp/>and<sp/>indices<sp/>in<sp/>model.getValue<sp/>/<sp/>setValue,<sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>significant<sp/>improvement<sp/>in<sp/>SBML<sp/>symbol<sp/>access<sp/>times.<sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal">*<sp/><sp/><sp/>Fixed<sp/>memory<sp/>leaks<sp/>in<sp/>Python<sp/>API,<sp/>performance<sp/>improvements<sp/>in<sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>selections.<sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">*<sp/><sp/><sp/>New<sp/>RoadRunner<sp/>constructor<sp/>which<sp/>takes<sp/>a<sp/>URI<sp/>and<sp/>load<sp/>options.<sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">*<sp/><sp/><sp/>Plugins<sp/>moved<sp/>to<sp/>Tellurium<sp/>project.</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal">*<sp/><sp/><sp/>Added<sp/>getStateVectorRate<sp/>and<sp/>getStateVectorIds<sp/>to<sp/>ExecutableModel<sp/>interface,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>readily<sp/>allows<sp/>roadrunner<sp/>to<sp/>be<sp/>used<sp/>with<sp/>external<sp/>integrators.</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">*<sp/><sp/><sp/>SBML<sp/>variable<sp/>access<sp/>performance<sp/>improvements.<sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal">--<sp/>Version<sp/>1.0.0</highlight></codeline>
<codeline lineno="364"><highlight class="normal">*<sp/><sp/><sp/>Initial<sp/>release</highlight></codeline>
    </programlisting>
    <location file="NEWS.txt"/>
  </compounddef>
</doxygen>
