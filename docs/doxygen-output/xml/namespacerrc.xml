<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacerrc" kind="namespace" language="C++">
    <compoundname>rrc</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="rrc__utilities_8cpp_1aee1ea90fcc11ee806afc2b7631545807" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* rrc::ALLOCATE_API_ERROR_MSG</definition>
        <argsstring></argsstring>
        <name>ALLOCATE_API_ERROR_MSG</name>
        <initializer>= &quot;Allocate a handle to the roadrunner wrappers before calling any wrappers function&quot;</initializer>
        <briefdescription>
<para>Global parameter holding message for an un-allocated wrappers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="33" column="12" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrc__utilities_8cpp_1ad0aa3db143183c70f238207cedd8747e" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* rrc::INVALID_HANDLE_ERROR_MSG</definition>
        <argsstring></argsstring>
        <name>INVALID_HANDLE_ERROR_MSG</name>
        <initializer>= &quot;The HANDLE passed to this function was invalid&quot;</initializer>
        <briefdescription>
<para>Global parameter holding message when an invalid is handed to a function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="34" column="12" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrc__utilities_8cpp_1aa9ba4ca4af5aef0ab8ed33e3828e4a38" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* rrc::gLastError</definition>
        <argsstring></argsstring>
        <name>gLastError</name>
        <initializer>= NULL</initializer>
        <briefdescription>
<para>Global parameter holding last error, if any. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="35" column="12" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrc__utilities_8cpp_1a661bcec12a1f7622e40452959edadf4a" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char rrc::gInstallFolderBuffer[RR_MAX_PATH]</definition>
        <argsstring>[RR_MAX_PATH]</argsstring>
        <name>gInstallFolderBuffer</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="36" column="13" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rrc__utilities_8cpp_1aac6667fbadeb0620000113afb98355df" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* rrc::gInstallFolder</definition>
        <argsstring></argsstring>
        <name>gInstallFolder</name>
        <initializer>= gInstallFolderBuffer</initializer>
        <briefdescription>
<para>Global parameter holding C wrappers install folder. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="37" column="12" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rrArrayListItem_8cpp_1a2ecd019dd8f50397bbcee5593a73b683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; rrc::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const ArrayListItemBase &amp;item)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const ArrayListItemBase &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrArrayListItem.cpp" line="8" column="1" bodyfile="/home/vsts/work/1/s/wrappers/C/rrArrayListItem.cpp" bodystart="8" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1ad5879b859de0889f87f62f61876602bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt; string &gt; rrc::sel_getTime</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getTime</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3361" column="8" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3361" bodyend="3369" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="103" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1af21bed72d985fba36ea299f4daddef05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArrayList</type>
        <definition>ArrayList rrc::sel_getFluxControlCoefficientIds</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getFluxControlCoefficientIds</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3086" column="11" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3086" bodyend="3122" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="104" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a9bd3a163ef9c161e51c3e0327e3f4436" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArrayList</type>
        <definition>ArrayList rrc::sel_getAvailableSteadyStateSymbols</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getAvailableSteadyStateSymbols</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3127" column="11" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3127" bodyend="3146" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="105" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a4434949dbb1cf6836258fe4b62958933" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArrayList</type>
        <definition>ArrayList rrc::sel_getAvailableTimeCourseSymbols</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getAvailableTimeCourseSymbols</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3148" column="11" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3148" bodyend="3164" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="106" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a455a03a6fc6acb1304d018b02a13ece6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt; string &gt; rrc::sel_getBoundarySpeciesAmountIds</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getBoundarySpeciesAmountIds</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3167" column="8" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3167" bodyend="3178" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="107" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a8d5f8930c9dbfe320630b8a18b668b19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt; string &gt; rrc::sel_getBoundarySpeciesConcIds</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getBoundarySpeciesConcIds</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3180" column="8" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3180" bodyend="3191" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="108" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a8c38c4238320eed9a35bb901bb1853ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArrayList</type>
        <definition>ArrayList rrc::sel_getConcentrationControlCoefficientIds</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getConcentrationControlCoefficientIds</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3194" column="11" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3194" bodyend="3229" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="109" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1ab841631b759e26839c5a351c7657fd18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArrayList</type>
        <definition>ArrayList rrc::sel_getUnscaledConcentrationControlCoefficientIds</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getUnscaledConcentrationControlCoefficientIds</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3232" column="11" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3232" bodyend="3267" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="110" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1ae30410e186e388abe5531a6ee65f20bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArrayList</type>
        <definition>ArrayList rrc::sel_getElasticityCoefficientIds</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getElasticityCoefficientIds</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3270" column="11" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3270" bodyend="3311" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="111" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a6a0e053cf97b290bc666f2bfbe3c42b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArrayList</type>
        <definition>ArrayList rrc::sel_getUnscaledElasticityCoefficientIds</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getUnscaledElasticityCoefficientIds</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3314" column="11" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3314" bodyend="3359" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="112" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a51fa37688796bccc45bbd248e875a2d2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt; string &gt; rrc::sel_getFloatingSpeciesConcSymbols</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getFloatingSpeciesConcSymbols</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3371" column="8" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3371" bodyend="3382" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="113" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a9ad1b003891239e472366762201262f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt; string &gt; rrc::sel_getBoundarySpeciesConcSymbols</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>sel_getBoundarySpeciesConcSymbols</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3385" column="8" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3385" bodyend="3396" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="114" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1ac77c3d52737425612701196d030a4430" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; rrc::rr_getRatesOfChange</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>rr_getRatesOfChange</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3398" column="8" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3398" bodyend="3411" declfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" declline="116" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__initialization_1ga3285113641ecf1dc35c39fceb39b60fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref> rrcCallConv</type>
        <definition>RRHandle rrcCallConv rrc::createRRInstance</definition>
        <argsstring>()</argsstring>
        <name>createRRInstance</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize a new roadRunner instance and return a handle to it. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns a RoadRunner instance, returns null if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="159" column="22" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="159" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="group__initialization_1ga0bd8e459a637346cdf196f91148015ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref> rrcCallConv</type>
        <definition>RRHandle rrcCallConv rrc::createRRInstanceEx</definition>
        <argsstring>(const char *tempFolder, const char *compiler_cstr)</argsstring>
        <name>createRRInstanceEx</name>
        <param>
          <type>const char *</type>
          <declname>tempFolder</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>compiler</declname>
          <defname>compiler_cstr</defname>
        </param>
        <briefdescription>
<para>Initialize a new roadRunner instance and return a handle to it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tempFolder</parametername>
</parameternamelist>
<parameterdescription>
<para>set roadrunners temporary folder </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">compiler</parametername>
</parameternamelist>
<parameterdescription>
<para>may be NULL, if NULL, uses default compiler. If LLVM build is enabled, setting compiler to &quot;llvm&quot; enables llvm based model generation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a RoadRunner instance, returns null if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="170" column="22" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="170" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="group__initialization_1gad1a68a41c939d388df3d8cf1f14023a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* rrc::getInstallFolder</definition>
        <argsstring>()</argsstring>
        <name>getInstallFolder</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the folder in which the RoadRunner wrappers is installed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to string holding the install folder </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="198" column="6" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="198" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="group__initialization_1gabe314ab514c04cd902c078b864f22a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setInstallFolder</definition>
        <argsstring>(const char *folder)</argsstring>
        <name>setInstallFolder</name>
        <param>
          <type>const char *</type>
          <declname>folder</declname>
        </param>
        <briefdescription>
<para>Set the internal string containing the folder in where the RoadRunner C wrappers is installed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">folder</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to string holding the install folder </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="207" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="207" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1gaff2a26066f24b54f39c68beeb5338c3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getAPIVersion</definition>
        <argsstring>()</argsstring>
        <name>getAPIVersion</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve the current version number of the C wrappers library. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns null if it fails, otherwise it returns the version number of the C wrappers library </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="214" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="214" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga090ca781c38ddbb220cfad882b172f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCPPAPIVersion</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getCPPAPIVersion</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the current version number of the C++ wrappers (Core RoadRunner wrappers) library. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>RoadRunner instance handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise it returns the version number of the C++ wrappers library </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="221" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="221" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a50d0373fceb5e97d08a08219e74157a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getVersion</definition>
        <argsstring>()</argsstring>
        <name>getVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the version number.</para>
<para><simplesect kind="return"><para>the roadrunner version number in the form or 102030 if the number is 1.2.3</para>
</simplesect>
returns the individual version numbers as XXYYZZ where XX is the major version, YY the minor and ZZ the revision, eg 10000, or 10100, 20000 etc </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="228" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="228" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1af0ee8d4e407cf2197ce1488b13f54e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getVersionStr</definition>
        <argsstring>()</argsstring>
        <name>getVersionStr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns roadrunner as a string, i.e. &quot;1.0.0&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="237" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a0d6f5d0021b75b66e11e618586c45825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getVersionEx</definition>
        <argsstring>()</argsstring>
        <name>getVersionEx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns something like &quot;1.0.0; compiled with clang &quot;3.3 (tags/RELEASE_33/final)" on date Dec 8 2013, 17:24:57&apos; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="243" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga128bafde3b10f0ce64ca3c6b06b14cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getRRCAPILocation</definition>
        <argsstring>()</argsstring>
        <name>getRRCAPILocation</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve the directory path of the shared rrCApi library. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns null if it fails, otherwise it returns the path </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="248" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="248" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga67a7b431f66978753a8837718fd0112f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCopyright</definition>
        <argsstring>()</argsstring>
        <name>getCopyright</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve the current copyright notice for the library. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns null if it fails, otherwise it returns the copyright string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="268" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="268" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga84805d87e0b75fcaff3b7ad3d1179002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getInfo</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getInfo</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve info about current state of roadrunner, e.g. loaded model, conservationAnalysis etc. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise it returns a string with the info </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="278" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="278" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga61250a85fdc6cc67f331bc4030bfeeed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getExtendedAPIInfo</definition>
        <argsstring>()</argsstring>
        <name>getExtendedAPIInfo</name>
        <briefdescription>
<para>Retrieve extended wrappers info. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns null if it fails, otherwise it returns a string with the info </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="286" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="286" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga2235582889c86de1bcef3c2a83631183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getlibSBMLVersion</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getlibSBMLVersion</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the current version number of the libSBML library. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise it returns the version number of the library </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="297" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="297" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="group__loadsave_1gacc85b81616a8a3cee83ce6b2913e6382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentSBML</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getCurrentSBML</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the <bold>current state</bold> of the model in the form of an SBML string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if the call fails, otherwise returns a pointer to the SBML string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="304" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="304" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="group__initialization_1gacb21c6ed7c891635f41cfd43e99cda2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setComputeAndAssignConservationLaws</definition>
        <argsstring>(RRHandle handle, const bool OnOrOff)</argsstring>
        <name>setComputeAndAssignConservationLaws</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>On_Or_Off</declname>
          <defname>OnOrOff</defname>
        </param>
        <briefdescription>
<para>Enable or disable conservation analysis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">On_Or_Off</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true to switch on conservation analysis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="313" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="313" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="group__initialization_1ga3e9ca24ab5e08fa5a5c70aad4d9d255c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getComputeAndAssignConservationLaws</definition>
        <argsstring>(RRHandle handle, int *value)</argsstring>
        <name>getComputeAndAssignConservationLaws</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get the value of the moiety conservation setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>A place to store the value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="327" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="327" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga40e0e9b3f96c37bad8b0313eddf6caed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setTempFolder</definition>
        <argsstring>(RRHandle handle, const char *folder)</argsstring>
        <name>setTempFolder</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>folder</declname>
        </param>
        <briefdescription>
<para>Set the path to the temporary folder where the C code will be stored. </para>
        </briefdescription>
        <detaileddescription>
<para>When RoadRunner is run in C generation mode its uses a temporary folder to store the generated C source code. This method can be used to set the temporary folder path if necessary. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">folder</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to string holding folder path</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="336" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="336" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga2aa2fbec7d08c77d38e62df4c48e428e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getTempFolder</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getTempFolder</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the current temporary folder path. </para>
        </briefdescription>
        <detaileddescription>
<para>When RoadRunner is run in C generation mode its uses a temporary folder to store the generate C source code. This method can be used to get the current value for the temporary folder path. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise it returns the path </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="345" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="345" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga452d753989b5142b29528ae5865224ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setCompiler</definition>
        <argsstring>(RRHandle handle, const char *fName)</argsstring>
        <name>setCompiler</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fNameWithPath</declname>
          <defname>fName</defname>
        </param>
        <briefdescription>
<para>Set the path and filename to the compiler to be used by roadrunner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fNameWithPath</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to string holding the fileName and path to a compiler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="353" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="353" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1gae7a9642fcd8b299d57007bb45238fc82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCompiler</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getCompiler</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the name of the compiler currently being used by roadrunner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="368" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="368" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1gab910a88973c4f823b1f576c7767cc0d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setCompilerLocation</definition>
        <argsstring>(RRHandle handle, const char *folder)</argsstring>
        <name>setCompilerLocation</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>folder</declname>
        </param>
        <briefdescription>
<para>Set the path to a folder containing the compiler to be used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">folder</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to string holding the path to a compiler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="377" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="377" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga254939fcaf8c8ae7caaea2471fedc8b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCompilerLocation</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getCompilerLocation</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the path to a folder containing the compiler being used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the path if successful, NULL otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="392" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="392" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga0d8069e1538d2c41f243e3b6d56abf41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setSupportCodeFolder</definition>
        <argsstring>(RRHandle handle, const char *folder)</argsstring>
        <name>setSupportCodeFolder</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>folder</declname>
        </param>
        <briefdescription>
<para>Set the path to a folder containing support code for model generation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">folder</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to string holding the path to the support code folder </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="400" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="400" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1gad6fb8cb063c5cd3cae8cbdffc8a5f477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getSupportCodeFolder</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getSupportCodeFolder</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the path to a folder containing support code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the path if successful, NULL otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="415" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="415" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1gad7dc449357c2b600b81c9e2990ad38dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getWorkingDirectory</definition>
        <argsstring>()</argsstring>
        <name>getWorkingDirectory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve the current working directory path. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns null if it fails, otherwise it returns the path </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="423" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="423" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="group__loadsave_1ga03cb924c6790b039f77a1a9c5dbcdda1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::loadSBMLFromFile</definition>
        <argsstring>(RRHandle _handle, const char *fileName)</argsstring>
        <name>loadSBMLFromFile</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
          <defname>_handle</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>Load a model from a SBML file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>file name (or full path) to file that holds the SBML model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="430" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="430" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="group__loadsave_1gab2aa4b93a3037879a0da7dc85b3a9746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::loadSBMLFromFileE</definition>
        <argsstring>(RRHandle _handle, const char *fileName, bool forceRecompile)</argsstring>
        <name>loadSBMLFromFileE</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
          <defname>_handle</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceRecompile</declname>
        </param>
        <briefdescription>
<para>Load a model from a SBML file, force recompilation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>file name (or full path) to file that holds the SBML model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">forceRecompile</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean that forces recompilation if true. If false, no compilation occur if model dll exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="448" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="448" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="group__loadsave_1gaeaaaf4f7855457d6207934149f52f5f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::loadSBML</definition>
        <argsstring>(RRHandle handle, const char *sbml)</argsstring>
        <name>loadSBML</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sbml</declname>
        </param>
        <briefdescription>
<para>Load a model from an SBML string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sbml</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="472" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="472" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="group__loadsave_1ga255d17e06e104da6a2f9e0696b1aa9e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::loadSBMLEx</definition>
        <argsstring>(RRHandle handle, const char *sbml, bool forceRecompile)</argsstring>
        <name>loadSBMLEx</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sbml</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceRecompile</declname>
        </param>
        <briefdescription>
<para>Load a model from an SBML string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sbml</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">forceRecompile</parametername>
</parameternamelist>
<parameterdescription>
<para>boolean. True means the model is recompiled. False causes roadrunner to use an already compiled model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="481" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="481" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="group__loadsave_1gae6b66c032a09e36e6372fb822b8cef24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::saveState</definition>
        <argsstring>(RRHandle handle, const char *filename)</argsstring>
        <name>saveState</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Save a road runner instance&apos;s state to a platform-specific binary file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the RoadRunner instance to be saved </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>path to the file to be saved to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="496" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="496" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="group__loadsave_1ga7617e5077d82655849795bb019d7ff46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::loadState</definition>
        <argsstring>(RRHandle handle, const char *filename)</argsstring>
        <name>loadState</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Reload a road runner instance&apos;s state saved by saveState. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the RoadRunner instance to be loaded into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>path to the file to be loaded from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="505" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="505" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="group__loadsave_1ga387b0694ce78f6f82e089cfade9faef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::loadSimulationSettings</definition>
        <argsstring>(RRHandle handle, const char *fileName)</argsstring>
        <name>loadSimulationSettings</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>Load simulation settings from a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>file name (or full path) to file that holds simulation settings </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="515" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="515" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="group__loadsave_1ga583d80e8a54f0d41b8600bb4ece0e552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getSBML</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getSBML</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the SBML model that was last loaded into roadRunner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if the call fails, otherwise returns a pointer to the SBML string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="536" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="536" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="group__loadsave_1ga1522e7efbb34bc40fd88376327a9535d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::isModelLoaded</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>isModelLoaded</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>check if a model is loaded </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true/false indicating whether a model is loaded or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="544" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="544" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="group__loadsave_1gac32d078c249651e7ea7af43055df8382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::clearModel</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>clearModel</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Unload current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="552" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="552" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1ga6f2c769375399d14087d6e5e99339aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setTimeStart</definition>
        <argsstring>(RRHandle handle, const double timeStart)</argsstring>
        <name>setTimeStart</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeStart</declname>
        </param>
        <briefdescription>
<para>Set the time start for a time course simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeStart</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="560" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="560" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1ga93f6c401b6a9e301fcdc380a6048b28c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setTimeEnd</definition>
        <argsstring>(RRHandle handle, const double timeEnd)</argsstring>
        <name>setTimeEnd</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeEnd</declname>
        </param>
        <briefdescription>
<para>Set the time end for a time course simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeEnd</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="569" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="569" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1ga4575f315d9794b53adf78bfb60973d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setNumPoints</definition>
        <argsstring>(RRHandle handle, const int nrPoints)</argsstring>
        <name>setNumPoints</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfPoints</declname>
          <defname>nrPoints</defname>
        </param>
        <briefdescription>
<para>Set the number of points to generate in a time course simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numberOfPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to generate in the time course simulation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="579" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="579" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1ad0f42ee2c23eeddca5ead4b4dcbd15eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setTimes</definition>
        <argsstring>(RRHandle handle, const double *times, int size)</argsstring>
        <name>setTimes</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>times</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="589" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="589" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1ga0d05bdfec6dd9387c64dd196ec3d880d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getTimeStart</definition>
        <argsstring>(RRHandle handle, double *timeStart)</argsstring>
        <name>getTimeStart</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>timeStart</declname>
        </param>
        <briefdescription>
<para>Get the value of the current time start. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>getTimeStart<sp/>(rrHandle,<sp/>&amp;timeStart);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">timeStart</parametername>
</parameternamelist>
<parameterdescription>
<para>The current value for the time start </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="603" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="603" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1ga83a02783c6a1c48eb05eafce742972cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getTimeEnd</definition>
        <argsstring>(RRHandle handle, double *timeEnd)</argsstring>
        <name>getTimeEnd</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>timeEnd</declname>
        </param>
        <briefdescription>
<para>Get the value of the current time end. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>getTimeEnd<sp/>(rrHandle,<sp/>&amp;timeEnd);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeEnd</parametername>
</parameternamelist>
<parameterdescription>
<para>The current value for the time end </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="612" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="612" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1gaaa761b3be4a3348a60c7ae7083d57947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getNumPoints</definition>
        <argsstring>(RRHandle handle, int *numPoints)</argsstring>
        <name>getNumPoints</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
<para>Get the value of the current number of points. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>getNumPoints<sp/>(rrHandle,<sp/>&amp;numberOfPoints);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>The current value for the number of points </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="621" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="621" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1ga61cca45bb48776d12f5bcc52d0c77e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setTimeCourseSelectionList</definition>
        <argsstring>(RRHandle handle, const char *list)</argsstring>
        <name>setTimeCourseSelectionList</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Set the selection list for output from simulate(void) or simulateEx(void) </para>
        </briefdescription>
        <detaileddescription>
<para>Use getAvailableTimeCourseSymbols(void) to retrieve the list of all possible symbols.</para>
<para>Example:<programlisting><codeline><highlight class="normal">setTimeCourseSelectionList<sp/>(&quot;Time,<sp/>S1,<sp/>J1,<sp/>J2&quot;);<sp/></highlight></codeline>
</programlisting></para>
<para>or</para>
<para>setTimeCourseSelectionList (&quot;Time S1 J1 J2&quot;)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>A string of Ids separated by spaces <bold>or</bold> comma characters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="630" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="630" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1gab58d3101cad36a26f0d421e64cf0d0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getTimeCourseSelectionList</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getTimeCourseSelectionList</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the current selection list for simulate(void) or simulateEx(void) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of symbol Ids indicating the current selection list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="640" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="640" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1ga9ac99f6909eb0a6244035fc9cdeff94d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>RRCDataPtr rrcCallConv rrc::simulate</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>simulate</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Carry out a time-course simulation. setTimeStart, setTimeEnd, setNumPoints, etc are used to set the simulation characteristics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the results of the simulation including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="667" column="24" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="667" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1ga4e4e8ef75ba20f2ad989a4c2188b3a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::simulateNoReturn</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>simulateNoReturn</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Carry out a time-course simulation. setTimeStart, setTimeEnd, setNumPoints, etc are used to set the simulation characteristics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the results of the simulation including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="676" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="676" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1ga12a2129f06507eafbace57a8612cc600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>RRCDataPtr rrcCallConv rrc::simulateEx</definition>
        <argsstring>(RRHandle handle, const double timeStart, const double timeEnd, const int numberOfPoints)</argsstring>
        <name>simulateEx</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeStart</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeEnd</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numberOfPoints</declname>
        </param>
        <briefdescription>
<para>Carry out a time-course simulation based on the given arguments, time start, time end and number of points. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal">RRCDataPtr<sp/>m;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">double<sp/>timeStart<sp/>=<sp/>0.0;</highlight></codeline>
<codeline><highlight class="normal">double<sp/>timeEnd<sp/>=<sp/>25;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>numberOfPoints<sp/>=<sp/>200;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">m<sp/>=<sp/>simulateEx<sp/>(rrHandle,<sp/>timeStart,<sp/>timeEnd,<sp/>numberOfPoints);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeStart</parametername>
</parameternamelist>
<parameterdescription>
<para>Time start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeEnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Time end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numberOfPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to generate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the results of the simulation including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="685" column="24" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="685" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1gad4a0c2c01b4cd8b65fbdea3459aa7768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::simulateExNoReturn</definition>
        <argsstring>(RRHandle handle, const double timeStart, const double timeEnd, const int numberOfPoints)</argsstring>
        <name>simulateExNoReturn</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeStart</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timeEnd</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numberOfPoints</declname>
        </param>
        <briefdescription>
<para>Carry out a time-course simulation based on the given arguments, time start, time end and number of points, but do not return results. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal">RRCDataPtr<sp/>m;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">double<sp/>timeStart<sp/>=<sp/>0.0;</highlight></codeline>
<codeline><highlight class="normal">double<sp/>timeEnd<sp/>=<sp/>25;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>numberOfPoints<sp/>=<sp/>200;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">m<sp/>=<sp/>simulateEx<sp/>(rrHandle,<sp/>timeStart,<sp/>timeEnd,<sp/>numberOfPoints);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeStart</parametername>
</parameternamelist>
<parameterdescription>
<para>Time start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeEnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Time end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numberOfPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to generate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the results of the simulation including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="695" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="695" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1gabf0748e0e5a62fe441a28d33badc5014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>RRCDataPtr rrcCallConv rrc::simulateTimes</definition>
        <argsstring>(RRHandle handle, const double *times, int size)</argsstring>
        <name>simulateTimes</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>times</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Carry out a time-course simulation based on the given arguments, time start, time end and number of points. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal">RRCDataPtr<sp/>m;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">double[4]<sp/>times<sp/>=<sp/>{0,<sp/>1,<sp/>5,<sp/>10};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">m<sp/>=<sp/>simulateTimes<sp/>(rrHandle,<sp/>times,<sp/>4);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">times</parametername>
</parameternamelist>
<parameterdescription>
<para>array of time points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of time point array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the results of the simulation including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="705" column="24" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="705" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1gaa52283eaebe340a4a39cc4900441be93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>RRCDataPtr rrcCallConv rrc::getSimulationResult</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getSimulationResult</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the result of the last simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the results of the simulation including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="713" column="24" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="713" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1gac8574ccef28db153428153c3f5abd516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref> rrcCallConv</type>
        <definition>RRHandle rrcCallConv rrc::getSimulationResultAsDoubleMatrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getSimulationResultAsDoubleMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the result of the last simulation as a DoubleMatrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a pointer (RRHandle) containing the results of the simulation. The pointer is <emphasis>not</emphasis> owned by the caller. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="724" column="22" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="724" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="group__reaction_1ga893427e9bcf19edb7742fd7a40bde89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getReactionIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getReactionIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of reaction Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a pointer to a RRStringArrayPtr struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="735" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="735" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="group__rateOfChange_1gad6f6fb8bf6b5e05b6337ec3c802709b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::getRatesOfChange</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getRatesOfChange</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the vector of rates of change as determined by the current state of the model. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">values<sp/>=<sp/>getRatesOfChange<sp/>(RRHandle<sp/>handle);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a vector of rates of change values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="749" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="749" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="group__rateOfChange_1gaba7873ab3d30fc5b84bc3a901dcca811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getRatesOfChangeIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getRatesOfChangeIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the string list of rates of change Ids. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">Ids<sp/>=<sp/>getRatesOfChangeIds<sp/>(RRHandle<sp/>handle);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a list of rates of change Ids </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="764" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="764" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga27848ea67739637339d1c240c3d54a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getUnscaledElasticityMatrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getUnscaledElasticityMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the unscaled elasticity matrix for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns nil if it fails, otherwise returns a matrix of unscaled elasticities </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="779" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="779" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga4b3e243893115cba0c1d20aa5b207343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getScaledElasticityMatrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getScaledElasticityMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the scaled elasticity matrix for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a matrix of scaled elasticities. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="789" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="789" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="group__state_1ga6ff35b4282c583424f4d5708330012b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getValue</definition>
        <argsstring>(RRHandle handle, const char *symbolId, double *value)</argsstring>
        <name>getValue</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>symbolId</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get the value for a given symbol, use getAvailableTimeCourseSymbols(void) for a list of symbols. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>getValue<sp/>(rrHandle,<sp/>&quot;S1&quot;,<sp/>&amp;value);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbolId</parametername>
</parameternamelist>
<parameterdescription>
<para>The symbol that we wish to obtain the value for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that will be retrieved </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="799" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="799" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="group__state_1gab8416894a99ef18924c1a719be4521f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setValue</definition>
        <argsstring>(RRHandle handle, const char *symbolId, const double value)</argsstring>
        <name>setValue</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>symbolId</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the value for a given symbol, use getAvailableTimeCourseSymbols(void) for a list of symbols. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>setValue<sp/>(rrHandle,<sp/>&quot;S1&quot;,<sp/>0.5);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbolId</parametername>
</parameternamelist>
<parameterdescription>
<para>The symbol that we wish to set the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that will be set to the symbol </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="808" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="808" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a88a810fe6f1210191633fc4f126dcf68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double rrcCallConv</type>
        <definition>double rrcCallConv rrc::_getTime</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>_getTime</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the time for getsteadyvectorrate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="818" column="20" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="818" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1afb2c260d8afb76a095665852f0d27592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::_getNumIndFloatingSpecies</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>_getNumIndFloatingSpecies</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of floating species pointed by the model by handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="826" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="826" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a4deb17a319f18b144a5e06743cb5ce87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::_getStateVector</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>_getStateVector</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>getsteadyvectorrate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="834" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="834" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a9420dc8df19dcf1cff059dd0a5cea7f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void rrcCallConv</type>
        <definition>void rrcCallConv rrc::_getStateVectorRate</definition>
        <argsstring>(RRHandle handle, double time, double *value)</argsstring>
        <name>_getStateVectorRate</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>getsteadyvectorrate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="842" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="842" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a0b522fa59b6e8f4d34e2e52627d7372f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::_getNumRateRules</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>_getNumRateRules</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of rate rules pointed by the model by handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="850" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="850" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="group__Stoich_1ga162f8d37e89e83e5e14cee87c02f89f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getStoichiometryMatrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getStoichiometryMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the stoichiometry matrix for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns the stoichiometry matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="858" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="858" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="group__Stoich_1gab253411012b1974cf831970034453aef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getConservationMatrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getConservationMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the conservation matrix for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para>The conservation laws as describe by row where the columns indicate the species Id.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns the conservation matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="867" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="867" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="group__Stoich_1gad42abf401bcd8f7bbe9255d6013b512b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getLinkMatrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getLinkMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the Link matrix for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns the Link matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="890" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="890" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="group__Stoich_1ga6f7995e073044c3e1767c9eda148e0c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getNrMatrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNrMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the reduced stoichiometry matrix for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns reduced stoichiometry matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="899" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="899" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="group__errorfunctions_1ga5ff7d55f1f52b72f5f17a687c0c361fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC bool rrcCallConv</type>
        <definition>C_DECL_SPEC bool rrcCallConv rrc::hasError</definition>
        <argsstring>()</argsstring>
        <name>hasError</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if there is an error string to retrieve. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: status = hasError (void)</para>
<para><simplesect kind="return"><para>Returns true if there is an error waiting to be retrieved </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="908" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="908" bodyend="911"/>
      </memberdef>
      <memberdef kind="function" id="group__errorfunctions_1gaa698640f13467d87966d8b90f0c3944c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getLastError</definition>
        <argsstring>()</argsstring>
        <name>getLastError</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve the current error string. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">str<sp/>=<sp/>getLastError<sp/>(void);<sp/></highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Return null if fails, otherwise returns a pointer to the error string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="913" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="913" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="group__reaction_1gaaa9941b7cba362c4098feedb02b047a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumberOfReactions</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNumberOfReactions</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the number of reactions in the loaded model. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">number<sp/>=<sp/>getNumberOfReactions<sp/>(RRHandle<sp/>handle);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns -1 if it fails, if successful it return 0 or more, indicating the number of reactions </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="922" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="922" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="group__reaction_1ga6fbbae97760afea7cc74e26e2cb74926" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getReactionRate</definition>
        <argsstring>(RRHandle handle, const int rateNr, double *value)</argsstring>
        <name>getReactionRate</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>index</declname>
          <defname>rateNr</defname>
        </param>
        <param>
          <type>double *</type>
          <declname>rate</declname>
          <defname>value</defname>
        </param>
        <briefdescription>
<para>Retrieve a give reaction rate as indicated by the index parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>- The index is used to specify which reaction rate to retrieve </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>- The reaction rate is returned in the rate argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="930" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="930" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="group__reaction_1gae0d748f8af83914cc078f8728d67ed0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::getReactionRates</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getReactionRates</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve a vector of reaction rates as determined by the current state of the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise it returns a vector of reaction rates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="939" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="939" bodyend="947"/>
      </memberdef>
      <memberdef kind="function" id="group__boundary_1ga7baf198510082275b3648b5691dd16b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumberOfBoundarySpecies</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNumberOfBoundarySpecies</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Returns the number of boundary species in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="949" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="949" bodyend="955"/>
      </memberdef>
      <memberdef kind="function" id="group__boundary_1ga31cfec3f7179f15a44eead1d45564a7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getBoundarySpeciesIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getBoundarySpeciesIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of boundary species Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a pointer to a RRStringArrayPtr struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="957" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="957" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="group__boundary_1ga1dd9b776439e7b3e9ea157ade596dc59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getBoundarySpeciesConcentrationIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getBoundarySpeciesConcentrationIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of boundary species concentration Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a pointer to a RRStringArrayPtr struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="972" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="972" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1gab520e3bf495d490a96c5ee19870e7691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumberOfFloatingSpecies</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNumberOfFloatingSpecies</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Returns the number of floating species in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="988" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="988" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1gadfa89aaae617d977977469f3c8e0efae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getFloatingSpeciesIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getFloatingSpeciesIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of floating species Id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a pointer to a RRStringArrayPtr struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="996" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="996" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1ga304ece1521b22d92207a21f2fdbec762" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getDependentFloatingSpeciesIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getDependentFloatingSpeciesIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of dependent floating species Id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a pointer to a RRStringArrayPtr struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1011" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1011" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1gaee454ea04ad28c0ada4cbf0ecd36e1cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getIndependentFloatingSpeciesIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getIndependentFloatingSpeciesIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of independent floating species Id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a pointer to a RRStringArrayPtr struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1027" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1027" bodyend="1040"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1gaefe22d500854d4fe991c0435f80c3b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getFloatingSpeciesConcentrationIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getFloatingSpeciesConcentrationIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of floating species concentrations Id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a pointer to a RRStringArrayPtr struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1043" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1043" bodyend="1056"/>
      </memberdef>
      <memberdef kind="function" id="group__parameters_1ga430bad38724b6db3feea39b31231e85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumberOfGlobalParameters</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNumberOfGlobalParameters</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Returns the number of global parameters in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1059" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1059" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="group__parameters_1ga0ad560fd0b56ac0c36eff2db996b40cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getGlobalParameterIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getGlobalParameterIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of global parameter Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a pointer to a RRStringArrayPtr struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1067" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1067" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1ga7dcf8267460ec9fec7559194ed7e7e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getFloatingSpeciesInitialConcentrationByIndex</definition>
        <argsstring>(RRHandle handle, int index, double *value)</argsstring>
        <name>getFloatingSpeciesInitialConcentrationByIndex</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get the initial concentration for a particular floating species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to the floating species (corresponds to position in <ref refid="group__floating_1gadfa89aaae617d977977469f3c8e0efae" kindref="member">getFloatingSpeciesIds(RRHandle handle)</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The concentration of the species </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1082" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1082" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1ga0659eab040dbdfde46b9fc73b46b65d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::getFloatingSpeciesConcentrations</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getFloatingSpeciesConcentrations</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve in a vector the concentrations for all the floating species. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">RRVectorPtr<sp/>values<sp/>=<sp/>getFloatingSpeciesConcentrations<sp/>(void);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the vector of floating species concentrations or null if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1096" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1096" bodyend="1104"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1ga2ff2c4bb6d0ddd59ed3509e7c97c1d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::getFloatingSpeciesAmounts</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getFloatingSpeciesAmounts</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve in a vector the amounts for all the floating species. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">RRVectorPtr<sp/>values<sp/>=<sp/>getFloatingSpeciesAmounts<sp/>(void);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the vector of floating species amounts or null if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1106" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1106" bodyend="1114"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1gaae615fabbce13e12e0d9ea7819058258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrCallConv</type>
        <definition>RRVectorPtr rrCallConv rrc::getIndependentFloatingSpeciesConcentrations</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getIndependentFloatingSpeciesConcentrations</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve in a vector the concentrations of all the independent floating species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the vector of independent floating species concentrations or null if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1116" column="24" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1116" bodyend="1124"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1ga905515a94795a8e28cb40c449af7f768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrCallConv</type>
        <definition>RRVectorPtr rrCallConv rrc::getDependentFloatingSpeciesConcentrations</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getDependentFloatingSpeciesConcentrations</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve in a vector the concentrations of all the dependent floating species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the vector of dependent floating species concentrations or null if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1126" column="24" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1126" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1ga1f04e7b81463fbdbc33ca28766fbfeda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrCallConv</type>
        <definition>RRVectorPtr rrCallConv rrc::getIndependentFloatingSpeciesAmounts</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getIndependentFloatingSpeciesAmounts</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve in a vector the amounts of all the independent floating species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the vector of independent floating species amounts or null if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1136" column="24" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1136" bodyend="1144"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1ga6339401a2e44739bef33c332b38fc15a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrCallConv</type>
        <definition>RRVectorPtr rrCallConv rrc::getDependentFloatingSpeciesAmounts</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getDependentFloatingSpeciesAmounts</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve in a vector the amounts of all the dependent floating species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the vector of dependent floating species amounts or null if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1146" column="24" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1146" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="group__boundary_1gaa36e026ba8f7488c7a57e96c0471763b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::getBoundarySpeciesConcentrations</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getBoundarySpeciesConcentrations</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the concentrations for all the boundary species in a vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">RRVectorPtr<sp/>values<sp/>=<sp/>getBoundarySpeciesConcentrations<sp/>(void);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the vector of boundary species concentrations or null if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1156" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1156" bodyend="1164"/>
      </memberdef>
      <memberdef kind="function" id="group__boundary_1ga33ee65078c2e09dfa9e68342064544c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::getBoundarySpeciesAmounts</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getBoundarySpeciesAmounts</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the amounts for all the boundary species in a vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">RRVectorPtr<sp/>values<sp/>=<sp/>getBoundarySpeciesAmounts<sp/>(void);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the vector of boundary species amounts or null if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1166" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1166" bodyend="1174"/>
      </memberdef>
      <memberdef kind="function" id="group__initialConditions_1ga69c0a516f028a0608d8b9167ff56111f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::getFloatingSpeciesInitialConcentrations</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getFloatingSpeciesInitialConcentrations</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the initial floating species concentrations. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">vec<sp/>=<sp/>getFloatingSpeciesInitialConcentrations<sp/>(RRHandle<sp/>handle);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails otherwise returns a vector containing the initial conditions </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1176" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1176" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1ga892e70470a45d8be4e443c6048064c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setFloatingSpeciesByIndex</definition>
        <argsstring>(RRHandle handle, const int index, const double value)</argsstring>
        <name>setFloatingSpeciesByIndex</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the concentration for a particular floating species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to the floating species (corresponds to position in <ref refid="group__floating_1gadfa89aaae617d977977469f3c8e0efae" kindref="member">getFloatingSpeciesIds(RRHandle handle)</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The concentration of the species to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1186" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1186" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="group__boundary_1ga12e16a139a2f3d77a8cda20518e21b18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setBoundarySpeciesByIndex</definition>
        <argsstring>(RRHandle handle, const unsigned int index, const double value)</argsstring>
        <name>setBoundarySpeciesByIndex</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the concentration for a particular boundary species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to the boundary species (corresponds to position in getBoundarySpeciesIds(void)) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The concentration of the species to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1195" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1195" bodyend="1202"/>
      </memberdef>
      <memberdef kind="function" id="group__parameters_1ga3f4d3739191a328326e0de1f7c07334a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setGlobalParameterByIndex</definition>
        <argsstring>(RRHandle handle, const int index, const double value)</argsstring>
        <name>setGlobalParameterByIndex</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the value for a particular global parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to the global parameter (corresponds to position in <ref refid="group__parameters_1ga0ad560fd0b56ac0c36eff2db996b40cb" kindref="member">getGlobalParameterIds(RRHandle handle)</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the parameter to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1204" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1204" bodyend="1211"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1ga1a86710f9772e7a7072aa7de264b0c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setFloatingSpeciesInitialConcentrationByIndex</definition>
        <argsstring>(RRHandle handle, const int index, const double value)</argsstring>
        <name>setFloatingSpeciesInitialConcentrationByIndex</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the initial concentration for a particular floating species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to the floating species (corresponds to position in <ref refid="group__floating_1gadfa89aaae617d977977469f3c8e0efae" kindref="member">getFloatingSpeciesIds(RRHandle handle)</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The concentration of the species to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1213" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1213" bodyend="1220"/>
      </memberdef>
      <memberdef kind="function" id="group__initialConditions_1ga669ae93bd60148aaf48f7105748a551e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setFloatingSpeciesInitialConcentrations</definition>
        <argsstring>(RRHandle handle, const RRVectorPtr vec)</argsstring>
        <name>setFloatingSpeciesInitialConcentrations</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const <ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Set the initial floating species concentrations. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>setFloatingSpeciesInitialConcentrations<sp/>(vec);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of species concentrations: order given by <ref refid="group__floating_1gadfa89aaae617d977977469f3c8e0efae" kindref="member">getFloatingSpeciesIds(RRHandle handle)</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1222" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1222" bodyend="1231"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1gab6bde54c81fa570ab09da91b65e92327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setFloatingSpeciesConcentrations</definition>
        <argsstring>(RRHandle handle, const RRVectorPtr vec)</argsstring>
        <name>setFloatingSpeciesConcentrations</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const <ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Set the floating species concentration to the vector vec. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:</para>
<para><programlisting><codeline><highlight class="normal">myVector<sp/>=<sp/>createVector<sp/>(getNumberOfFloatingSpecies(RRHandle<sp/>handle));</highlight></codeline>
<codeline><highlight class="normal">setVectorElement<sp/>(myVector,<sp/>0,<sp/>1.2);</highlight></codeline>
<codeline><highlight class="normal">setVectorElement<sp/>(myVector,<sp/>1,<sp/>5.7);</highlight></codeline>
<codeline><highlight class="normal">setVectorElement<sp/>(myVector,<sp/>2,<sp/>3.4);</highlight></codeline>
<codeline><highlight class="normal">setFloatingSpeciesConcentrations(myVector);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <ref refid="structRRVector" kindref="compound">RRVector</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1233" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1233" bodyend="1245"/>
      </memberdef>
      <memberdef kind="function" id="group__boundary_1gacc067866a08d07a196d681328b5b3e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setBoundarySpeciesConcentrations</definition>
        <argsstring>(RRHandle handle, const RRVectorPtr vec)</argsstring>
        <name>setBoundarySpeciesConcentrations</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const <ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Set the boundary species concentration to the vector vec. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:</para>
<para><programlisting><codeline><highlight class="normal">myVector<sp/>=<sp/>createVector<sp/>(getNumberOfBoundarySpecies(RRHandle<sp/>handle));</highlight></codeline>
<codeline><highlight class="normal">setVectorElement<sp/>(myVector,<sp/>0,<sp/>1.2);</highlight></codeline>
<codeline><highlight class="normal">setVectorElement<sp/>(myVector,<sp/>1,<sp/>5.7);</highlight></codeline>
<codeline><highlight class="normal">setVectorElement<sp/>(myVector,<sp/>2,<sp/>3.4);</highlight></codeline>
<codeline><highlight class="normal">setBoundarySpeciesConcentrations(myVector);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of boundary species concentrations </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1247" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1247" bodyend="1256"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1ga8f7109b90040ff57b8366c2f1867f066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::oneStep</definition>
        <argsstring>(RRHandle handle, const double currentTime, const double stepSize, double *value)</argsstring>
        <name>oneStep</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>currentTime</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>stepSize</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Carry out a one step integration of the model. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>OneStep<sp/>(rrHandle,<sp/>currentTime,<sp/>stepSize,<sp/>value);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The current time in the simulation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stepSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The step size to use in the integration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new time (currentTime + stepSize)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1258" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1258" bodyend="1265"/>
      </memberdef>
      <memberdef kind="function" id="group__parameters_1ga8786ef7925e23f93be3826e3bc1a7c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::getGlobalParameterValues</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getGlobalParameterValues</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the values for all the global parameter values in a vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">RRVectorPtr<sp/>values<sp/>=<sp/>getGlobalParameterValues<sp/>(void);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the vector of global parameter values or null if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1267" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1267" bodyend="1275"/>
      </memberdef>
      <memberdef kind="function" id="group__state_1ga60829d32710dc201c4103c76214a4bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref> rrcCallConv</type>
        <definition>RRListPtr rrcCallConv rrc::getAvailableTimeCourseSymbols</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getAvailableTimeCourseSymbols</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of all available symbols. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns -1 if it fails, if successful it returns a pointer to a RRListHandle struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1277" column="23" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1277" bodyend="1284"/>
      </memberdef>
      <memberdef kind="function" id="group__state_1gafe7dc6a912c3f97edd20b1e6da61b12c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref> rrcCallConv</type>
        <definition>RRListPtr rrcCallConv rrc::getAvailableSteadyStateSymbols</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getAvailableSteadyStateSymbols</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of all available steady state symbols. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns -1 if it fails, if successful it returns a pointer to a RRListPtr struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1286" column="23" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1286" bodyend="1293"/>
      </memberdef>
      <memberdef kind="function" id="group__boundary_1ga5bdb50a2653fc268731aaba05d7b7377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getBoundarySpeciesByIndex</definition>
        <argsstring>(RRHandle handle, const int index, double *value)</argsstring>
        <name>getBoundarySpeciesByIndex</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve the concentration for a particular floating species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to the boundary species (corresponds to position in <ref refid="group__boundary_1ga31cfec3f7179f15a44eead1d45564a7c" kindref="member">getBoundarySpeciesIds(RRHandle handle)</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value returned by the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1295" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1295" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1gaa5ab4c688801aa88c60bea9c745a8d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getFloatingSpeciesByIndex</definition>
        <argsstring>(RRHandle handle, const int index, double *value)</argsstring>
        <name>getFloatingSpeciesByIndex</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve the concentration for a particular floating species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to the floating species (corresponds to position in <ref refid="group__floating_1gadfa89aaae617d977977469f3c8e0efae" kindref="member">getFloatingSpeciesIds(RRHandle handle)</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value returned by the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1304" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1304" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="group__parameters_1gac2fed7cbeb8f0b2099f72f73de5dac36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getGlobalParameterByIndex</definition>
        <argsstring>(RRHandle handle, const int index, double *value)</argsstring>
        <name>getGlobalParameterByIndex</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve the global parameter value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to the global parameter (corresponds to position in getGlobalParametersIds(RRHandle handle)) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value returned by the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1313" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1313" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1gae9f84e6ea3736a774eecd6e9585299b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getuCC</definition>
        <argsstring>(RRHandle handle, const char *variable, const char *parameter, double *value)</argsstring>
        <name>getuCC</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>variable</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameter</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve a single unscaled control coefficient. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">variable</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the dependent variable of the coefficient, for example a flux or species concentration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the independent parameter, for example a kinetic constant or boundary species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the value of the unscaled control coefficient returns to the caller </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1322" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1322" bodyend="1329"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga186d25721094be37bf8f82dcc2662652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getCC</definition>
        <argsstring>(RRHandle handle, const char *variable, const char *parameter, double *value)</argsstring>
        <name>getCC</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>variable</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameter</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve a single control coefficient. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">variable</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the dependent variable of the coefficient, for example a flux or species concentration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the independent parameter, for example a kinetic constant or boundary species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the value of the control coefficient returns to the caller </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1332" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1332" bodyend="1339"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga472c6e32866d8f9e5612089e022ba197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getDiffStepSize</definition>
        <argsstring>(RRHandle handle, double *value)</argsstring>
        <name>getDiffStepSize</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve the differential step size used in routines such as getCC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the value of the step size returns to the caller </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1341" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1341" bodyend="1348"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga121eae882485864789a0c90804f2a3af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setDiffStepSize</definition>
        <argsstring>(RRHandle handle, const double value)</argsstring>
        <name>setDiffStepSize</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the differential step size used in routines such as getCC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the desired step size value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1350" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1350" bodyend="1357"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga0b1b29ecf19805b173e35ca3388d3deb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getuEE</definition>
        <argsstring>(RRHandle handle, const char *name, const char *species, double *value)</argsstring>
        <name>getuEE</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>species</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve a single unscaled elasticity coefficient. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the reaction variable for the unscaled elasticity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">species</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the independent parameter, for example a floating of boundary species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the value of the unscaled elasticity coefficient returns to the caller </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1359" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1359" bodyend="1366"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga1965125a33ed28f80fbdce867f8bde93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getEE</definition>
        <argsstring>(RRHandle handle, const char *name, const char *species, double *value)</argsstring>
        <name>getEE</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>species</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve a single elasticity coefficient. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the reaction variable for the elasticity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">species</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the independent parameter, for example a floating of boundary species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the value of the elasticity coefficient returns to the caller </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1368" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1368" bodyend="1375"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1ga284f3c15160144a2639f1d3379f7766b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumberOfDependentSpecies</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNumberOfDependentSpecies</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Returns the number of dependent species in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1377" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1377" bodyend="1383"/>
      </memberdef>
      <memberdef kind="function" id="group__floating_1gaf41fdcb9fb98b278742bb5269a317741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumberOfIndependentSpecies</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNumberOfIndependentSpecies</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Returns the number of independent species in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1385" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1385" bodyend="1391"/>
      </memberdef>
      <memberdef kind="function" id="group__steadystate_1gab1db24cab922136cc3a6a57b4bfbf80a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::steadyState</definition>
        <argsstring>(RRHandle handle, double *value)</argsstring>
        <name>steadyState</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compute the steady state of the current model. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>steadyState<sp/>(rrHandle,<sp/>&amp;closenessToSteadyState);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>This value is set during the call and indicates how close the solution is to the steady state. The smaller the value the better. Values less than 1E-6 usually indicate a steady state has been found. If necessary call the method a second time to improve the solution. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1393" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1393" bodyend="1401"/>
      </memberdef>
      <memberdef kind="function" id="group__state_1ga045d3842446954ba06e4010e19a2f1b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::evalModel</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>evalModel</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Evaluate the current model, that it update all assignments and rates of change. Do not carry out an integration step. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1403" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1403" bodyend="1410"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1a658f20bab0d0500579733b4c42647002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getParamPromotedSBML</definition>
        <argsstring>(RRHandle handle, const char *sArg)</argsstring>
        <name>getParamPromotedSBML</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sArg</declname>
        </param>
        <briefdescription>
<para>Promote any local parameters to global status. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine will convert any local reaction parameters and promote them to global status. The promoted parameters are prefixed with the name of the reaction to make them unique.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sArg</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the SBML model to promote </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails otherwise it returns the promoted SBML model as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1412" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1412" bodyend="1420"/>
      </memberdef>
      <memberdef kind="function" id="group__steadystate_1ga808060f5094396e4697434eb5a41f14f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::computeSteadyStateValues</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>computeSteadyStateValues</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>A convenient method for returning a vector of the steady state species concentrations. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">RRVectorHandle<sp/>values<sp/>=<sp/>computeSteadyStateValues<sp/>(void);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the vector of steady state values or null if an error occurred. The order of species in the vector is indicated by the order of species Ids in a call to getFloatingSpeciesIds(void) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1422" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1422" bodyend="1430"/>
      </memberdef>
      <memberdef kind="function" id="group__steadystate_1gaff273d8a9038c411779b206bf58d71eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setSteadyStateSelectionList</definition>
        <argsstring>(RRHandle handle, const char *list)</argsstring>
        <name>setSteadyStateSelectionList</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Set the selection list of the steady state analysis. </para>
        </briefdescription>
        <detaileddescription>
<para>Use getAvailableTimeCourseSymbols(void) to retrieve the list of all possible symbols.</para>
<para>Example:</para>
<para><programlisting><codeline><highlight class="normal">setSteadyStateSelectionList<sp/>(&quot;S1,<sp/>J1,<sp/>J2&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">or</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">setSteadyStateSelectionList<sp/>(&quot;S1<sp/>J1<sp/>J2&quot;)</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>The string argument should be a space separated list of symbols.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1432" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1432" bodyend="1440"/>
      </memberdef>
      <memberdef kind="function" id="group__steadystate_1gaadc456216e3ed8cd9f75c15ac1685616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getSteadyStateSelectionList</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getSteadyStateSelectionList</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the selection list for the steady state analysis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise it returns a list of strings representing symbols in the selection list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1442" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1442" bodyend="1457"/>
      </memberdef>
      <memberdef kind="function" id="group__Stoich_1ga6debd886f8814dec86b8eaa5c9d00a3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getFullJacobian</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getFullJacobian</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the full Jacobian for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns the full Jacobian matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1459" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1459" bodyend="1466"/>
      </memberdef>
      <memberdef kind="function" id="group__Stoich_1ga0f121b1c3787ad8c932174a777a865e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getReducedJacobian</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getReducedJacobian</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the reduced Jacobian for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para>setComputeAndAssignConservationLaws (true) must be enabled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns the reduced Jacobian matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1468" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1468" bodyend="1475"/>
      </memberdef>
      <memberdef kind="function" id="group__Stoich_1ga2f8e012b9cefe206bdbac30f07619613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getEigenvalues</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getEigenvalues</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the eigenvalue matrix for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a matrix of eigenvalues. The first column will contain the real values and the second column the imaginary values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1477" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1477" bodyend="1507"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga92ba42b5fab8b387744eedd03df10b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setCodeGenerationMode</definition>
        <argsstring>(RRHandle handle, int mode)</argsstring>
        <name>setCodeGenerationMode</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set the runtime generation option [Not yet implemented]. </para>
        </briefdescription>
        <detaileddescription>
<para>RoadRunner can either execute a model by generating, compiling and linking self-generated C code or it can employ an internal interpreter to evaluate the model equations. The later method is useful when the OS forbids the compiling of externally generated code.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>is set to 0 RoadRunner generates C Code, if set to 1 RoadRunner uses its internal math interpreter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if it fails, </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1512" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1512" bodyend="1515"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1gaba5b9bdc9edb663e6563e6ce836481ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getScaledFloatingSpeciesElasticity</definition>
        <argsstring>(RRHandle handle, const char *reactionId, const char *speciesId, double *value)</argsstring>
        <name>getScaledFloatingSpeciesElasticity</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>reactionId</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>speciesId</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve the scaled elasticity matrix for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reactionId</parametername>
</parameternamelist>
<parameterdescription>
<para>The reaction Id for computing the elasticity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">speciesId</parametername>
</parameternamelist>
<parameterdescription>
<para>The floating species to compute the elasticity for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The return value for the elasticity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1517" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1517" bodyend="1524"/>
      </memberdef>
      <memberdef kind="function" id="group__initialConditions_1ga1e19db0cfd663b9648f59191afdc64c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getFloatingSpeciesInitialConditionIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getFloatingSpeciesInitialConditionIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the initial floating species Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__initialConditions_1ga205905d483bb876f0557d8b40cba2213" kindref="member">getFloatingSpeciesInitialConcentrationIds</ref> </para>
</xrefdescription></xrefsect>Example:<programlisting><codeline><highlight class="normal">vec<sp/>=<sp/>getFloatingSpeciesInitialConditionIds<sp/>(RRHandle<sp/>handle);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails otherwise returns a vector containing names of the floating species </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1526" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1526" bodyend="1533"/>
      </memberdef>
      <memberdef kind="function" id="group__initialConditions_1ga205905d483bb876f0557d8b40cba2213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getFloatingSpeciesInitialConcentrationIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getFloatingSpeciesInitialConcentrationIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the initial floating species Ids. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">vec<sp/>=<sp/>getFloatingSpeciesInitialConcentrationIds<sp/>(RRHandle<sp/>handle);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails otherwise returns a vector containing names of the floating species </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1535" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1535" bodyend="1542"/>
      </memberdef>
      <memberdef kind="function" id="group__rateOfChange_1ga353516c3b4889b3751e3422cad518c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::getRatesOfChangeEx</definition>
        <argsstring>(RRHandle handle, const RRVectorPtr vec)</argsstring>
        <name>getRatesOfChangeEx</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const <ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Retrieve the vector of rates of change given a vector of floating species concentrations. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">values<sp/>=<sp/>getRatesOfChangeEx<sp/>(vector);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector handle holding rates of change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1544" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1544" bodyend="1554"/>
      </memberdef>
      <memberdef kind="function" id="group__reaction_1ga106854f50f9896130fb77f64f2c5885c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::getReactionRatesEx</definition>
        <argsstring>(RRHandle handle, const RRVectorPtr vec)</argsstring>
        <name>getReactionRatesEx</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const <ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Retrieve a vector of reaction rates given a vector of species concentrations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector of floating species concentrations </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails otherwise it returns a vector of reaction rates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1556" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1556" bodyend="1577"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga344045fc1136134e90c716343ac06f9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref> rrcCallConv</type>
        <definition>RRListPtr rrcCallConv rrc::getElasticityCoefficientIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getElasticityCoefficientIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of elasticity coefficient Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1579" column="23" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1579" bodyend="1587"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1gab33dc5a93e9b17acc184c13846484cca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref> rrcCallConv</type>
        <definition>RRListPtr rrcCallConv rrc::getUnscaledElasticityCoefficientIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getUnscaledElasticityCoefficientIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of unscaled elasticity coefficient Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1589" column="23" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1589" bodyend="1597"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gaa8601a5e07c4ecf51504c93698dd8bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumRegisteredIntegrators</definition>
        <argsstring>()</argsstring>
        <name>getNumRegisteredIntegrators</name>
        <briefdescription>
<para>Get the number of registered integrators. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns an integer that corresponds to the number of currently registered integrators. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1603" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1603" bodyend="1608"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gaa86407653706a5eb35952f8504a14f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getRegisteredIntegratorName</definition>
        <argsstring>(int n)</argsstring>
        <name>getRegisteredIntegratorName</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the name of a registered integrator (e.g. cvode etc.) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the registered integrator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Callee owns memory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1610" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1610" bodyend="1619"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gab198855261c723dc9cda5b020ad4e968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getRegisteredIntegratorHint</definition>
        <argsstring>(int n)</argsstring>
        <name>getRegisteredIntegratorHint</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the hint of a registered integrator (e.g. cvode etc.) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the registered integrator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Callee owns memory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1621" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1621" bodyend="1630"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga6f5e3612ce5b7786fb4beaee24e2ae28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getRegisteredIntegratorDescription</definition>
        <argsstring>(int n)</argsstring>
        <name>getRegisteredIntegratorDescription</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the description of a registered integrator (e.g. cvode etc.) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the registered integrator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Callee owns memory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1632" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1632" bodyend="1641"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga9f53dbde25a049a9bb684d6ce62f4a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumInstantiatedIntegrators</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNumInstantiatedIntegrators</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the number of instantiated integrators. To instantiate an integrator, use <ref refid="group__simopts_1ga03859721af6b184225c5c27469993526" kindref="member">setCurrentIntegrator</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an integer that corresponds to the number of currently registered integrators. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1643" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1643" bodyend="1649"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga03859721af6b184225c5c27469993526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentIntegrator</definition>
        <argsstring>(RRHandle handle, const char *nameOfIntegrator)</argsstring>
        <name>setCurrentIntegrator</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nameOfIntegrator</declname>
        </param>
        <briefdescription>
<para>Specify the current integrator to be used for simulation. This method instantiates a new integrator of the given type (e.g. cvode, gillespie) if one does not currently exist. Otherwise, the existing integrator of this type is used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nameOfIntegrator</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator to be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1651" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1651" bodyend="1666"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gaaf577c92ea41732a71be75bcdb11ad03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentIntegratorName</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getCurrentIntegratorName</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain a description of the current integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a description of the current integrator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1668" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1668" bodyend="1679"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gaaef7c92677683e15435efbf02933bc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentIntegratorDescription</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getCurrentIntegratorDescription</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain a description of the current integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a description of the current integrator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1681" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1681" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga57ee0556b06f18a717a049e80e78c662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentIntegratorHint</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getCurrentIntegratorHint</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain a short hint for the current integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a short hint of the current integrator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1691" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1691" bodyend="1698"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga763ff26ae1a224347c45be95503a5f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumberOfCurrentIntegratorParameters</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNumberOfCurrentIntegratorParameters</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the number of adjustable settings for the current integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an integer that corresponds to the number of adjustable integrator settings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1701" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1701" bodyend="1708"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga767db79a74407436ceadd4f9aed9d2d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentIntegratorNthParameterName</definition>
        <argsstring>(RRHandle handle, int n)</argsstring>
        <name>getCurrentIntegratorNthParameterName</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the name of a parameter of the current integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the parameter (0 &lt;= n &lt; <ref refid="group__simopts_1ga763ff26ae1a224347c45be95503a5f25" kindref="member">getNumberOfCurrentIntegratorParameters</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1711" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1711" bodyend="1718"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga7fb8d8e319fc933326c7f7be85abcc86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentIntegratorNthParameterDisplayName</definition>
        <argsstring>(RRHandle handle, int n)</argsstring>
        <name>getCurrentIntegratorNthParameterDisplayName</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the display name of a parameter of the current integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the parameter (0 &lt;= n &lt; <ref refid="group__simopts_1ga763ff26ae1a224347c45be95503a5f25" kindref="member">getNumberOfCurrentIntegratorParameters</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1721" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1721" bodyend="1728"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga03d3ea3b70051af5ce5b7d9993f3014f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentIntegratorNthParameterHint</definition>
        <argsstring>(RRHandle handle, int n)</argsstring>
        <name>getCurrentIntegratorNthParameterHint</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the hint of a parameter of the current integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the parameter (0 &lt;= n &lt; <ref refid="group__simopts_1ga763ff26ae1a224347c45be95503a5f25" kindref="member">getNumberOfCurrentIntegratorParameters</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1731" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1731" bodyend="1738"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga4592d8b89172a225388305f80fa668bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getCurrentIntegratorNthParameterType</definition>
        <argsstring>(RRHandle handle, int n)</argsstring>
        <name>getCurrentIntegratorNthParameterType</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the type of a parameter of the current integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the parameter (0 &lt;= n &lt; <ref refid="group__simopts_1ga763ff26ae1a224347c45be95503a5f25" kindref="member">getNumberOfCurrentIntegratorParameters</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1741" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1741" bodyend="1747"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gacdb1b250a185069bb9095e5c57d21a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentIntegratorNthParameterDescription</definition>
        <argsstring>(RRHandle handle, int n)</argsstring>
        <name>getCurrentIntegratorNthParameterDescription</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the description of a parameter of the current integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the parameter (0 &lt;= n &lt; <ref refid="group__simopts_1ga763ff26ae1a224347c45be95503a5f25" kindref="member">getNumberOfCurrentIntegratorParameters</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1750" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1750" bodyend="1757"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga205c572e84b6551d3f151e535e4f4e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::resetCurrentIntegratorParameters</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>resetCurrentIntegratorParameters</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Reset the integrator parameters to their default values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1760" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1760" bodyend="1767"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga460b211b03cfa48ed8ba993d7ba64360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getListOfCurrentIntegratorParameterNames</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getListOfCurrentIntegratorParameterNames</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the names of adjustable settings for the current integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a list that contains the names of adjustable integrator settings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1769" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1769" bodyend="1776"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga208ddd31ba6e9587b35589ac3b0b06cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentIntegratorParameterDescription</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentIntegratorParameterDescription</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the description for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a description for the integrator setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1778" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1778" bodyend="1787"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga2b699c02f0dfec8d3c6b139101ccdd0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentIntegratorParameterHint</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentIntegratorParameterHint</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the hint for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a hint for the integrator setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1789" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1789" bodyend="1798"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga994195c39a6b5711ee066d22ff1c40b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getCurrentIntegratorParameterType</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentIntegratorParameterType</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the return type for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a integer that indicates the return type for the integrator setting. 0-STRING, 1-BOOL, 2-INT32, 3-UINT32, 4-INT64, 5-UINT64, 6-FLOAT, 7-DOUBLE, 8-CHAR, 9-UCHAR, 10-EMPTY </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1800" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1800" bodyend="1808"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga213287c567b88a4f3619fdf379f67ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addSpeciesConcentration</definition>
        <argsstring>(RRHandle handle, const char *sid, const char *compartment, double initialConcentration, bool hasOnlySubstanceUnits, bool boundaryCondition)</argsstring>
        <name>addSpeciesConcentration</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>compartment</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initialConcentration</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasOnlySubstanceUnits</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>boundaryCondition</declname>
        </param>
        <briefdescription>
<para>Add a species to the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">compartment</parametername>
</parameternamelist>
<parameterdescription>
<para>Compartment of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialConcentration</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial concentration of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hasOnlySubstanceUnits</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean value indicating whether the species is always considered to be in amounts when used in other formulas. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">boundaryCondition</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean value indicating whether the species is a boundary species. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1814" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1814" bodyend="1821"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gaef2fc31f4dbe5b5d7bd0d76ce6a296ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addSpeciesAmount</definition>
        <argsstring>(RRHandle handle, const char *sid, const char *compartment, double initialAmount, bool hasOnlySubstanceUnits, bool boundaryCondition)</argsstring>
        <name>addSpeciesAmount</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>compartment</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initialAmount</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasOnlySubstanceUnits</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>boundaryCondition</declname>
        </param>
        <briefdescription>
<para>Add a species to the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">compartment</parametername>
</parameternamelist>
<parameterdescription>
<para>Compartment of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialAmount</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial amount of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hasOnlySubstanceUnits</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean value indicating whether the species is always considered to be in amounts when used in other formulas. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">boundaryCondition</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean value indicating whether the species is a boundary species. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1824" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1824" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga48236ef5d127c7b685fd774d879c028a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addSpeciesConcentrationNoRegen</definition>
        <argsstring>(RRHandle handle, const char *sid, const char *compartment, double initialConcentration, bool hasOnlySubstanceUnits, bool boundaryCondition)</argsstring>
        <name>addSpeciesConcentrationNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>compartment</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initialConcentration</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasOnlySubstanceUnits</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>boundaryCondition</declname>
        </param>
        <briefdescription>
<para>Add a species to the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">compartment</parametername>
</parameternamelist>
<parameterdescription>
<para>Compartment of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialConcentration</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial concentration of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hasOnlySubstanceUnits</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean value indicating whether the species is always considered to be in amounts when used in other formulas. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">boundaryCondition</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean value indicating whether the species is a boundary species. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1833" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1833" bodyend="1840"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga6eb04c102f6da7d25d84bd39894d5697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addSpeciesAmountNoRegen</definition>
        <argsstring>(RRHandle handle, const char *sid, const char *compartment, double initialAmount, bool hasOnlySubstanceUnits, bool boundaryCondition)</argsstring>
        <name>addSpeciesAmountNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>compartment</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initialAmount</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasOnlySubstanceUnits</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>boundaryCondition</declname>
        </param>
        <briefdescription>
<para>Add a species to the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">compartment</parametername>
</parameternamelist>
<parameterdescription>
<para>Compartment of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialAmount</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial amount of the species to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hasOnlySubstanceUnits</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean value indicating whether the species is always considered to be in amounts when used in other formulas. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">boundaryCondition</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean value indicating whether the species is a boundary species. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1842" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1842" bodyend="1849"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gaf5ebfc87d97383ffb003897259a21b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeSpecies</definition>
        <argsstring>(RRHandle handle, const char *sid)</argsstring>
        <name>removeSpecies</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <briefdescription>
<para>Remove a species from the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1851" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1851" bodyend="1858"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gaa5476fe243ffdaf0bcbfe66aea494235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeSpeciesNoRegen</definition>
        <argsstring>(RRHandle handle, const char *sid)</argsstring>
        <name>removeSpeciesNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <briefdescription>
<para>Remove a species from the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1860" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1860" bodyend="1867"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga8921bdb73c1e763803e5b09f805d69b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setBoundary</definition>
        <argsstring>(RRHandle handle, const char *sid, bool boundaryCondition)</argsstring>
        <name>setBoundary</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>boundaryCondition</declname>
        </param>
        <briefdescription>
<para>Set the boundary condition of an existing species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">boundaryCondition</parametername>
</parameternamelist>
<parameterdescription>
<para>Boundary condition to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1869" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1869" bodyend="1876"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gab9365d945c1d34faf59d9c5e7a00a82e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setBoundaryNoRegen</definition>
        <argsstring>(RRHandle handle, const char *sid, bool boundaryCondition)</argsstring>
        <name>setBoundaryNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>boundaryCondition</declname>
        </param>
        <briefdescription>
<para>Set the boundary condition of an existing species, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">boundaryCondition</parametername>
</parameternamelist>
<parameterdescription>
<para>Boundary condition to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1878" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1878" bodyend="1885"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga248d8ff19df589804f1c1694ac7e5f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setHasOnlySubstanceUnits</definition>
        <argsstring>(RRHandle handle, const char *sid, bool hasOnlySubstanceUnits)</argsstring>
        <name>setHasOnlySubstanceUnits</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasOnlySubstanceUnits</declname>
        </param>
        <briefdescription>
<para>Set the hasOnlySubstanceUnits attribute for an existing species. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hasOnlySubstanceUnits</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of hasOnlySubstanceUnits attribute to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1887" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1887" bodyend="1894"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga9c7e43b21d3e26b38e66418790d8f3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setHasOnlySubstanceUnitsNoRegen</definition>
        <argsstring>(RRHandle handle, const char *sid, bool hasOnlySubstanceUnits)</argsstring>
        <name>setHasOnlySubstanceUnitsNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasOnlySubstanceUnits</declname>
        </param>
        <briefdescription>
<para>Set the hasOnlySubstanceUnits attribute for an existing species, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hasOnlySubstanceUnits</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of hasOnlySubstanceUnits attribute to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1896" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1896" bodyend="1903"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga9ba3074a869cb39d563ae7d1506af16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setInitAmount</definition>
        <argsstring>(RRHandle handle, const char *sid, double initAmount)</argsstring>
        <name>setInitAmount</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initAmount</declname>
        </param>
        <briefdescription>
<para>Set initial amount for an existing species. Initial amount/concentration set before will be unset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initAmount</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial amount to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1905" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1905" bodyend="1912"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga80abbff53934b6f04a9afacd15473b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setInitAmountNoRegen</definition>
        <argsstring>(RRHandle handle, const char *sid, double initAmount)</argsstring>
        <name>setInitAmountNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initAmount</declname>
        </param>
        <briefdescription>
<para>Set initial amount for an existing species, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initAmount</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial amount to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1914" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1914" bodyend="1921"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga5026531e15978c336b2b4d4abcb2e9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setInitConcentration</definition>
        <argsstring>(RRHandle handle, const char *sid, double initConcentration)</argsstring>
        <name>setInitConcentration</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initConcentration</declname>
        </param>
        <briefdescription>
<para>Set initial concentration for an existing species. Initial amount/concentration set before will be unset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initConcentration</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial concentration to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1923" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1923" bodyend="1930"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gadcd74cac7960af27a524825400a4a742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setInitConcentrationNoRegen</definition>
        <argsstring>(RRHandle handle, const char *sid, double initConcentration)</argsstring>
        <name>setInitConcentrationNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initConcentration</declname>
        </param>
        <briefdescription>
<para>Set initial concentration for an existing species, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initConcentration</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial concentration to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1932" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1932" bodyend="1939"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga6c9b053218414056b281784601620a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setConstant</definition>
        <argsstring>(RRHandle handle, const char *sid, bool constant)</argsstring>
        <name>setConstant</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>constant</declname>
        </param>
        <briefdescription>
<para>Set the constant attribute for an existing species/ parameter/ compartment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species/ parameter/ compartment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">constant</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant attribute to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1941" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1941" bodyend="1948"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga6fbb9c364b89b3d2314abf1a2f51fb18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setConstantNoRegen</definition>
        <argsstring>(RRHandle handle, const char *sid, bool constant)</argsstring>
        <name>setConstantNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>constant</declname>
        </param>
        <briefdescription>
<para>Set the constant attribute for an existing species/ parameter/ compartment, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the species/ parameter/ compartment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">constant</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant attribute to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1950" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1950" bodyend="1957"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga293a05e2160ded1dc93f6b9690fc1a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addReactionFromSBML</definition>
        <argsstring>(RRHandle handle, const char *sbmlRep)</argsstring>
        <name>addReactionFromSBML</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sbmlRep</declname>
        </param>
        <briefdescription>
<para>Add a reaction to the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sbmlRep</parametername>
</parameternamelist>
<parameterdescription>
<para>the SBML representation (i.e. a reaction tag) describing the reaction to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1961" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1961" bodyend="1968"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gadac1a7b790b66943345dfcdf828cc113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addReactionFromSBMLNoRegen</definition>
        <argsstring>(RRHandle handle, const char *sbmlRep)</argsstring>
        <name>addReactionFromSBMLNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sbmlRep</declname>
        </param>
        <briefdescription>
<para>Add a reaction to the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sbmlRep</parametername>
</parameternamelist>
<parameterdescription>
<para>the SBML representation (i.e. a reaction tag) describing the reaction to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1970" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1970" bodyend="1977"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gaa7f6b9bba1b2f0b8b58c8f482996cb45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addReaction</definition>
        <argsstring>(RRHandle handle, const char *rid, const char **reactants, int numReactants, const char **products, int numProducts, const char *kineticLaw)</argsstring>
        <name>addReaction</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rid</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>reactants</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numReactants</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>products</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numProducts</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>kineticLaw</declname>
        </param>
        <briefdescription>
<para>Add a reaction to the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the reaction to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reactants</parametername>
</parameternamelist>
<parameterdescription>
<para>List of reactants ID of reaction to be added, double value could be inserted before ID as stoichiometry </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numReactants</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of reactants of reaction to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">products</parametername>
</parameternamelist>
<parameterdescription>
<para>List of products ID of reaction to be added, double value could be inserted before ID as stoichiometry </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numProducts</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of products of reaction to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kineticLaw</parametername>
</parameternamelist>
<parameterdescription>
<para>kinetic formular of reaction to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1979" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1979" bodyend="1989"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga1fa5c6e3d14d7f3365c2dceb65d99dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addReactionNoRegen</definition>
        <argsstring>(RRHandle handle, const char *rid, const char **reactants, int numReactants, const char **products, int numProducts, const char *kineticLaw)</argsstring>
        <name>addReactionNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rid</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>reactants</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numReactants</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>products</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numProducts</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>kineticLaw</declname>
        </param>
        <briefdescription>
<para>Add a reaction to the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the reaction to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reactants</parametername>
</parameternamelist>
<parameterdescription>
<para>List of reactants ID of reaction to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numReactants</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of reactants of reaction to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">products</parametername>
</parameternamelist>
<parameterdescription>
<para>List of products ID of reaction to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numProducts</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of products of reaction to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kineticLaw</parametername>
</parameternamelist>
<parameterdescription>
<para>kinetic formular of reaction to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="1991" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="1991" bodyend="2001"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga18bb32c66077d71a3b9cd9b811c3e0c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeReaction</definition>
        <argsstring>(RRHandle handle, const char *rid)</argsstring>
        <name>removeReaction</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rid</declname>
        </param>
        <briefdescription>
<para>Remove a reaction from the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the reaction to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2003" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2003" bodyend="2010"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga47763245848a18dd12875537dabdcaa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeReactionNoRegen</definition>
        <argsstring>(RRHandle handle, const char *rid)</argsstring>
        <name>removeReactionNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rid</declname>
        </param>
        <briefdescription>
<para>Remove a reaction from the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the reaction to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2012" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2012" bodyend="2019"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga2b076cf359d49f90b45166de827f5d0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setReversible</definition>
        <argsstring>(RRHandle handle, const char *rid, bool reversible)</argsstring>
        <name>setReversible</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reversible</declname>
        </param>
        <briefdescription>
<para>Set the reversible attribut for an existing reaction in the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rid</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of reaction to be modified </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reversible</parametername>
</parameternamelist>
<parameterdescription>
<para>Reversible attribute to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2022" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2022" bodyend="2029"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga381bd92c722f99592f023ee9638b1acd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setReversibleNoRegen</definition>
        <argsstring>(RRHandle handle, const char *rid, bool reversible)</argsstring>
        <name>setReversibleNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reversible</declname>
        </param>
        <briefdescription>
<para>Set the reversible attribut for an existing reaction in the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of reaction to be modified </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reversible</parametername>
</parameternamelist>
<parameterdescription>
<para>Reversible attribute to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2031" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2031" bodyend="2038"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga65af700ff39d9a62c478223c682bb820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setKineticLaw</definition>
        <argsstring>(RRHandle handle, const char *rid, const char *kineticLaw)</argsstring>
        <name>setKineticLaw</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>kineticLaw</declname>
        </param>
        <briefdescription>
<para>Set the kinetic law for a existing reaction in the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of reaction to be modified </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kineticLaw</parametername>
</parameternamelist>
<parameterdescription>
<para>the kinetic formular of reaction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2040" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2040" bodyend="2047"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga13a6acbdb848b6eb8f5bbd1cdd6b5da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setKineticLawNoRegen</definition>
        <argsstring>(RRHandle handle, const char *rid, const char *kineticLaw)</argsstring>
        <name>setKineticLawNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>kineticLaw</declname>
        </param>
        <briefdescription>
<para>Set the kinetic law for a existing reaction in the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of reaction to be modified </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kineticLaw</parametername>
</parameternamelist>
<parameterdescription>
<para>the kinetic formular of reaction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2049" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2049" bodyend="2056"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gadbf20490f39ce700b719dc17810f186e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC char *rrcCallConv</type>
        <definition>C_DECL_SPEC char* rrcCallConv rrc::getKineticLaw</definition>
        <argsstring>(RRHandle handle, const char *rid)</argsstring>
        <name>getKineticLaw</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rid</declname>
        </param>
        <briefdescription>
<para>Get the kinetic law for a existing reaction in the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of reaction to be modified </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the kinetic law. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2058" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2058" bodyend="2066"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gacfd1209c0b382d7b6a6f2b3515e5db34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addParameter</definition>
        <argsstring>(RRHandle handle, const char *pid, double value)</argsstring>
        <name>addParameter</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Add a parameter to the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the parameter to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the parameter to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2068" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2068" bodyend="2075"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga4f437dc218d90dbee5ceb7d4da81a6fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addParameterNoRegen</definition>
        <argsstring>(RRHandle handle, const char *pid, double value)</argsstring>
        <name>addParameterNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Add a parameter to the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the parameter to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the parameter to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2077" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2077" bodyend="2084"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gac7df3bdfc5e286c38d8c01083c7758ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeParameter</definition>
        <argsstring>(RRHandle handle, const char *pid)</argsstring>
        <name>removeParameter</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Remove a parameter from the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the parameter to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2087" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2087" bodyend="2094"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga0d02f47a521474e66796e6dc61315d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeParameterNoRegen</definition>
        <argsstring>(RRHandle handle, const char *pid)</argsstring>
        <name>removeParameterNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Remove a parameter from the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the parameter to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2096" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2096" bodyend="2103"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga7c977e3f0f4ce6bc995a8da3cad7a3ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addCompartment</definition>
        <argsstring>(RRHandle handle, const char *cid, double initVolume)</argsstring>
        <name>addCompartment</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initVolume</declname>
        </param>
        <briefdescription>
<para>Add a compartment to the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the compartment to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initVolume</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial volume of the compartment to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2105" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2105" bodyend="2112"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gabaf4d71079e13cfe0230c17f4852c999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addCompartmentNoRegen</definition>
        <argsstring>(RRHandle handle, const char *cid, double initVolume)</argsstring>
        <name>addCompartmentNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initVolume</declname>
        </param>
        <briefdescription>
<para>Add a compartment to the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the compartment to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initVolume</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial volume of the compartment to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2114" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2114" bodyend="2121"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gaf8605b6f7b39d858088ba4e19397432b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeCompartment</definition>
        <argsstring>(RRHandle handle, const char *cid)</argsstring>
        <name>removeCompartment</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Remove a compartment from the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the compartment to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2123" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2123" bodyend="2130"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gafaed1396ad11b33059bb3ce43d366437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeCompartmentNoRegen</definition>
        <argsstring>(RRHandle handle, const char *cid)</argsstring>
        <name>removeCompartmentNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Remove a compartment from the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the compartment to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2132" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2132" bodyend="2139"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1afe5a19864a5d3d3b5d247e93a7252d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addInitialAssignment</definition>
        <argsstring>(RRHandle handle, char *vid, char *formula, bool forceRegenerate)</argsstring>
        <name>addInitialAssignment</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>vid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>formula</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceRegenerate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2141" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2141" bodyend="2148"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gabbe9164c7a231ec1897b499fde57c575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addAssignmentRule</definition>
        <argsstring>(RRHandle handle, const char *vid, const char *formula)</argsstring>
        <name>addAssignmentRule</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>formula</declname>
        </param>
        <briefdescription>
<para>Add an assignment rule to the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of variable that rules assigns formula to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">formula</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula of assignment rule to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2151" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2151" bodyend="2158"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga1587edf0539fbe8e8c1eeab7649817fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addAssignmentRuleNoRegen</definition>
        <argsstring>(RRHandle handle, const char *vid, const char *formula)</argsstring>
        <name>addAssignmentRuleNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>formula</declname>
        </param>
        <briefdescription>
<para>Add an assignment rule to the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of variable that rules assigns formula to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">formula</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula of assignment rule to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2160" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2160" bodyend="2167"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga6d307cf036da117093ce7c12a1bbac12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addRateRule</definition>
        <argsstring>(RRHandle handle, const char *vid, const char *formula)</argsstring>
        <name>addRateRule</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>formula</declname>
        </param>
        <briefdescription>
<para>Add a rate rule to the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of variable that rules assigns formula to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">formula</parametername>
</parameternamelist>
<parameterdescription>
<para>the he math formula of rate rule to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2169" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2169" bodyend="2176"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gaa976a37b5ae524589962a2e221bd5494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addRateRuleNoRegen</definition>
        <argsstring>(RRHandle handle, const char *vid, const char *formula)</argsstring>
        <name>addRateRuleNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>formula</declname>
        </param>
        <briefdescription>
<para>Add a rate rule to the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of variable that rules assigns formula to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">formula</parametername>
</parameternamelist>
<parameterdescription>
<para>the he math formula of rate rule to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2178" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2178" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gacdcdce22857ccd8b1b50b23e9bb87a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeRules</definition>
        <argsstring>(RRHandle handle, const char *vid)</argsstring>
        <name>removeRules</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vid</declname>
        </param>
        <briefdescription>
<para>Remove rules related to given variable from the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of variable that rules assigns formula to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2187" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2187" bodyend="2194"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga3e9e96480b844f89f7747ff393296e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeRulesNoRegen</definition>
        <argsstring>(RRHandle handle, const char *vid)</argsstring>
        <name>removeRulesNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vid</declname>
        </param>
        <briefdescription>
<para>Remove rules related to given variable from the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of variable that rules assigns formula to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2196" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2196" bodyend="2203"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga422f646318432c53e55a21023d0a1c6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addEvent</definition>
        <argsstring>(RRHandle handle, const char *eid, bool useValuesFromTriggerTime, const char *trigger)</argsstring>
        <name>addEvent</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useValuesFromTriggerTime</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
<para>Add an event to the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">useValuesFromTriggerTime</parametername>
</parameternamelist>
<parameterdescription>
<para>indicate the moment at which the event�s assignments are to be evaluated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula of event trigger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2205" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2205" bodyend="2212"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga8ab641b74a9c41f4acc279743f3cbea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addEventNoRegen</definition>
        <argsstring>(RRHandle handle, const char *eid, bool useValuesFromTriggerTime, const char *trigger)</argsstring>
        <name>addEventNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useValuesFromTriggerTime</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
<para>Add an event to the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to be added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">useValuesFromTriggerTime</parametername>
</parameternamelist>
<parameterdescription>
<para>indicate the moment at which the event�s assignments are to be evaluated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula of event trigger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2214" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2214" bodyend="2221"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gab37b31b061870deec86b90d66957597f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addTrigger</definition>
        <argsstring>(RRHandle handle, const char *eid, const char *trigger)</argsstring>
        <name>addTrigger</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
<para>Add trigger to an existing event in the model If the given event already has a trigger object, the given trigger will replace the old trigger in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to add trigger </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula of event trigger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2223" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2223" bodyend="2230"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga4c96ec4c2ceaed371f66ea3ded851b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addTriggerNoRegen</definition>
        <argsstring>(RRHandle handle, const char *eid, const char *trigger)</argsstring>
        <name>addTriggerNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
<para>Add trigger to an existing event in the model, without regenerating it The last modification must regenerate for the modifications to take effect If the given event already has a trigger object, the given trigger will replace the old trigger in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to add trigger </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula of event trigger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2232" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2232" bodyend="2239"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga63c76df048f9f101192fd246a477b009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setPersistent</definition>
        <argsstring>(RRHandle handle, const char *eid, bool persistent)</argsstring>
        <name>setPersistent</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>persistent</declname>
        </param>
        <briefdescription>
<para>Set the persistent attribute of the trigger of given event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event of the trigger </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">persistent</parametername>
</parameternamelist>
<parameterdescription>
<para>Persistent attribute to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2241" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2241" bodyend="2248"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gae14f71e017601ee6e0318b500b86737d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setPersistentNoRegen</definition>
        <argsstring>(RRHandle handle, const char *eid, bool persistent)</argsstring>
        <name>setPersistentNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>persistent</declname>
        </param>
        <briefdescription>
<para>Set the persistent attribute of the trigger of given event, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event of the trigger </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">persistent</parametername>
</parameternamelist>
<parameterdescription>
<para>Persistent attribute to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2250" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2250" bodyend="2257"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gaced895f2114902810f012e9fe9802585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setTriggerInitialValue</definition>
        <argsstring>(RRHandle handle, const char *eid, bool initValue)</argsstring>
        <name>setTriggerInitialValue</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initValue</declname>
        </param>
        <briefdescription>
<para>Set the initial value attribute of the trigger of given event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event of the trigger </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value attribute to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2259" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2259" bodyend="2266"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga85761d21e4b36832b9aa9c92eaf2b96a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setTriggerInitialValueNoRegen</definition>
        <argsstring>(RRHandle handle, const char *eid, bool initValue)</argsstring>
        <name>setTriggerInitialValueNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initValue</declname>
        </param>
        <briefdescription>
<para>Set the initial value attribute of the trigger of given event, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event of the trigger </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value attribute to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2268" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2268" bodyend="2275"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga711302f1fd5c858986d3dfc1dc08b1b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addPriority</definition>
        <argsstring>(RRHandle handle, const char *eid, const char *priority)</argsstring>
        <name>addPriority</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>Add priority to an existing event in the model If the given event already has a priority object, the given priority will replace the old priority in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to add priority </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula of event priority </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2279" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2279" bodyend="2286"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga474febd50aafbafcf28a527c02eb7379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addPriorityNoRegen</definition>
        <argsstring>(RRHandle handle, const char *eid, const char *priority)</argsstring>
        <name>addPriorityNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>Add priority to an existing event in the model, without regenerating it The last modification must regenerate for the modifications to take effect If the given event already has a priority object, the given priority will replace the old priority in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to add priority </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula of event priority </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2288" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2288" bodyend="2295"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gad8bb54099f75e3c008876b814d637b51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addDelay</definition>
        <argsstring>(RRHandle handle, const char *eid, const char *delay)</argsstring>
        <name>addDelay</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>Add delay to an existing event in the model If the given event already has a delay object, the given delay will replace the old delay in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to add delay </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">delay</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula of event delay </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2298" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2298" bodyend="2305"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga4071a87f536f73010a975e176008b341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addDelayNoRegen</definition>
        <argsstring>(RRHandle handle, const char *eid, const char *delay)</argsstring>
        <name>addDelayNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>Add delay to an existing event in the model, without regenerating it The last modification must regenerate for the modifications to take effect If the given event already has a delay object, the given delay will replace the old delay in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to add delay </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">delay</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula of event delay </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2307" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2307" bodyend="2314"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gaa0de38be452631012b064cb9bb1e33e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addEventAssignment</definition>
        <argsstring>(RRHandle handle, const char *eid, const char *vid, const char *formula)</argsstring>
        <name>addEventAssignment</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>formula</declname>
        </param>
        <briefdescription>
<para>Add an event assignment to an existing event in the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to add assignment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vid</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the variable to assign formula </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">formula</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula to assign </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2316" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2316" bodyend="2323"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga4732dfe59580be7767a15cc46cecfeac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::addEventAssignmentNoRegen</definition>
        <argsstring>(RRHandle handle, const char *eid, const char *vid, const char *formula)</argsstring>
        <name>addEventAssignmentNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>formula</declname>
        </param>
        <briefdescription>
<para>Add an event assignment to an existing event in the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to add assignment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vid</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the variable to assign formula </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">formula</parametername>
</parameternamelist>
<parameterdescription>
<para>the math formula to assign </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2325" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2325" bodyend="2332"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga0b3a2c5332a40b9c48ff95af3bfe3e4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeEventAssignments</definition>
        <argsstring>(RRHandle handle, const char *eid, const char *vid)</argsstring>
        <name>removeEventAssignments</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vid</declname>
        </param>
        <briefdescription>
<para>Remove event assignments for given variable from an existing event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vid</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the variable of the event assignments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2334" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2334" bodyend="2341"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga1c270f6f8e51a359b4b82ccecba79204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeEventAssignmentsNoRegen</definition>
        <argsstring>(RRHandle handle, const char *eid, const char *vid)</argsstring>
        <name>removeEventAssignmentsNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vid</declname>
        </param>
        <briefdescription>
<para>Remove event assignments for given variable from an existing event, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vid</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the variable of the event assignments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2343" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2343" bodyend="2350"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gafa104b283510299c93d7c869de763342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeEvent</definition>
        <argsstring>(RRHandle handle, const char *eid)</argsstring>
        <name>removeEvent</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <briefdescription>
<para>Remove an event from the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2352" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2352" bodyend="2359"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga322382e2cb2e35312cd4a88ceee906a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::removeEventsNoRegen</definition>
        <argsstring>(RRHandle handle, const char *eid)</argsstring>
        <name>removeEventsNoRegen</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eid</declname>
        </param>
        <briefdescription>
<para>Remove an event from the current model, without regenerating it The last modification must regenerate for the modifications to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the event to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2361" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2361" bodyend="2368"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1gae8d120bbf287b0879707510d1df86328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::regenerate</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>regenerate</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>After a model has been edited, it needs to be compiled. Call regenerate to recompile a model so that it is ready for use. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the call fails, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2370" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2370" bodyend="2377"/>
      </memberdef>
      <memberdef kind="function" id="group__edit_1ga63e642abda6ec0756781e159be5d3010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::validateCurrentSBML</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>validateCurrentSBML</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Validate the current SBML file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if the current SBML file is not valid, otherwise returns a true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2380" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2380" bodyend="2387"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga213e8eef897ae66c9b056f16eea0a627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getCurrentIntegratorParameterInt</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentIntegratorParameterInt</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the integer value for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an integer value for the integrator setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2394" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2394" bodyend="2402"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga6f22352b5f0e7c3387443314d64e11a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentIntegratorParameterInt</definition>
        <argsstring>(RRHandle handle, const char *parameterName, int value)</argsstring>
        <name>setCurrentIntegratorParameterInt</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the integer value for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value for the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2404" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2404" bodyend="2413"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga917a877643c486f36b8990cd1d4e4cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int rrcCallConv</type>
        <definition>unsigned int rrcCallConv rrc::getCurrentIntegratorParameterUInt</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentIntegratorParameterUInt</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the unsigned integer value for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an integer value for the integrator setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2415" column="26" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2415" bodyend="2423"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga6c9b94cd06de1df1f9cbd23552c0086e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentIntegratorParameterUInt</definition>
        <argsstring>(RRHandle handle, const char *parameterName, unsigned int value)</argsstring>
        <name>setCurrentIntegratorParameterUInt</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the unsigned integer value for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value for the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2425" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2425" bodyend="2434"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gae1a665a2397be6e44deed8f12c06a086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double rrcCallConv</type>
        <definition>double rrcCallConv rrc::getCurrentIntegratorParameterDouble</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentIntegratorParameterDouble</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the double value for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a double value for the integrator setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2436" column="20" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2436" bodyend="2444"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga3c19bbec9a976296bd303c478a49faca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentIntegratorParameterDouble</definition>
        <argsstring>(RRHandle handle, const char *parameterName, double value)</argsstring>
        <name>setCurrentIntegratorParameterDouble</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the double value for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value for the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2446" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2446" bodyend="2455"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gadc3d282328e0f7e3fbdb774edeb0a85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentIntegratorParameterString</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentIntegratorParameterString</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the string value for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a string value for the integrator setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2458" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2458" bodyend="2467"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga00ede917db32c969afdf1cf6cdba5e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentIntegratorParameterString</definition>
        <argsstring>(RRHandle handle, const char *parameterName, const char *value)</argsstring>
        <name>setCurrentIntegratorParameterString</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the string value for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value for the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2470" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2470" bodyend="2479"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga10253c662c0fc3209c03eddd18b17189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getCurrentIntegratorParameterBoolean</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentIntegratorParameterBoolean</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the boolean value for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a boolean value for the integrator setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2482" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2482" bodyend="2490"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga9fafd1ec59dd2166482cada57a228907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentIntegratorParameterBoolean</definition>
        <argsstring>(RRHandle handle, const char *parameterName, int value)</argsstring>
        <name>setCurrentIntegratorParameterBoolean</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the boolean value for a specific integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The boolean value for the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2493" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2493" bodyend="2502"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga8975486b773796272ae4df1f7d8d170a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getCurrentIntegratorParameterDoubleArray</definition>
        <argsstring>(RRHandle handle, const char *parameterName, double **value, int *len)</argsstring>
        <name>getCurrentIntegratorParameterDoubleArray</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Get the double array value for a specific integrator setting. Should only used for absoluate tolerace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Return the values as in this double array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Return the length double array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2505" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2505" bodyend="2523"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga7b6c15875d590f7ef0260bf1fb1979a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentIntegratorParameterDoubleArray</definition>
        <argsstring>(RRHandle handle, const char *parameterName, double *value, int len)</argsstring>
        <name>setCurrentIntegratorParameterDoubleArray</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Set the double array value for a specific integrator setting. Should only used for absoluate tolerace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the integrator setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double array value for the integrator setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of given soubld array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2526" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2526" bodyend="2536"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gac90890da4fa7088236e8088abe88546f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentIntegratorIndividualTolerance</definition>
        <argsstring>(RRHandle handle, const char *sid, double value)</argsstring>
        <name>setCurrentIntegratorIndividualTolerance</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the double array value for a specific integrator setting. Should only used for absoluate tolerace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sid</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the tolerance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double array value for the integrator setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2538" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2538" bodyend="2547"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga6fbf99a4844ffce08d85315d4b6c78a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumRegisteredSteadyStateSolvers</definition>
        <argsstring>()</argsstring>
        <name>getNumRegisteredSteadyStateSolvers</name>
        <briefdescription>
<para>Get the number of registered steady state solvers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns an integer that corresponds to the number of currently registered steady state solvers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2553" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2553" bodyend="2558"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gacd18e95822cd00ebf8a8b8c309c124eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getRegisteredSteadyStateSolverName</definition>
        <argsstring>(int n)</argsstring>
        <name>getRegisteredSteadyStateSolverName</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the name of a registered steady state solver (e.g. cvode etc.) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the registered steady state solver </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Callee owns memory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2560" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2560" bodyend="2569"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga52e63c80df1fe65bf546577244643a5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getRegisteredSteadyStateSolverHint</definition>
        <argsstring>(int n)</argsstring>
        <name>getRegisteredSteadyStateSolverHint</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the hint of a registered steady state solver (e.g. cvode etc.) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the registered steady state solver </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Callee owns memory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2571" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2571" bodyend="2580"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga401234c2b03f0d581719b70be3bb37aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getRegisteredSteadyStateSolverDescription</definition>
        <argsstring>(int n)</argsstring>
        <name>getRegisteredSteadyStateSolverDescription</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the description of a registered steady state solver (e.g. cvode etc.) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the registered steady state solver </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Callee owns memory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2582" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2582" bodyend="2591"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga9c4768bbd5a8434983a859e7a1970569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentSteadyStateSolver</definition>
        <argsstring>(RRHandle handle, const char *nameOfSteadyStateSolver)</argsstring>
        <name>setCurrentSteadyStateSolver</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nameOfSteadyStateSolver</declname>
        </param>
        <briefdescription>
<para>Specify the current steady state solver to be used for simulation. This method instantiates a new steady state solver of the given type (e.g. cvode, gillespie) if one does not currently exist. Otherwise, the existing steady state solver of this type is used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nameOfSteadyStateSolver</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver to be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2593" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2593" bodyend="2608"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga72f7974f9fa5be30b5ed59cab276fdc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentSteadyStateSolverName</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getCurrentSteadyStateSolverName</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain a description of the current steady state solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a description of the current steady state solver. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2610" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2610" bodyend="2621"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gad7885eabfff420f2199160a8b14b85dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentSteadyStateSolverDescription</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getCurrentSteadyStateSolverDescription</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain a description of the current steady state solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a description of the current steady state solver. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2623" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2623" bodyend="2630"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga4aa73e5a1e3d68676070ab90db9063fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentSteadyStateSolverHint</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getCurrentSteadyStateSolverHint</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain a short hint for the current steady state solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a short hint of the current steady state solver. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2633" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2633" bodyend="2640"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga23844d07340f60b3a6ab27ad8a9ee310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumberOfCurrentSteadyStateSolverParameters</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNumberOfCurrentSteadyStateSolverParameters</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the number of adjustable settings for the current steady state solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an integer that corresponds to the number of adjustable steady state solver settings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2643" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2643" bodyend="2650"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gad50210ebf997ceb3b18ee10b4cc9c710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentSteadyStateSolverNthParameterName</definition>
        <argsstring>(RRHandle handle, int n)</argsstring>
        <name>getCurrentSteadyStateSolverNthParameterName</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the name of a parameter of the current steady state solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the parameter (0 &lt;= n &lt; <ref refid="group__simopts_1ga23844d07340f60b3a6ab27ad8a9ee310" kindref="member">getNumberOfCurrentSteadyStateSolverParameters</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2653" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2653" bodyend="2660"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga47763c7b38d01d9e3270e4ed62174f87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentSteadyStateSolverNthParameterHint</definition>
        <argsstring>(RRHandle handle, int n)</argsstring>
        <name>getCurrentSteadyStateSolverNthParameterHint</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the hint of a parameter of the current steady state solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the parameter (0 &lt;= n &lt; <ref refid="group__simopts_1ga23844d07340f60b3a6ab27ad8a9ee310" kindref="member">getNumberOfCurrentSteadyStateSolverParameters</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2663" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2663" bodyend="2670"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga69e42b48d6cd2347e27a6f3327d025e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getCurrentSteadyStateSolverNthParameterType</definition>
        <argsstring>(RRHandle handle, int n)</argsstring>
        <name>getCurrentSteadyStateSolverNthParameterType</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the type of a parameter of the current steady state solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the parameter (0 &lt;= n &lt; <ref refid="group__simopts_1ga23844d07340f60b3a6ab27ad8a9ee310" kindref="member">getNumberOfCurrentSteadyStateSolverParameters</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2673" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2673" bodyend="2679"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gaf6a6e5288a6f8b58f41737825046d24e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentSteadyStateSolverNthParameterDisplayName</definition>
        <argsstring>(RRHandle handle, int n)</argsstring>
        <name>getCurrentSteadyStateSolverNthParameterDisplayName</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the display name of a parameter of the current steady state solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the parameter (0 &lt;= n &lt; <ref refid="group__simopts_1ga23844d07340f60b3a6ab27ad8a9ee310" kindref="member">getNumberOfCurrentSteadyStateSolverParameters</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2682" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2682" bodyend="2689"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga05dd029c5b8c15de5e2d4afe76eb292a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentSteadyStateSolverNthParameterDescription</definition>
        <argsstring>(RRHandle handle, int n)</argsstring>
        <name>getCurrentSteadyStateSolverNthParameterDescription</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the description of a parameter of the current steady state solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the parameter (0 &lt;= n &lt; <ref refid="group__simopts_1ga23844d07340f60b3a6ab27ad8a9ee310" kindref="member">getNumberOfCurrentSteadyStateSolverParameters</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2692" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2692" bodyend="2699"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga4118f6921374a739a1c70bbdd62fb369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::resetCurrentSteadyStateSolverParameters</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>resetCurrentSteadyStateSolverParameters</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Reset the steady state solver parameters to their default values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2702" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2702" bodyend="2709"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gac4968483656eaaa849126406ca6ad385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *rrcCallConv</type>
        <definition>const char* rrcCallConv rrc::solverTypeToString</definition>
        <argsstring>(int code)</argsstring>
        <name>solverTypeToString</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Get a string description of the type [STATIC MEMORY - DO NOT FREE] Can call on return value of e.g. <ref refid="group__simopts_1ga69e42b48d6cd2347e27a6f3327d025e3" kindref="member">getCurrentSteadyStateSolverNthParameterType</ref> to retrieve human-readable string representation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">code</parametername>
</parameternamelist>
<parameterdescription>
<para>Type code for the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2712" column="24" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2712" bodyend="2740"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gaf64c105a0d97615c35c20fa3c914d02f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getListOfCurrentSteadyStateSolverParameterNames</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getListOfCurrentSteadyStateSolverParameterNames</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the names of adjustable settings for the current steady state solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a list that contains the names of adjustable steady state solver settings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2742" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2742" bodyend="2749"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gae4391215387abc3c42904baa80fc6dab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentSteadyStateSolverParameterDescription</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentSteadyStateSolverParameterDescription</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the description for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a description for the steady state solver setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2751" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2751" bodyend="2760"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga96d0f7c969a3bb1531e45e22b6ac03aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentSteadyStateSolverParameterHint</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentSteadyStateSolverParameterHint</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the hint for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a hint for the steady state solver setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2762" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2762" bodyend="2771"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gac019d29e6ecca6fc03e3e8655c3b8d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getCurrentSteadyStateSolverParameterType</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentSteadyStateSolverParameterType</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the return type for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a integer that indicates the return type for the steady state solver setting. 0-STRING, 1-BOOL, 2-INT32, 3-UINT32, 4-INT64, 5-UINT64, 6-FLOAT, 7-DOUBLE, 8-CHAR, 9-UCHAR, 10-EMPTY </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2773" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2773" bodyend="2781"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga68f9fd611c92985e64032f33c2113abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getCurrentSteadyStateSolverParameterInt</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentSteadyStateSolverParameterInt</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the integer value for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an integer value for the steady state solver setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2787" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2787" bodyend="2795"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gaca6074f20bb8153c68434e01ca816e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentSteadyStateSolverParameterInt</definition>
        <argsstring>(RRHandle handle, const char *parameterName, int value)</argsstring>
        <name>setCurrentSteadyStateSolverParameterInt</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the integer value for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value for the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2797" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2797" bodyend="2806"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gaa1054e2ca39435ddbbd58404cd27b168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int rrcCallConv</type>
        <definition>unsigned int rrcCallConv rrc::getCurrentSteadyStateSolverParameterUInt</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentSteadyStateSolverParameterUInt</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the unsigned integer value for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an integer value for the steady state solver setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2808" column="26" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2808" bodyend="2816"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gabf3c2ce7c29a811c7820990105d6930e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentSteadyStateSolverParameterUInt</definition>
        <argsstring>(RRHandle handle, const char *parameterName, unsigned int value)</argsstring>
        <name>setCurrentSteadyStateSolverParameterUInt</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the unsigned integer value for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value for the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2818" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2818" bodyend="2827"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga8b3f6e055847ea87ce3c7293b7811198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double rrcCallConv</type>
        <definition>double rrcCallConv rrc::getCurrentSteadyStateSolverParameterDouble</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentSteadyStateSolverParameterDouble</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the double value for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a double value for the steady state solver setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2829" column="20" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2829" bodyend="2837"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga892908646abb69b7c66515f2c5d4876d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentSteadyStateSolverParameterDouble</definition>
        <argsstring>(RRHandle handle, const char *parameterName, double value)</argsstring>
        <name>setCurrentSteadyStateSolverParameterDouble</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the double value for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value for the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2839" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2839" bodyend="2848"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gabf43324e8fa464a080627fb2b1f33266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getCurrentSteadyStateSolverParameterString</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentSteadyStateSolverParameterString</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the string value for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a string value for the steady state solver setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2851" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2851" bodyend="2860"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1gab78a4576072dfd77426d8b945e5a6d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentSteadyStateSolverParameterString</definition>
        <argsstring>(RRHandle handle, const char *parameterName, const char *value)</argsstring>
        <name>setCurrentSteadyStateSolverParameterString</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the string value for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value for the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2863" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2863" bodyend="2872"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga37f8d24be664edd3f3cb3815e511d743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getCurrentSteadyStateSolverParameterBoolean</definition>
        <argsstring>(RRHandle handle, const char *parameterName)</argsstring>
        <name>getCurrentSteadyStateSolverParameterBoolean</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <briefdescription>
<para>Get the boolean value for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a boolean value for the steady state solver setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2875" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2875" bodyend="2883"/>
      </memberdef>
      <memberdef kind="function" id="group__simopts_1ga0f6eb9daee5a9476c5f6b3c1b185bb28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setCurrentSteadyStateSolverParameterBoolean</definition>
        <argsstring>(RRHandle handle, const char *parameterName, int value)</argsstring>
        <name>setCurrentSteadyStateSolverParameterBoolean</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the boolean value for a specific steady state solver setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The boolean value for the steady state solver setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2886" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2886" bodyend="2895"/>
      </memberdef>
      <memberdef kind="function" id="group__state_1ga37cb4ffafece558c4b6f1af4e53667b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getEigenvalueIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getEigenvalueIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of eigenvalue Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns -1 if it fails, if successful it returns a pointer to a RRStringArrayPtr struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2899" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2899" bodyend="2906"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga3031fcbb6954adaa81ac6f8574c5dc33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref> rrcCallConv</type>
        <definition>RRListPtr rrcCallConv rrc::getFluxControlCoefficientIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getFluxControlCoefficientIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of flux control coefficient Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a list of Ids </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2908" column="23" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2908" bodyend="2914"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga98eca56a5da7035bcf55bce9fbed1e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getUnscaledConcentrationControlCoefficientMatrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getUnscaledConcentrationControlCoefficientMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the matrix of unscaled concentration control coefficients for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a matrix of unscaled concentration control coefficients The first column will contain the real values and the second column the imaginary values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2916" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2916" bodyend="2923"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1gaea6b9bb323f08262796f3c82a71b43c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getScaledConcentrationControlCoefficientMatrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getScaledConcentrationControlCoefficientMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the matrix of scaled concentration control coefficients for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a matrix of scaled concentration control coefficients </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2925" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2925" bodyend="2932"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga50d5f6aabac3cd1801c471845b191297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getUnscaledFluxControlCoefficientMatrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getUnscaledFluxControlCoefficientMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the matrix of unscaled flux control coefficients for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a matrix of unscaled flux control coefficients </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2934" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2934" bodyend="2941"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga72cf127d1cc36b55786c2700fc53182b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getScaledFluxControlCoefficientMatrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getScaledFluxControlCoefficientMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the matrix of scaled flux control coefficients for the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a matrix of scaled flux control coefficients </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2943" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2943" bodyend="2950"/>
      </memberdef>
      <memberdef kind="function" id="rrc__api_8cpp_1ab71a8ab2ecf72e51227336f77e5fd044" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArrayList</type>
        <definition>static ArrayList rrc::RoadRunner_getUnscaledFluxControlCoefficientIds</definition>
        <argsstring>(RoadRunner *rr)</argsstring>
        <name>RoadRunner_getUnscaledFluxControlCoefficientIds</name>
        <param>
          <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2952" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2952" bodyend="2989"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1gaaaf6b7d6da161d1a64fea9e0ce9c2843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref> rrcCallConv</type>
        <definition>RRListPtr rrcCallConv rrc::getUnscaledFluxControlCoefficientIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getUnscaledFluxControlCoefficientIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of unscaled flux control coefficient Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a list of Ids </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="2991" column="23" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="2991" bodyend="2998"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga5d09e5709cba8b6496f3df5a17915c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structRRList" kindref="compound">RRList</ref> *rrcCallConv</type>
        <definition>RRList* rrcCallConv rrc::getConcentrationControlCoefficientIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getConcentrationControlCoefficientIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of concentration coefficient Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a list of Ids </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3000" column="20" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3000" bodyend="3007"/>
      </memberdef>
      <memberdef kind="function" id="group__mca_1ga869f3496c8a786a1af0018cf9a98ec16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref> rrcCallConv</type>
        <definition>RRListPtr rrcCallConv rrc::getUnscaledConcentrationControlCoefficientIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getUnscaledConcentrationControlCoefficientIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of unscaled concentration control coefficient Ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, if successful it returns a list of Ids </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3009" column="23" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3009" bodyend="3015"/>
      </memberdef>
      <memberdef kind="function" id="group__compartment_1gadb42e920ac63aa0b1b6d6a6a9c6fd504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumberOfCompartments</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNumberOfCompartments</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Returns the number of compartments in the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns number of compartments </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3017" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3017" bodyend="3023"/>
      </memberdef>
      <memberdef kind="function" id="group__compartment_1ga4ed76bba681918dd733c0857c160c2cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getCompartmentByIndex</definition>
        <argsstring>(RRHandle handle, const int index, double *value)</argsstring>
        <name>getCompartmentByIndex</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve the compartment volume for a particular compartment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to the compartment (corresponds to position in <ref refid="group__compartment_1ga319aa6ee06a7150d35c87f8ed2c9ab8a" kindref="member">getCompartmentIds(RRHandle handle)</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value returned by the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3025" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3025" bodyend="3032"/>
      </memberdef>
      <memberdef kind="function" id="group__compartment_1ga8baaf727b28d0acc9fdb90ae5682e4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setCompartmentByIndex</definition>
        <argsstring>(RRHandle handle, const int index, const double value)</argsstring>
        <name>setCompartmentByIndex</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the volume for a particular compartment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to the compartment (corresponds to position in <ref refid="group__compartment_1ga319aa6ee06a7150d35c87f8ed2c9ab8a" kindref="member">getCompartmentIds(RRHandle handle)</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The volume of the compartment to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3034" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3034" bodyend="3041"/>
      </memberdef>
      <memberdef kind="function" id="group__compartment_1ga319aa6ee06a7150d35c87f8ed2c9ab8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getCompartmentIds</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getCompartmentIds</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Obtain the list of compartment Ids. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">str<sp/>=<sp/>getCompartmentIds<sp/>(RRHandle<sp/>handle);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns -1 if it fails, if successful it returns a pointer to a RRStringArrayPtr struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3043" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3043" bodyend="3049"/>
      </memberdef>
      <memberdef kind="function" id="group__rateOfChange_1gacf4b39414587f2d4a51c8f90d7c4a571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::getRateOfChange</definition>
        <argsstring>(RRHandle handle, const int index, double *value)</argsstring>
        <name>getRateOfChange</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <defname>index</defname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve the rate of change for a given floating species. </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>getRateOfChange<sp/>(&amp;index,<sp/>*value);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to double, holding the rate of change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if it fails, otherwise value contains the rate of change. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3051" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3051" bodyend="3058"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1gacf6956b3e7546fce03a36d3e52301358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getBuildDate</definition>
        <argsstring>()</argsstring>
        <name>getBuildDate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve the current build date of the library. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns null if it fails, otherwise it returns the build date </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3060" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3060" bodyend="3063"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga27b6009b7b7f8de5445787ad839a0246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getBuildTime</definition>
        <argsstring>()</argsstring>
        <name>getBuildTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve the current build time (HH:MM:SS) of the library. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns null if it fails, otherwise it returns the build time </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3065" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3065" bodyend="3068"/>
      </memberdef>
      <memberdef kind="function" id="group__utility_1ga372decc8acef5346f330148594844f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getBuildDateTime</definition>
        <argsstring>()</argsstring>
        <name>getBuildDateTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve the current build date + time of the library. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns null if it fails, otherwise it returns the build date + time </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3070" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3070" bodyend="3073"/>
      </memberdef>
      <memberdef kind="function" id="group__initialization_1gae0b2f65464742bba3beb0ad38dcdd863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::freeRRInstance</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>freeRRInstance</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Free the roadRunner instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3075" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3075" bodyend="3083"/>
      </memberdef>
      <memberdef kind="function" id="group__stochastic_1ga7f5813153b9ea59a30cbc2cdfbdedffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC bool rrcCallConv</type>
        <definition>C_DECL_SPEC bool rrcCallConv rrc::getSeed</definition>
        <argsstring>(RRHandle h, long *result)</argsstring>
        <name>getSeed</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
          <defname>h</defname>
        </param>
        <param>
          <type>long *</type>
          <declname>seed</declname>
          <defname>result</defname>
        </param>
        <briefdescription>
<para>Determine the current seed used by the random generator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">seed</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the value of the current seed, returned to the caller </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3413" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3413" bodyend="3421"/>
      </memberdef>
      <memberdef kind="function" id="group__stochastic_1gaa694837d219e6fd8c55183ad5aa05910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC bool rrcCallConv</type>
        <definition>C_DECL_SPEC bool rrcCallConv rrc::setSeed</definition>
        <argsstring>(RRHandle h, long result)</argsstring>
        <name>setSeed</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
          <defname>h</defname>
        </param>
        <param>
          <type>long</type>
          <declname>seed</declname>
          <defname>result</defname>
        </param>
        <briefdescription>
<para>Set the current seed used by the random generator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">seed</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the value the caller will set the seed to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3423" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3423" bodyend="3442"/>
      </memberdef>
      <memberdef kind="function" id="group__stochastic_1gaeaf09f5ac0fcf9df24ccb0e62c82703e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC <ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>C_DECL_SPEC RRCDataPtr rrcCallConv rrc::gillespie</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>gillespie</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Carry out a time-course simulation using the Gillespie algorithm with variable step size. setTimeStart, setTimeEnd, etc are used to set the simulation characteristics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the results of the simulation including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3444" column="36" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3444" bodyend="3455"/>
      </memberdef>
      <memberdef kind="function" id="group__stochastic_1ga90d4504aafacfdc2148bedbde8b84823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC <ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>C_DECL_SPEC RRCDataPtr rrcCallConv rrc::gillespieEx</definition>
        <argsstring>(RRHandle handle, double timeStart, double timeEnd)</argsstring>
        <name>gillespieEx</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeStart</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeEnd</declname>
        </param>
        <briefdescription>
<para>Carry out a time-course simulation using the Gillespie algorithm based on the given arguments, time start, time end and number of points. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal">RRCDataPtr<sp/>m;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">double<sp/>timeStart<sp/>=<sp/>0.0;</highlight></codeline>
<codeline><highlight class="normal">double<sp/>timeEnd<sp/>=<sp/>25;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">m<sp/>=<sp/>gillespieEx<sp/>(rrHandle,<sp/>timeStart,<sp/>timeEnd);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeStart</parametername>
</parameternamelist>
<parameterdescription>
<para>Time start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeEnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Time end </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the results of the simulation including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3457" column="36" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3457" bodyend="3463"/>
      </memberdef>
      <memberdef kind="function" id="group__stochastic_1ga2177740637e6d6732621c7cded0dbba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC <ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>C_DECL_SPEC RRCDataPtr rrcCallConv rrc::gillespieOnGrid</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>gillespieOnGrid</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Carry out a time-course simulation using the Gillespie algorithm with fixed step size. setTimeStart, setTimeEnd, setNumPoints, etc are used to set the simulation characteristics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the results of the simulation including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3465" column="36" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3465" bodyend="3476"/>
      </memberdef>
      <memberdef kind="function" id="group__stochastic_1gabedfc117be6781c6caca54ecc74561ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC <ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>C_DECL_SPEC RRCDataPtr rrcCallConv rrc::gillespieOnGridEx</definition>
        <argsstring>(RRHandle handle, double timeStart, double timeEnd, int numberOfPoints)</argsstring>
        <name>gillespieOnGridEx</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeStart</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeEnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfPoints</declname>
        </param>
        <briefdescription>
<para>Carry out a time-course simulation using the Gillespie algorithm with fixed step size based on the given arguments, time start, time end, and number of points. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal">RRCDataPtr<sp/>m;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">double<sp/>timeStart<sp/>=<sp/>0.0;</highlight></codeline>
<codeline><highlight class="normal">double<sp/>timeEnd<sp/>=<sp/>25;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>numberOfPoints<sp/>=<sp/>200;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">m<sp/>=<sp/>gillespieOnGridEx<sp/>(rrHandle,<sp/>timeStart,<sp/>timeEnd,<sp/>numberOfPoints);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeStart</parametername>
</parameternamelist>
<parameterdescription>
<para>Time start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeEnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Time end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numberOfPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Fixed number of points to generate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the results of the simulation including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3478" column="36" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3478" bodyend="3485"/>
      </memberdef>
      <memberdef kind="function" id="group__stochastic_1ga3f887a483162b0eed518be4faec411d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC <ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>C_DECL_SPEC RRCDataPtr rrcCallConv rrc::gillespieMeanOnGrid</definition>
        <argsstring>(RRHandle handle, int numberOfSimulations)</argsstring>
        <name>gillespieMeanOnGrid</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfSimulations</declname>
        </param>
        <briefdescription>
<para>Carry out a series of time-course simulations using the Gillespie algorithm with fixed step size, then return the average of the simulations. setTimeStart, setTimeEnd, setNumPoints, etc are used to set the simulation characteristics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numberOfSimulations</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of simulations to perform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the average of the results of the simulations including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3487" column="36" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3487" bodyend="3544"/>
      </memberdef>
      <memberdef kind="function" id="group__stochastic_1ga984a669536f489f257335903ce54469c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC <ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>C_DECL_SPEC RRCDataPtr rrcCallConv rrc::gillespieMeanOnGridEx</definition>
        <argsstring>(RRHandle handle, double timeStart, double timeEnd, int numberOfPoints, int numberOfSimulations)</argsstring>
        <name>gillespieMeanOnGridEx</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeStart</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeEnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfPoints</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfSimulations</declname>
        </param>
        <briefdescription>
<para>Carry out a series of time-course simulations using the Gillespie algorithm with fixed step size, then return the average of the simulations. Based on the given arguments, time start, time end, and number of points. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal">RRCDataPtr<sp/>m;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">double<sp/>timeStart<sp/>=<sp/>0.0;</highlight></codeline>
<codeline><highlight class="normal">double<sp/>timeEnd<sp/>=<sp/>25;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>numberOfPoints<sp/>=<sp/>200;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>numberOfSimulations<sp/>=<sp/>10;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">m<sp/>=<sp/>gillespieMeanOnGridEx<sp/>(rrHandle,<sp/>timeStart,<sp/>timeEnd,<sp/>numberOfPoints,<sp/>numberOfSimulations);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeStart</parametername>
</parameternamelist>
<parameterdescription>
<para>Time start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeEnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Time end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numberOfPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Fixed number of points to generate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numberOfSimulations</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of simulations to perform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the average of the results of the simulation including string labels for the individual columns. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3546" column="36" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3546" bodyend="3553"/>
      </memberdef>
      <memberdef kind="function" id="group__stochastic_1ga4caaa9e174e6b9065524e7cdc56fabb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC <ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>C_DECL_SPEC RRCDataPtr rrcCallConv rrc::gillespieMeanSDOnGrid</definition>
        <argsstring>(RRHandle handle, int numberOfSimulations)</argsstring>
        <name>gillespieMeanSDOnGrid</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfSimulations</declname>
        </param>
        <briefdescription>
<para>Carry out a series of time-course simulations using the Gillespie algorithm with fixed step size, then return the average and standard deviation of the simulations. setTimeStart, setTimeEnd, setNumPoints, etc are used to set the simulation characteristics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numberOfSimulations</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of simulations to perform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the average of the results of the simulations including string labels for the individual columns. The averages are in Data and the standard deviations are in Weights. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3555" column="36" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3555" bodyend="3618"/>
      </memberdef>
      <memberdef kind="function" id="group__stochastic_1ga11f181f858ccff7015069b6479772024" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC <ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref> rrcCallConv</type>
        <definition>C_DECL_SPEC RRCDataPtr rrcCallConv rrc::gillespieMeanSDOnGridEx</definition>
        <argsstring>(RRHandle handle, double timeStart, double timeEnd, int numberOfPoints, int numberOfSimulations)</argsstring>
        <name>gillespieMeanSDOnGridEx</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeStart</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeEnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfSteps</declname>
          <defname>numberOfPoints</defname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfSimulations</declname>
        </param>
        <briefdescription>
<para>Carry out a series of time-course simulations using the Gillespie algorithm with fixed step size, then return the average and standard deviation of the simulations. Based on the given arguments, time start, time end, number of points, and number of simulations. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal">RRCDataPtr<sp/>m;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">double<sp/>timeStart<sp/>=<sp/>0.0;</highlight></codeline>
<codeline><highlight class="normal">double<sp/>timeEnd<sp/>=<sp/>25;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>numberOfPoints<sp/>=<sp/>200;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>numberOfSimulations<sp/>=<sp/>10;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">m<sp/>=<sp/>gillespieMeanSDOnGridEx<sp/>(rrHandle,<sp/>timeStart,<sp/>timeEnd,<sp/>numberOfPoints,<sp/>numberOfSimulations);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeStart</parametername>
</parameternamelist>
<parameterdescription>
<para>Time start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeEnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Time end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numberOfSteps</parametername>
</parameternamelist>
<parameterdescription>
<para>Fixed number of steps to generate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numberOfSimulations</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of simulations to perform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an array (RRCDataPtr) of columns containing the average of the results of the simulation including string labels for the individual columns. The average values are in Data and the standard deviations are in Weights. The client is responsible for freeing the resulting RRCDataPtr structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3620" column="36" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3620" bodyend="3627"/>
      </memberdef>
      <memberdef kind="function" id="group__reset_1gabde768cf80e67fe8f2811a28843e41f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::reset</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>reset</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Resets all variables of the model to their current initial values. Does not change the parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3629" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3629" bodyend="3636"/>
      </memberdef>
      <memberdef kind="function" id="group__reset_1ga50d3ec99c57ba89550a4deef3129e19f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::resetAll</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>resetAll</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Resets all variables of all types in the model to their current initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3638" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3638" bodyend="3651"/>
      </memberdef>
      <memberdef kind="function" id="group__reset_1ga24d6b0810b8cbf5a7e9b4da38908b6f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::resetToOrigin</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>resetToOrigin</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Resets the model to the state in which it was first loaded, including initial conditions, variables, and parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3653" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3653" bodyend="3660"/>
      </memberdef>
      <memberdef kind="function" id="group__reset_1gac01ad3eb713a26ab871f16f27f3d5304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::resetParameter</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>resetParameter</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Resets all parameters of the model to their current initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3662" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3662" bodyend="3669"/>
      </memberdef>
      <memberdef kind="function" id="group__config_1ga40e2c5a001c602ed3c3391a11197058a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setConfigBool</definition>
        <argsstring>(const char *key, int value)</argsstring>
        <name>setConfigBool</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a boolean configuration value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to assign to the configuration key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns positive if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3671" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3671" bodyend="3676"/>
      </memberdef>
      <memberdef kind="function" id="group__config_1ga1b7b8b7da9293048efbf9b5f7516e343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getConfigBool</definition>
        <argsstring>(const char *key)</argsstring>
        <name>getConfigBool</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Get a boolean configuration value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>On error, sets an error message which can be retrieved via <ref refid="group__errorfunctions_1gaa698640f13467d87966d8b90f0c3944c" kindref="member">getLastError</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3678" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3678" bodyend="3682"/>
      </memberdef>
      <memberdef kind="function" id="group__config_1ga7b6dbe4176018c39aeaacbda1e7e3bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setConfigInt</definition>
        <argsstring>(const char *key, int value)</argsstring>
        <name>setConfigInt</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set an integer configuration value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to assign to the configuration key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns positive if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3684" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3684" bodyend="3689"/>
      </memberdef>
      <memberdef kind="function" id="group__config_1ga98c02a19a1b4f8670f7325d76fa765d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getConfigInt</definition>
        <argsstring>(const char *key)</argsstring>
        <name>getConfigInt</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Get an integer configuration value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>On error, sets an error message which can be retrieved via <ref refid="group__errorfunctions_1gaa698640f13467d87966d8b90f0c3944c" kindref="member">getLastError</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3691" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3691" bodyend="3695"/>
      </memberdef>
      <memberdef kind="function" id="group__config_1ga7d88b86313f205f7048083cfce654736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setConfigDouble</definition>
        <argsstring>(const char *key, double value)</argsstring>
        <name>setConfigDouble</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a double configuration value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to assign to the configuration key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns positive if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3697" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3697" bodyend="3702"/>
      </memberdef>
      <memberdef kind="function" id="group__config_1ga6528c643dd196a5c91a95455f954076d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double rrcCallConv</type>
        <definition>double rrcCallConv rrc::getConfigDouble</definition>
        <argsstring>(const char *key)</argsstring>
        <name>getConfigDouble</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Get a double configuration value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>On error, sets an error message which can be retrieved via <ref refid="group__errorfunctions_1gaa698640f13467d87966d8b90f0c3944c" kindref="member">getLastError</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3704" column="20" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3704" bodyend="3708"/>
      </memberdef>
      <memberdef kind="function" id="group__config_1gaa2b527610b79828322a6b5d03ab4ace9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref> rrcCallConv</type>
        <definition>RRStringArrayPtr rrcCallConv rrc::getListOfConfigKeys</definition>
        <argsstring>()</argsstring>
        <name>getListOfConfigKeys</name>
        <briefdescription>
<para>Get a list of all possible config keys. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3710" column="30" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3710" bodyend="3724"/>
      </memberdef>
      <memberdef kind="function" id="group__simulation_1ga8aa11942ac03b11ccb42211e4f291a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setTimeCourseSelectionListEx</definition>
        <argsstring>(RRHandle handle, int length, const char **list)</argsstring>
        <name>setTimeCourseSelectionListEx</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Set the selection list for output from simulate(void) or simulateEx(void) Use setTimeCourseSelectionListEx(handle, length, list) to set the the simulate selection list. Compared to setTimeCourseSelectionList, setTimeCourseSelectionListEx, expects a list of char* strings otherwise it has identical functionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in the list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of char* strings of Ids </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3726" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3726" bodyend="3736"/>
      </memberdef>
      <memberdef kind="function" id="group__steadystate_1gad5596ac6d4ea9b71786c4a84a64e8eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setSteadyStateSelectionListEx</definition>
        <argsstring>(RRHandle handle, int length, const char **list)</argsstring>
        <name>setSteadyStateSelectionListEx</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Set the selection list for the steady-state analysis Use setSteadyStateSelectionListEx(handle, length, list) to set the steady-state selection list. Compared to setSteadyStateSelectionList, setSteadyStateSelectionList, expects a list of char* strings otherwise it has identical functionality. Example: </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">setSteadyStateSelectionListEx<sp/>(handle,<sp/>3,<sp/>list)</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>to roadrunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in the list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of symbols. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" line="3737" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_api.cpp" bodystart="3737" bodyend="3747"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1aa5105bf392f572cf29ecc41f15e7ae0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>C_DECL_SPEC void rrc::setError</definition>
        <argsstring>(const string &amp;err)</argsstring>
        <name>setError</name>
        <param>
          <type>const string &amp;</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>Set wrappers error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">err</parametername>
</parameternamelist>
<parameterdescription>
<para>A string containg the error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="19" column="6" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="19" bodyend="27" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="79" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1aa1dae03fb57453cee3ad96fb98d4c654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrr_1_1RoadRunner" kindref="compound">RoadRunner</ref> *</type>
        <definition>C_DECL_SPEC rr::RoadRunner * rrc::castToRoadRunner</definition>
        <argsstring>(RRHandle rrHandle)</argsstring>
        <name>castToRoadRunner</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>rrHandle</declname>
        </param>
        <briefdescription>
<para>Cast a handle to RoadRunner instance pointer, throws if it fails. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rrHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>A handle to a roadrunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to a roadrunner instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="29" column="12" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="29" bodyend="41" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="87" declcolumn="40"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1a438a08945081717ab148f08beac4e1d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structRRDoubleMatrix" kindref="compound">RRDoubleMatrix</ref> *</type>
        <definition>C_DECL_SPEC RRDoubleMatrixPtr rrc::createMatrix</definition>
        <argsstring>(const ls::DoubleMatrix *mat)</argsstring>
        <name>createMatrix</name>
        <param>
          <type>const ls::DoubleMatrix *</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>Creates a C matrix from a ls::DoubleMatrix, supplied as a pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mat</parametername>
</parameternamelist>
<parameterdescription>
<para>Input DoubleMatrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A handle to a RRMatrix. Null if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="43" column="16" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="43" bodyend="73" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="129" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1abd1ce293f626f5735607586d049c1789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DoubleMatrix *</type>
        <definition>DoubleMatrix* rrc::createMatrix</definition>
        <argsstring>(const rrc::RRDoubleMatrixPtr mat)</argsstring>
        <name>createMatrix</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">rrc::RRDoubleMatrixPtr</ref></type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="75" column="14" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="75" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1ad2b2503ade5b37f9ce03d452399b34d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structRRComplexMatrix" kindref="compound">RRComplexMatrix</ref> *</type>
        <definition>C_DECL_SPEC RRComplexMatrixPtr rrc::createMatrix</definition>
        <argsstring>(const ls::ComplexMatrix *mat)</argsstring>
        <name>createMatrix</name>
        <param>
          <type>const ls::ComplexMatrix *</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>Creates a C complex matrix from a ls::ComplexMatrix, supplied as a pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mat</parametername>
</parameternamelist>
<parameterdescription>
<para>Input ls::ComplexMatrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A handle to a <ref refid="structRRComplexMatrix" kindref="compound">RRComplexMatrix</ref>. Null if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="95" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="95" bodyend="128" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="146" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1ab2d664111e409f424b11daa80820bafb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>C_DECL_SPEC vector&lt; double &gt; rrc::createVector</definition>
        <argsstring>(const RRVector *vec)</argsstring>
        <name>createVector</name>
        <param>
          <type>const <ref refid="structRRVector" kindref="compound">RRVector</ref> *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Creates a std vector from a C vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Input C vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A std vector object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="130" column="8" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="130" bodyend="146" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="121" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1a12d12e0b9134ee7db99877c91911e8ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structRRVector" kindref="compound">RRVector</ref> *</type>
        <definition>C_DECL_SPEC RRVectorPtr rrc::createVector</definition>
        <argsstring>(const vector&lt; double &gt; &amp;vec)</argsstring>
        <name>createVector</name>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Creates a C vector from a std::vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Input double vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A handle to a <ref refid="structRRVector" kindref="compound">RRVector</ref>. Null if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="148" column="10" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="148" bodyend="164" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="105" declcolumn="47"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1a791633a020a7993706198d9bda91ff23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structRRComplexVector" kindref="compound">RRComplexVector</ref> *</type>
        <definition>C_DECL_SPEC RRComplexVectorPtr rrc::createVector</definition>
        <argsstring>(const vector&lt; ls::Complex &gt; &amp;vec)</argsstring>
        <name>createVector</name>
        <param>
          <type>const vector&lt; ls::Complex &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Creates a C Complex vector from a std::vector&lt;ls::Complex&gt; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Input Complex vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A handle to a <ref refid="structRRComplexVector" kindref="compound">RRComplexVector</ref>. Null if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="166" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="166" bodyend="183" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="113" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1a30496509b7934b24624ebbd7f2ec7c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>C_DECL_SPEC bool rrc::copyVector</definition>
        <argsstring>(const RRVector *source, vector&lt; double &gt; &amp;dest)</argsstring>
        <name>copyVector</name>
        <param>
          <type>const <ref refid="structRRVector" kindref="compound">RRVector</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Copy a C vector to a std::vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">source</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <ref refid="structRRVector" kindref="compound">RRVector</ref> structure instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination std::vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or false, indicating the result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="185" column="6" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="185" bodyend="200" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="97" declcolumn="49"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1ab5775e703dab475cc8e75f88823a78c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref></type>
        <definition>C_DECL_SPEC RRStringArrayPtr rrc::createList</definition>
        <argsstring>(const rrc::StringList &amp;list)</argsstring>
        <name>createList</name>
        <param>
          <type>const <ref refid="classrr_1_1StringList" kindref="compound">rrc::StringList</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Creates a C StringArray from a <ref refid="classrr_1_1StringList" kindref="compound">rr::StringList</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>Input StringList </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A handle to a <ref refid="structRRStringArray" kindref="compound">RRStringArray</ref>. Null if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="202" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="202" bodyend="222" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="155" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1a48f6bafdb9b91a8b7fc425c8d6e191fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structRRList" kindref="compound">RRList</ref> *</type>
        <definition>RRList* rrc::createArrayList</definition>
        <argsstring>(const rrc::ArrayList &amp;aList)</argsstring>
        <name>createArrayList</name>
        <param>
          <type>const rrc::ArrayList &amp;</type>
          <declname>aList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="261" column="8" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="261" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8cpp_1a0b4e819b7fb2e7f74b8866c4355e118c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref></type>
        <definition>C_DECL_SPEC RRCDataPtr rrc::createRRCData</definition>
        <argsstring>(const rr::RoadRunner &amp;)</argsstring>
        <name>createRRCData</name>
        <param>
          <type>const <ref refid="classrr_1_1RoadRunner" kindref="compound">rr::RoadRunner</ref> &amp;</type>
          <defname>tmp</defname>
        </param>
        <briefdescription>
<para>Creates an RRCDataPtr from the current state of a RoadRunner object. </para>
        </briefdescription>
        <detaileddescription>
<para>This may be used directly after <ref refid="classrr_1_1RoadRunner_1a377834f22edadb7706779ecca7c1eb4e" kindref="member">RoadRunner::simulate()</ref> has been called to package up the simulation result data and column names into one of these RRCDataPtr structs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" line="324" column="12" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.cpp" bodystart="324" bodyend="356" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="173" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8h_1a835ebb3ef0d2a50c6057c5c947389ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC ls::DoubleMatrix *</type>
        <definition>C_DECL_SPEC ls::DoubleMatrix* rrc::createMatrix</definition>
        <argsstring>(const RRDoubleMatrixPtr mat)</argsstring>
        <name>createMatrix</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref></type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>Creates a ls::DoubleMatrix from a RRMatrix, supplied as a pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mat</parametername>
</parameternamelist>
<parameterdescription>
<para>Input RRMatrix pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A handle to a DoubleMatrix. Null if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" line="137" column="48" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="137" declcolumn="48"/>
      </memberdef>
      <memberdef kind="function" id="rrc__cpp__support_8h_1a9708701b977b0ee9f17d56c04de1566f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC <ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref></type>
        <definition>C_DECL_SPEC RRListPtr rrc::createArrayList</definition>
        <argsstring>(const ArrayList &amp;list)</argsstring>
        <name>createArrayList</name>
        <param>
          <type>const ArrayList &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Creates a heterogenoeus <ref refid="structRRList" kindref="compound">RRList</ref> from a rr::ArrayList. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>Input Array list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A handle to a <ref refid="structRRList" kindref="compound">RRList</ref>. Null if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" line="163" column="44" declfile="/home/vsts/work/1/s/wrappers/C/rrc_cpp_support.h" declline="163" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="group__Stoich_1gabcc1c1d88e91e4c17888f63a1158fade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getL0Matrix</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getL0Matrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Returns the L0 Matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>L0 is defined such that L0 Nr = N0. L0 forms part of the link matrix, L. N0 is the set of linear dependent rows from the lower portion of the reordered stoichiometry matrix.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns the L0 matrix.</para>
</simplesect>
<simplesect kind="remark"><para>To free the returned matrix call freeMatrix with the matrix as parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" line="20" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" bodystart="20" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="group__Stoich_1gaed6227a5e35be5cfdaf667ddb3f9afe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref></type>
        <definition>RRVectorPtr rrc::getConservedSums</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getConservedSums</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Returns values for conservation laws using the current initial conditions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>free vector using freeVector function</para>
</simplesect>
<simplesect kind="return"><para>The return value will be zero (0) when successful, and negative (-1) in case no stoichiometry matrix was loaded beforehand or none of the analysis methods has been called yet. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a RRVectorHandle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" line="30" column="13" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" bodystart="30" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="group__LinearAlgebra_1ga142092d1f7edcc6500f1b965abed68be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::getEigenvaluesMatrix</definition>
        <argsstring>(const RRDoubleMatrixPtr mat)</argsstring>
        <name>getEigenvaluesMatrix</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref></type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>Compute the eigenvalues of a double matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mat</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a to double matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns NULL if it fails, otherwise returns a matrix of eigenvalues. The first column will contain the real values and the second column the imaginary values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" line="39" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" bodystart="39" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="group__LinearAlgebra_1ga9902e4c49cc0334f2d2b297b977856c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae05c63419a6ca0575eb327fd04dae4b5" kindref="member">RRComplexVectorPtr</ref> rrcCallConv</type>
        <definition>RRComplexVectorPtr rrcCallConv rrc::getEigenvaluesVector</definition>
        <argsstring>(const RRDoubleMatrixPtr mat)</argsstring>
        <name>getEigenvaluesVector</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref></type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>Compute the eigenvalues of a double matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mat</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to input matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a complex vector of eigenvalues. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" line="66" column="32" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" bodystart="66" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="group__Stoich_1ga0c68a334f896f419160f09e140c52a5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a8cf9e865d8541d100f153800adbb7c3f" kindref="member">RRComplexMatrixPtr</ref> rrcCallConv</type>
        <definition>RRComplexMatrixPtr rrcCallConv rrc::getEigenVectors</definition>
        <argsstring>(const RRDoubleMatrixPtr inMatrix)</argsstring>
        <name>getEigenVectors</name>
        <param>
          <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref></type>
          <declname>matrix</declname>
          <defname>inMatrix</defname>
        </param>
        <briefdescription>
<para>Calculates the eigen-vectors of a square real matrix. This function calculates the complex (right)eigenvectors of the given real matrix. The complex matrix returned contains the eigenvectors in the columns, in the same order as LibLA_getEigenValues. </para>
        </briefdescription>
        <detaileddescription>
<para>The right eigenvector v(j) of A satisfies: <simplesect kind="par"><title></title><para>A * v(j) = lambda(j) * v(j) </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RRMatrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a <ref refid="structRRComplexMatrix" kindref="compound">RRComplexMatrix</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" line="412" column="32" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" bodystart="412" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="group__Stoich_1ga5d823d9deca09548bf65c9df30bf0aac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a8cf9e865d8541d100f153800adbb7c3f" kindref="member">RRComplexMatrixPtr</ref> rrcCallConv</type>
        <definition>RRComplexMatrixPtr rrcCallConv rrc::getZEigenVectors</definition>
        <argsstring>(RRComplexMatrixPtr inMatrix)</argsstring>
        <name>getZEigenVectors</name>
        <param>
          <type><ref refid="rrc__types_8h_1a8cf9e865d8541d100f153800adbb7c3f" kindref="member">RRComplexMatrixPtr</ref></type>
          <declname>matrix</declname>
          <defname>inMatrix</defname>
        </param>
        <briefdescription>
<para>Calculates the eigen-vectors of a square nonsymmetrix complex matrix. This function calculates the complex (right)eigenvectors of the given real matrix. The complex matrix returned contains the eigenvectors in the columns, in the same order as getZEigenValues. The right eigenvector v(j) of A satisfies: </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title></title><para>A * v(j) = lambda(j) * v(j) </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a <ref refid="structRRComplexMatrix" kindref="compound">RRComplexMatrix</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a <ref refid="structRRComplexMatrix" kindref="compound">RRComplexMatrix</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" line="454" column="32" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_libstruct_api.cpp" bodystart="454" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1ga26aae545bbc31c1505ade0579741a4b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::enableLoggingToConsole</definition>
        <argsstring>()</argsstring>
        <name>enableLoggingToConsole</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Enable logging to console. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" line="15" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" bodystart="15" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1gaa5be6edee1af88ca1f87bf17568ea1cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::disableLoggingToConsole</definition>
        <argsstring>()</argsstring>
        <name>disableLoggingToConsole</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disable logging to console. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" line="23" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" bodystart="23" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1ga94829307689bb7f93c59d3098b83a9f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::enableLoggingToFile</definition>
        <argsstring>()</argsstring>
        <name>enableLoggingToFile</name>
        <briefdescription>
<para>Enable logging to logFile. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" line="31" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1ga9ccf608e3864a75bdca868af6b511b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::enableLoggingToFileWithPath</definition>
        <argsstring>(const char *path)</argsstring>
        <name>enableLoggingToFileWithPath</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Enable logging to a log file with the specified path. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" line="39" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" bodystart="39" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1gaed2bf69408c13ca8e3d65149261e6689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::disableLoggingToFile</definition>
        <argsstring>()</argsstring>
        <name>disableLoggingToFile</name>
        <briefdescription>
<para>Disable logging to logFile. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" line="47" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1ga6e6cb15a163ea13e5ef9f0ebfded2c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool rrcCallConv</type>
        <definition>bool rrcCallConv rrc::setLogLevel</definition>
        <argsstring>(const char *_lvl)</argsstring>
        <name>setLogLevel</name>
        <param>
          <type>const char *</type>
          <declname>lvl</declname>
          <defname>_lvl</defname>
        </param>
        <briefdescription>
<para>Set the logging status level The logging level is determined by the following strings. </para>
        </briefdescription>
        <detaileddescription>
<para>&quot;ANY&quot;, &quot;DEBUG5&quot;, &quot;DEBUG4&quot;, &quot;DEBUG3&quot;, &quot;DEBUG2&quot;, &quot;DEBUG1&quot;, &quot;DEBUG&quot;, &quot;INFO&quot;, &quot;WARNING&quot;, &quot;ERROR&quot;</para>
<para>Example:<programlisting><codeline><highlight class="normal">setLogLevel<sp/>(&quot;DEBUG4&quot;)<sp/></highlight></codeline>
</programlisting></para>
<para>Will show log messages with levels DEBUG4, DEBUG3 -&gt; Error</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lvl</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the logging level string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" line="55" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" bodystart="55" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1ga0d9810fbff78ccdf4912d5789d55f49e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getLogLevel</definition>
        <argsstring>()</argsstring>
        <name>getLogLevel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the logging status level as a pointer to a string. </para>
        </briefdescription>
        <detaileddescription>
<para>The logging level can be one of the following strings</para>
<para>&quot;ANY&quot;, &quot;DEBUG5&quot;, &quot;DEBUG4&quot;, &quot;DEBUG3&quot;, &quot;DEBUG2&quot;, &quot;DEBUG1&quot;, &quot;DEBUG&quot;, &quot;INFO&quot;, &quot;WARNING&quot;, &quot;ERROR&quot;</para>
<para>Example:<programlisting><codeline><highlight class="normal">str<sp/>=<sp/>getLogLevel<sp/>(void)<sp/></highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Returns null if it fails else returns a pointer to the logging string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" line="64" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1ga05133e19d88371f05908ba5f87ca57ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getLogFileName</definition>
        <argsstring>()</argsstring>
        <name>getLogFileName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a pointer to the string that holds the logging file name path. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: str = getLogFileName (void)</para>
<para><simplesect kind="return"><para>Returns null if it fails otherwise returns the full path to the logging file name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" line="73" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1gaa6fb15f5bbab056c9351695bcb0775a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void rrcCallConv</type>
        <definition>void rrcCallConv rrc::logMsg</definition>
        <argsstring>(CLogLevel lvl, const char *msg)</argsstring>
        <name>logMsg</name>
        <param>
          <type>enum <ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686a" kindref="member">CLogLevel</ref></type>
          <declname>lvl</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Create a log message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lvl</parametername>
</parameternamelist>
<parameterdescription>
<para>Loglevel for message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Log message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" line="80" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_logging_api.cpp" bodystart="80" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="group__NOM_1gadd064802065aece47c2e966f9fff5958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getModelName</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getModelName</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Returns the name of currently loaded SBML model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a char* containing the name if successful, NULL otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_nom_api.cpp" line="17" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_nom_api.cpp" bodystart="17" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="group__NOM_1ga41628ed993912f07fef8232af1a01051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void rrcCallConv</type>
        <definition>void rrcCallConv rrc::setModelName</definition>
        <argsstring>(RRHandle handle, char *name)</argsstring>
        <name>setModelName</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets the name of currently loaded SBML model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[name]</parametername>
</parameternamelist>
<parameterdescription>
<para>The new name to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_nom_api.cpp" line="25" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_nom_api.cpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="group__NOM_1ga300c79897dd0002ea7810b0bd7ce640c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getModelId</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getModelId</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Returns the id of currently loaded SBML model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a char* containing the id if successful, NULL otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_nom_api.cpp" line="33" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_nom_api.cpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="group__NOM_1gaa4a7f06dcfd66520eae88c7138c61364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void rrcCallConv</type>
        <definition>void rrcCallConv rrc::setModelId</definition>
        <argsstring>(RRHandle handle, char *id)</argsstring>
        <name>setModelId</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Sets the id of currently loaded SBML model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[id]</parametername>
</parameternamelist>
<parameterdescription>
<para>The new id to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_nom_api.cpp" line="41" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_nom_api.cpp" bodystart="41" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="group__NOM_1ga97df6daacbf87b1b2d3b4dd3f4e05876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumberOfRules</definition>
        <argsstring>(RRHandle handle)</argsstring>
        <name>getNumberOfRules</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Returns the number of rules in the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RoadRunner instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an integer larger or equal to 0 if successful, or -1 on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_nom_api.cpp" line="49" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_nom_api.cpp" bodystart="49" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="rrc__utilities_8cpp_1ac6b909d39981583739971ca24a885af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::createText</definition>
        <argsstring>(const char *text)</argsstring>
        <name>createText</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Creates memory for holding a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">text</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to a memory holding a copy of the input string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="39" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="rrc__utilities_8cpp_1a6441f08fee1061ccab285ba58831925b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getFileContent</definition>
        <argsstring>(const char *fName)</argsstring>
        <name>getFileContent</name>
        <param>
          <type>const char *</type>
          <declname>fName</declname>
        </param>
        <briefdescription>
<para>Retrieves the the content of a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fName</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a string holding the name and optionla path to a file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Content of file as a string, returns null if it fails </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="44" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1ga15cdab183a7e81c1e7beba9b80a6544c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::compileSource</definition>
        <argsstring>(RRHandle handle, const char *sourceFileName)</argsstring>
        <name>compileSource</name>
        <param>
          <type><ref refid="rrc__types_8h_1a1d68f0592372208fa5a5f2799ea4b3ae" kindref="member">RRHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sourceFileNameAndPath</declname>
          <defname>sourceFileName</defname>
        </param>
        <briefdescription>
<para>Compiles source code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a RRInstance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sourceFileNameAndPath</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to string holding the file(with path) to compile </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a t/f indicating the result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="52" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="rrc__utilities_8cpp_1a899ba13bf0f65c2e83850604c13550cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::createTextMemory</definition>
        <argsstring>(const int count)</argsstring>
        <name>createTextMemory</name>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Creates memory for holding a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>integer indicating number of elements to allocate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to string memory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="57" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1ga0d154a4c5f0aef656c333775638b2b7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref> rrcCallConv</type>
        <definition>RRListPtr rrcCallConv rrc::createRRList</definition>
        <argsstring>()</argsstring>
        <name>createRRList</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new list. </para>
        </briefdescription>
        <detaileddescription>
<para>A list is a container for storing list items. List items can represent integers, double, strings and lists. To populate a list, create list items of the appropriate type and add them to the list</para>
<para>Example, build the list [123, [3.1415926]]</para>
<para><programlisting><codeline><highlight class="normal">l<sp/>=<sp/>createRRList(RRHandle<sp/>handle);</highlight></codeline>
<codeline><highlight class="normal">item<sp/>=<sp/>createIntegerItem<sp/>(123);</highlight></codeline>
<codeline><highlight class="normal">addItem<sp/>(l,<sp/>item);</highlight></codeline>
<codeline><highlight class="normal">item1<sp/>=<sp/>createListItem(RRHandle<sp/>handle);</highlight></codeline>
<codeline><highlight class="normal">item2<sp/>=<sp/>createDoubleItem<sp/>(3.1415926);</highlight></codeline>
<codeline><highlight class="normal">addItem<sp/>(item1,<sp/>item2);</highlight></codeline>
<codeline><highlight class="normal">addItem<sp/>(l,<sp/>item1);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">item<sp/>=<sp/>getListItem<sp/>(l,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal">printf<sp/>(&quot;item<sp/>=<sp/>%d\n&quot;,<sp/>item-&gt;data.iValue);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">printf<sp/>(listToString<sp/>(l));</highlight></codeline>
<codeline><highlight class="normal">freeRRList<sp/>(l);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Returns null if fails, otherwise returns a pointer to a new list structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="65" column="23" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1gafd22078b804cc5b7e39849fb51c7519a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void rrcCallConv</type>
        <definition>void rrcCallConv rrc::freeRRList</definition>
        <argsstring>(RRListPtr theList)</argsstring>
        <name>freeRRList</name>
        <param>
          <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref></type>
          <declname>theList</declname>
        </param>
        <briefdescription>
<para>Free RRListPtr structure, i.e destroy a list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="73" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="73" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1ga1b1b84f8ecafcb31e12e66a0f0f1b49b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref> rrcCallConv</type>
        <definition>RRListItemPtr rrcCallConv rrc::createIntegerItem</definition>
        <argsstring>(int value)</argsstring>
        <name>createIntegerItem</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Create a list item to store an integer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer to store in the list item </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the list item </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="97" column="27" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="97" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1ga53219912496c999a31ae4f108b1a8247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref> rrcCallConv</type>
        <definition>RRListItemPtr rrcCallConv rrc::createDoubleItem</definition>
        <argsstring>(double value)</argsstring>
        <name>createDoubleItem</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Create a list item to store a double value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double to store in the list item </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the list item </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="105" column="27" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="105" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1gacc07a37b137b826130770eacd8c93d4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref> rrcCallConv</type>
        <definition>RRListItemPtr rrcCallConv rrc::createStringItem</definition>
        <argsstring>(char *value)</argsstring>
        <name>createStringItem</name>
        <param>
          <type>char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Create a list item to store a pointer to a char*. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to store in the list item </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the list item </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="113" column="27" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="113" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1gab092027f0f1176d66f13cb570efa28c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref> rrcCallConv</type>
        <definition>RRListItemPtr rrcCallConv rrc::createListItem</definition>
        <argsstring>(RRList *value)</argsstring>
        <name>createListItem</name>
        <param>
          <type>struct <ref refid="structRRList" kindref="compound">RRList</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Create a list item to store a list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to store in the list item </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the list item </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="121" column="27" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1ga2ae7d5112afc94d0dae42cc89b5158ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::addItem</definition>
        <argsstring>(RRListPtr list, RRListItemPtr *item)</argsstring>
        <name>addItem</name>
        <param>
          <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref></type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Add a list item to a list and return index to the added item. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">x<sp/>=<sp/>createRRList(RRHandle<sp/>handle);</highlight></codeline>
<codeline><highlight class="normal">item1<sp/>=<sp/>createIntegerItem<sp/>(4);</highlight></codeline>
<codeline><highlight class="normal">add<sp/>(x,<sp/>item1);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to store the item in </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list item to store in the list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index to where the list item was added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="131" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="131" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1gaecb302d3561bc1e80a8123f991970fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::isListItemInteger</definition>
        <argsstring>(RRListItemPtr item)</argsstring>
        <name>isListItemInteger</name>
        <param>
          <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns true or false if the list item is an integer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If true, then the list item holds an integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="157" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1ga462c5cc75cb0f353a9d1f0cd8324876c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::isListItemDouble</definition>
        <argsstring>(RRListItemPtr item)</argsstring>
        <name>isListItemDouble</name>
        <param>
          <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns true or false if the list item is a double. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If true, then the list item holds a double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="162" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1ga2198a9abc9617d9e926f515faa1663ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::isListItemString</definition>
        <argsstring>(RRListItemPtr item)</argsstring>
        <name>isListItemString</name>
        <param>
          <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns true or false if the list item is a character array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If true, then the list item holds an character array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="167" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1gad17754e97e43d0ed08c2a5cca68f7a39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::isListItemList</definition>
        <argsstring>(RRListItemPtr item)</argsstring>
        <name>isListItemList</name>
        <param>
          <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns true or false if the list item is a list itself. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If true, then the list item holds a list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="172" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1ga11a02911ab01db4dc839ae97782e5bf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref> rrcCallConv</type>
        <definition>RRListItemPtr rrcCallConv rrc::getListItem</definition>
        <argsstring>(RRListPtr list, int index)</argsstring>
        <name>getListItem</name>
        <param>
          <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref></type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the index^th item from the list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to retrieve the list item from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index list item we are interested in</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the retrieved list item </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="177" column="27" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1ga1e19335d11372caa5e9dc2d8976ce688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getIntegerListItem</definition>
        <argsstring>(RRListItemPtr item, int *value)</argsstring>
        <name>getIntegerListItem</name>
        <param>
          <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Returns the integer from a list item. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list item to work with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value returned by the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true is successful, else false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="182" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="182" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1gab383162093a2782001a6d623dc077dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getDoubleListItem</definition>
        <argsstring>(RRListItemPtr item, double *value)</argsstring>
        <name>getDoubleListItem</name>
        <param>
          <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Returns the double from a list item. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list item to work with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The double value returned by the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true is successful, else false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="192" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="192" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1ga177fc925d1726b0844c17837d3ed4425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getStringListItem</definition>
        <argsstring>(RRListItemPtr item)</argsstring>
        <name>getStringListItem</name>
        <param>
          <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the string from a list item. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list item to work with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns NULL if it fails, otherwise returns a pointer to the string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="203" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1gaf9b1219b9a239f0fb73cd83095bbecce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref> rrcCallConv</type>
        <definition>RRListPtr rrcCallConv rrc::getList</definition>
        <argsstring>(RRListItemPtr item)</argsstring>
        <name>getList</name>
        <param>
          <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns a list from a list item if it contains a list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list item to retrieve the list type from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns NULL if item isn&apos;t a list, otherwise it returns a list from the item </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="208" column="23" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1ga68d5e8b5116e1076c5cac49858d469f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::isListItem</definition>
        <argsstring>(RRListItemPtr item, ListItemType itemType)</argsstring>
        <name>isListItem</name>
        <param>
          <type><ref refid="rrc__types_8h_1a79938364b69256c42480bb3a29ebf73e" kindref="member">RRListItemPtr</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type>enum <ref refid="rrc__types_8h_1ab99437ab2e88aa90b7ebb8add042b25e" kindref="member">ListItemType</ref></type>
          <declname>itemType</declname>
        </param>
        <briefdescription>
<para>Returns true or false if the list item is the given itemType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">itemType</parametername>
</parameternamelist>
<parameterdescription>
<para>The list item type to check for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If true, then the list item holds a list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="213" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="group__list_1gadc06b896a3117610bbdcf25abb984f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getListLength</definition>
        <argsstring>(RRListPtr myList)</argsstring>
        <name>getListLength</name>
        <param>
          <type><ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref></type>
          <declname>myList</declname>
        </param>
        <briefdescription>
<para>Returns the length of a given list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">myList</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to retrieve the length from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Length of list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="218" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="group__toString_1ga7cfc863a3d8fec26c951a2f40fa7dfa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::listToString</definition>
        <argsstring>(RRListPtr list)</argsstring>
        <name>listToString</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1a32a8a60ac06858ff3a791672bd2bec73" kindref="member">RRListPtr</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Returns a list in string form. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns list as a character string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="223" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="223" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="group__freeRoutines_1ga9adcba296046c5770d44e64626b600ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::freeMatrix</definition>
        <argsstring>(RRDoubleMatrixPtr matrix)</argsstring>
        <name>freeMatrix</name>
        <param>
          <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref></type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
<para>Free RRDoubleMatrixPtr structures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="288" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="288" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="group__freeRoutines_1ga2f52213c492e3c4c5d2ac6c72e04a035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::freeRRCData</definition>
        <argsstring>(RRCDataPtr handle)</argsstring>
        <name>freeRRCData</name>
        <param>
          <type><ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Free the memory associated to a <ref refid="structRRCData" kindref="compound">RRCData</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="300" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="300" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="group__freeRoutines_1gaaaea1b8264a6d7511153ef611fa88e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::freeText</definition>
        <argsstring>(char *text)</argsstring>
        <name>freeText</name>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Free char* generated by library routines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="317" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="317" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="group__freeRoutines_1ga905dbf578855f9e21e956f6066a6a2b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::freeStringArray</definition>
        <argsstring>(RRStringArrayPtr sl)</argsstring>
        <name>freeStringArray</name>
        <param>
          <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref></type>
          <declname>sl</declname>
        </param>
        <briefdescription>
<para>Free RRStringListHandle structures. </para>
        </briefdescription>
        <detaileddescription>
<para>Free RRStringArrayPtr structures </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="325" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="325" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="group__freeRoutines_1ga97046231a95430c020e94004ca257b83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::freeVector</definition>
        <argsstring>(RRVectorPtr vector)</argsstring>
        <name>freeVector</name>
        <param>
          <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref></type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Free RRVectorHandle structures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="342" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="342" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1ga9f52eab51dfe4dcd3d87538bf8ecd453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref> rrcCallConv</type>
        <definition>RRVectorPtr rrcCallConv rrc::createVector</definition>
        <argsstring>(int size)</argsstring>
        <name>createVector</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Create a new vector with a given size. </para>
        </briefdescription>
        <detaileddescription>
<para>Vectors are indexed from zero</para>
<para>Example:<programlisting><codeline><highlight class="normal">myVector<sp/>=<sp/>createVector<sp/>(10);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of element in the new vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if it fails, otherwise returns a pointer to the new vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="355" column="25" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="355" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1gaa54dd2d3c615bb2838c0670d0344e001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getVectorLength</definition>
        <argsstring>(RRVectorPtr vector)</argsstring>
        <name>getVectorLength</name>
        <param>
          <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref></type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Get the number of elements in a vector type. </para>
        </briefdescription>
        <detaileddescription>
<para>Vectors are indexed from zero</para>
<para>Example:<programlisting><codeline><highlight class="normal">count<sp/>=<sp/>getVectorLength<sp/>(myVector);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the vector variable type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns -1 if it fails, otherwise returns the number of elements in the vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="366" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="366" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1gab84c62954e2a81c5dbc2c897e88b05f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getVectorElement</definition>
        <argsstring>(RRVectorPtr vector, int index, double *value)</argsstring>
        <name>getVectorElement</name>
        <param>
          <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get a particular element from a vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Vectors are indexed from zero</para>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>getVectorElement<sp/>(myVector,<sp/>10,<sp/>*value);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the vector variable type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer indicating the ith element to retrieve (indexing is from zero) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the retrieved double value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="379" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="379" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1gab7ecf31370cd1f63c424d703f1a676cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setVectorElement</definition>
        <argsstring>(RRVectorPtr vector, int index, double value)</argsstring>
        <name>setVectorElement</name>
        <param>
          <type><ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a particular element in a vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Vectors are indexed from zero</para>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>setVectorElement<sp/>(myVector,<sp/>10,<sp/>3.1415);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the vector variable type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer indicating the ith element to set (indexing is from zero) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to store in the vector at the indexth position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="399" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="399" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1gabf1979f15bd6b02315b3f9d880fded85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref> rrcCallConv</type>
        <definition>RRDoubleMatrixPtr rrcCallConv rrc::createRRMatrix</definition>
        <argsstring>(int r, int c)</argsstring>
        <name>createRRMatrix</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Create an empty matrix of size r by c. </para>
        </briefdescription>
        <detaileddescription>
<para>Matrices are indexed from zero</para>
<para>Example:<programlisting><codeline><highlight class="normal">m<sp/>=<sp/>createRRMatrix<sp/>(2,<sp/>3);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Row and column sizes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns NULL if fails, otherwise returns a handle to the matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="421" column="31" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="421" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1ga13d0d619adf01ca451033e742aaed38e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getMatrixNumRows</definition>
        <argsstring>(RRDoubleMatrixPtr m)</argsstring>
        <name>getMatrixNumRows</name>
        <param>
          <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Retrieve the number of rows in the given matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>Matrices are indexed from zero</para>
<para>Example:<programlisting><codeline><highlight class="normal">nRows<sp/>=<sp/>getMatrixNumRows<sp/>(m);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a matrix type variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns -1 if fails, otherwise returns the number of rows </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="440" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="440" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1ga643d224921897abead4fdcdf1e1e362e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getMatrixNumCols</definition>
        <argsstring>(RRDoubleMatrixPtr m)</argsstring>
        <name>getMatrixNumCols</name>
        <param>
          <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Retrieve the number of columns in the given matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>Matrices are indexed from zero</para>
<para>Example:<programlisting><codeline><highlight class="normal">nRows<sp/>=<sp/>getMatrixNumCols<sp/>(m);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a matrix type variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns -1 if fails, otherwise returns the number of columns </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="450" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="450" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1ga412ade7dedfbaeafd99eb4abe3fa4f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getMatrixElement</definition>
        <argsstring>(RRDoubleMatrixPtr m, int r, int c, double *value)</argsstring>
        <name>getMatrixElement</name>
        <param>
          <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve an element at a given row and column from a matrix type variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Matrices are indexed from zero</para>
<para>Example: <programlisting><codeline><highlight class="normal">status<sp/>=<sp/>getMatrixElement<sp/>(m,<sp/>2,<sp/>4,<sp/>&amp;value);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a matrix type variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index to the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index to the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The retrieved value from the matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="461" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="461" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1gae8a55dbfe92b2f7cb325970a75f69e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setMatrixElement</definition>
        <argsstring>(RRDoubleMatrixPtr m, int r, int c, double value)</argsstring>
        <name>setMatrixElement</name>
        <param>
          <type><ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set an element at a given row and column with a given value in a matrix type variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Matrices are indexed from zero</para>
<para>Example: <programlisting><codeline><highlight class="normal">status<sp/>=<sp/>setMatrixElement<sp/>(m,<sp/>2,<sp/>4,<sp/>value);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a matrix type variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index to the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index to the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set to the matrix element </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="481" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="481" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1gab72f77166a650f91ce979db7e1b5558d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getComplexMatrixElement</definition>
        <argsstring>(RRComplexMatrixPtr m, int r, int c, RRComplexPtr value)</argsstring>
        <name>getComplexMatrixElement</name>
        <param>
          <type><ref refid="rrc__types_8h_1a8cf9e865d8541d100f153800adbb7c3f" kindref="member">RRComplexMatrixPtr</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="rrc__types_8h_1ada2046d7326c56ae29d8510fbf6622ee" kindref="member">RRComplexPtr</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieve an element at a given row and column from a complex matrix type variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Matrices are indexed from zero</para>
<para>Example: <programlisting><codeline><highlight class="normal">status<sp/>=<sp/>getComplexMatrixElement<sp/>(m,<sp/>2,<sp/>4,<sp/>&amp;value);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a complex matrix type variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index to the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index to the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The retrieved value from the matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns True if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="501" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="501" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="rrc__utilities_8cpp_1a8f6a0441594a41dddc1668af1a8ca849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::setComplexMatrixElement</definition>
        <argsstring>(RRComplexMatrixPtr m, int r, int c, RRComplex *value)</argsstring>
        <name>setComplexMatrixElement</name>
        <param>
          <type><ref refid="rrc__types_8h_1a8cf9e865d8541d100f153800adbb7c3f" kindref="member">RRComplexMatrixPtr</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structRRComplex" kindref="compound">RRComplex</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="522" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="522" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1gae18768d9447fda2618cacb5099eb768e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getRRDataNumRows</definition>
        <argsstring>(RRCDataPtr result)</argsstring>
        <name>getRRDataNumRows</name>
        <param>
          <type><ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref></type>
          <declname>rrData</declname>
          <defname>result</defname>
        </param>
        <briefdescription>
<para>Retrieve the number of rows in the given RoadRunner numerical data (returned from <ref refid="group__simulation_1ga9ac99f6909eb0a6244035fc9cdeff94d" kindref="member">simulate(RRHandle handle)</ref>) </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">nRows<sp/>=<sp/>getRRDataNumRows<sp/>(result);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rrData</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a RoadRunner numerical data type variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns -1 if fails, otherwise returns the number of rows </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="543" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="543" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1ga76a2e0f7b1704b28ef0b6661b5e6ada9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getRRDataNumCols</definition>
        <argsstring>(RRCDataPtr result)</argsstring>
        <name>getRRDataNumCols</name>
        <param>
          <type><ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref></type>
          <declname>rrData</declname>
          <defname>result</defname>
        </param>
        <briefdescription>
<para>Retrieve the number of columns in the given rrData data (returned form <ref refid="group__simulation_1ga9ac99f6909eb0a6244035fc9cdeff94d" kindref="member">simulate(RRHandle handle)</ref>) </para>
        </briefdescription>
        <detaileddescription>
<para>Example:<programlisting><codeline><highlight class="normal">nRows<sp/>=<sp/>getResultNumCols<sp/>(rrData);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rrData</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a rrData type variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns -1 if fails, otherwise returns the number of columns </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="553" column="19" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="553" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1gad475100038d18ad8033220f10a05156a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getRRCDataElement</definition>
        <argsstring>(RRCDataPtr result, int r, int c, double *value)</argsstring>
        <name>getRRCDataElement</name>
        <param>
          <type><ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref></type>
          <declname>rrData</declname>
          <defname>result</defname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves an element at a given row and column from a RoadRunner data type variable. </para>
        </briefdescription>
        <detaileddescription>
<para>RoadRunner numerical data are indexed from zero</para>
<para>Example:<programlisting><codeline><highlight class="normal">status<sp/>=<sp/>getRRCDataElement<sp/>(rrData,<sp/>2,<sp/>4,<sp/>*value);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rrData</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a rrData type variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>-The row index to the rrData data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>- The column index to the rrData data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>- The retrieved value from the rrData data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="563" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="563" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="group__helperRoutines_1gaaa98160597f72e56bf32eff95e7b1f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getRRDataColumnLabel</definition>
        <argsstring>(RRCDataPtr result, int column)</argsstring>
        <name>getRRDataColumnLabel</name>
        <param>
          <type><ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref></type>
          <declname>rrData</declname>
          <defname>result</defname>
        </param>
        <param>
          <type>int</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Retrieves a label for a given column in a rrData type variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Result data are indexed from zero</para>
<para>Example:<programlisting><codeline><highlight class="normal">str<sp/>=<sp/>getResultColumnLabel<sp/>(rrData,<sp/>2,<sp/>4);<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rrData</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a rrData type variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">column</parametername>
</parameternamelist>
<parameterdescription>
<para>- The column index for the rrData data (indexing from zero) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns null if fails, otherwise returns a pointer to the string column label </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="583" column="19" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="583" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="group__stringArray_1ga4fcdcd7af4041c61ad958b7444ed0263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int rrcCallConv</type>
        <definition>int rrcCallConv rrc::getNumberOfStringElements</definition>
        <argsstring>(const RRStringArrayPtr list)</argsstring>
        <name>getNumberOfStringElements</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Returns the length of a string array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the length of a string array, return -1 if string array is NULL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="604" column="17" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="604" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="group__stringArray_1ga6543d536e989bd4cbf52b53e000cf025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::getStringElement</definition>
        <argsstring>(RRStringArrayPtr list, int index)</argsstring>
        <name>getStringElement</name>
        <param>
          <type><ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref></type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the indexth element from the string array in the argument value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns pointer to string else return null if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="612" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="612" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="group__toString_1ga57ac412ea941375e41f6cbc193c666e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::stringArrayToString</definition>
        <argsstring>(const RRStringArrayPtr list)</argsstring>
        <name>stringArrayToString</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1a7c9475df6c7337d99482b13a365e7596" kindref="member">RRStringArrayPtr</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Returns a string list in string form. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns string list as a character string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="630" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="630" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="group__toString_1ga9ecd62cd0fd10a179bd2fe5e55f69929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::rrCDataToString</definition>
        <argsstring>(const RRCDataPtr result)</argsstring>
        <name>rrCDataToString</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1a9da8b124eb9c3c0045f8926c6a420b4a" kindref="member">RRCDataPtr</ref></type>
          <declname>rrData</declname>
          <defname>result</defname>
        </param>
        <briefdescription>
<para>Returns a rrCData struct in string form. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns rrCData struct as a character string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="652" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="652" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="group__toString_1ga02a9a7fee7703402fcf6e36f30d384be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::matrixToString</definition>
        <argsstring>(const RRDoubleMatrixPtr matrixHandle)</argsstring>
        <name>matrixToString</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1ae586a879d30f0823087e42d93464b5dd" kindref="member">RRDoubleMatrixPtr</ref></type>
          <declname>mat</declname>
          <defname>matrixHandle</defname>
        </param>
        <briefdescription>
<para>Returns a matrix in string form. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns matrix as a character string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="690" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="690" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="group__toString_1gacb4e2892fead121b86bcaf22fea17178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::complexMatrixToString</definition>
        <argsstring>(const RRComplexMatrixPtr matrixHandle)</argsstring>
        <name>complexMatrixToString</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1a8cf9e865d8541d100f153800adbb7c3f" kindref="member">RRComplexMatrixPtr</ref></type>
          <declname>mat</declname>
          <defname>matrixHandle</defname>
        </param>
        <briefdescription>
<para>Returns a complex matrix in string form. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns complex matrix as a character string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="718" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="718" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="group__toString_1gaff70db9c262110e72d1cf090b04d05a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::vectorToString</definition>
        <argsstring>(RRVectorPtr vecHandle)</argsstring>
        <name>vectorToString</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1a3be72d6006034fd349f753d2bf441bf7" kindref="member">RRVectorPtr</ref></type>
          <declname>vec</declname>
          <defname>vecHandle</defname>
        </param>
        <briefdescription>
<para>Returns a vector in string form. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns vector as a character string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="746" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="746" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="group__toString_1gaef1d1f1789f4c5bca4e6b7af4bf53885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *rrcCallConv</type>
        <definition>char* rrcCallConv rrc::complexVectorToString</definition>
        <argsstring>(RRComplexVectorPtr vecHandle)</argsstring>
        <name>complexVectorToString</name>
        <param>
          <type>const <ref refid="rrc__types_8h_1ae05c63419a6ca0575eb327fd04dae4b5" kindref="member">RRComplexVectorPtr</ref></type>
          <declname>vec</declname>
          <defname>vecHandle</defname>
        </param>
        <briefdescription>
<para>Returns a complex vector in string form. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns complex vector as a character string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" line="772" column="18" bodyfile="/home/vsts/work/1/s/wrappers/C/rrc_utilities.cpp" bodystart="772" bodyend="795"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/vsts/work/1/s/wrappers/C/rrArrayList.cpp" line="12" column="1"/>
  </compounddef>
</doxygen>
