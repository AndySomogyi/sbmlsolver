<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrr_1_1Solver" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>rr::Solver</compoundname>
    <basecompoundref refid="classrr_1_1Registrable" prot="public" virt="non-virtual">rr::Registrable</basecompoundref>
    <derivedcompoundref refid="classrr_1_1Integrator" prot="public" virt="non-virtual">rr::Integrator</derivedcompoundref>
    <derivedcompoundref refid="classrr_1_1SensitivitySolver" prot="public" virt="non-virtual">rr::SensitivitySolver</derivedcompoundref>
    <derivedcompoundref refid="classrr_1_1SteadyStateSolver" prot="public" virt="non-virtual">rr::SteadyStateSolver</derivedcompoundref>
    <includes refid="Solver_8h" local="no">Solver.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrr_1_1Solver_1adcbacd57e2871a83bb9c4d7a4038a069" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>using rr::Solver::SettingsList =  std::vector&lt;std::string&gt;</definition>
        <argsstring></argsstring>
        <name>SettingsList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="192" column="9" bodyfile="Solver.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrr_1_1Solver_1a61c0fd04ad69fc173c51dac3bdde2431" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classrr_1_1Setting" kindref="compound">Setting</ref> &gt;</type>
        <definition>using rr::Solver::SettingsMap =  std::unordered_map&lt;std::string, Setting&gt;</definition>
        <argsstring></argsstring>
        <name>SettingsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="193" column="9" bodyfile="Solver.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrr_1_1Solver_1a76b76c8ba3a31a2c6a600322c90a0452" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, std::string &gt;</type>
        <definition>using rr::Solver::DisplayNameMap =  std::unordered_map&lt;std::string, std::string&gt;</definition>
        <argsstring></argsstring>
        <name>DisplayNameMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="194" column="9" bodyfile="Solver.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrr_1_1Solver_1ac39f2073d482cdf591d93415557c6751" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, std::string &gt;</type>
        <definition>using rr::Solver::HintMap =  std::unordered_map&lt;std::string, std::string&gt;</definition>
        <argsstring></argsstring>
        <name>HintMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="195" column="9" bodyfile="Solver.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrr_1_1Solver_1a7d58e224664ab44e56f90802d9601f01" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, std::string &gt;</type>
        <definition>using rr::Solver::DescriptionMap =  std::unordered_map&lt;std::string, std::string&gt;</definition>
        <argsstring></argsstring>
        <name>DescriptionMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="196" column="9" bodyfile="Solver.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classrr_1_1Solver_1a99f48947491d7cd36c68cebba53915fe" prot="public" static="no" mutable="no">
        <type>SettingsList</type>
        <definition>SettingsList rr::Solver::sorted_settings</definition>
        <argsstring></argsstring>
        <name>sorted_settings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="198" column="22" bodyfile="Solver.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1Solver_1a44a22cf0edead17a9cc923d87dcc063e" prot="public" static="no" mutable="no">
        <type>SettingsMap</type>
        <definition>SettingsMap rr::Solver::settings</definition>
        <argsstring></argsstring>
        <name>settings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="199" column="21" bodyfile="Solver.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1Solver_1a199de66231b25fef30d8ef2bdff80db7" prot="public" static="no" mutable="no">
        <type>DisplayNameMap</type>
        <definition>DisplayNameMap rr::Solver::display_names_</definition>
        <argsstring></argsstring>
        <name>display_names_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="200" column="24" bodyfile="Solver.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1Solver_1a39049af7a03fd00b1021c1ce9a9691fc" prot="public" static="no" mutable="no">
        <type>HintMap</type>
        <definition>HintMap rr::Solver::hints</definition>
        <argsstring></argsstring>
        <name>hints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="201" column="17" bodyfile="Solver.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1Solver_1a7e07121f652db358045d6f7b95889ea3" prot="public" static="no" mutable="no">
        <type>DescriptionMap</type>
        <definition>DescriptionMap rr::Solver::descriptions</definition>
        <argsstring></argsstring>
        <name>descriptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="202" column="24" bodyfile="Solver.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrr_1_1Solver_1ab60e7640a8c959558a144d9d7ee45515" prot="protected" static="no" mutable="no">
        <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
        <definition>ExecutableModel* rr::Solver::mModel</definition>
        <argsstring></argsstring>
        <name>mModel</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>non-owning pointer to model </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="208" column="25" bodyfile="Solver.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrr_1_1Solver_1a04bba4a342cc7197750f080d41d439e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rr::Solver::Solver</definition>
        <argsstring>()=default</argsstring>
        <name>Solver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="46" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1aa0a07553e368f0be33b9bfc429782a97" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>rr::Solver::Solver</definition>
        <argsstring>(ExecutableModel *model)</argsstring>
        <name>Solver</name>
        <param>
          <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="48" column="18" bodyfile="Solver.cpp" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a3a6586c87e2218dd22f1461f50d5c0dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rr::Solver::~Solver</definition>
        <argsstring>() override=default</argsstring>
        <name>~Solver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="50" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a19315632eeab070bdbfe2fa4ae66ca6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::Solver::updateSettings</definition>
        <argsstring>(Dictionary *inputSettings)</argsstring>
        <name>updateSettings</name>
        <param>
          <type><ref refid="classrr_1_1Dictionary" kindref="compound">Dictionary</ref> *</type>
          <declname>inputSettings</declname>
        </param>
        <briefdescription>
<para>Update settings values. </para>
        </briefdescription>
        <detaileddescription>
<para>update the values of keys in<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>with the values. Keys that are not in <ref refid="classrr_1_1Solver" kindref="compound">Solver</ref> are ignored </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="57" column="15" bodyfile="Solver.cpp" bodystart="40" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1ae2b13c6ae06980b14a80e8a32766dcfa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; rr::Solver::getSettings</definition>
        <argsstring>() const</argsstring>
        <name>getSettings</name>
        <briefdescription>
<para>Get a list of all settings for this solver. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="63" column="21" bodyfile="Solver.cpp" bodystart="57" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a925e4dae5c4e3e71a2983dc58af9e550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, <ref refid="classrr_1_1Setting" kindref="compound">Setting</ref> &gt; &amp;</type>
        <definition>std::unordered_map&lt; std::string, Setting &gt; &amp; rr::Solver::getSettingsMap</definition>
        <argsstring>()</argsstring>
        <name>getSettingsMap</name>
        <briefdescription>
<para>get settings for this solver </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>mapping of keys which are setting names to values stored as Variants. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classrr_1_1Solver_1ae2b13c6ae06980b14a80e8a32766dcfa" kindref="member">getSettings</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="71" column="28" bodyfile="Solver.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a71c8b404a40447f879b2253e7dcc3b85" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::Solver::resetSettings</definition>
        <argsstring>()</argsstring>
        <name>resetSettings</name>
        <reimplementedby refid="classrr_1_1RK45Integrator_1a68cd9b39288762b25f1410aa743f703c">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1NLEQSolver_1a73142505757b0b6363da15e2b937dd78">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolverDecorator_1a6978cebc1cf1ac984be2051491170443">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1NewtonIteration_1aef52744c9ff9f21ad69a49b1fe8ef9c4">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1FixedPointIteration_1ab7451909f822f8642b7555248493371d">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolver_1ac9652965eb0defa7c12af91110dd68fc">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1ForwardSensitivitySolver_1a66033d9628dea4a1e2ffc2158087a2e1">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1GillespieIntegrator_1ac72e6b148def07a53c79e83441b380cd">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1RK4Integrator_1a1eb6cfa0ea863c828fc8b25ec2cfd389">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1CVODEIntegrator_1ac18581f5c000940449032e166ef48e79">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1KinsolSteadyStateSolver_1ad6bb33d80ec7660150167cac4aefa2ae">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1EulerIntegrator_1a345df1be0ad82f14a56273b89a26828a">resetSettings</reimplementedby>
        <briefdescription>
<para>Reset all settings to their respective default values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="76" column="22" bodyfile="Solver.cpp" bodystart="67" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a87339915a211b22ecd63078bb1cb7ca9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classrr_1_1Setting" kindref="compound">Setting</ref></type>
        <definition>Setting rr::Solver::getValue</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>getValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Get the value of an integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM, WBC </para>
</simplesect>
<simplesect kind="note"><para>Use one of the type-concrete versions like getValueAsInt to avoid type conversion gotchas </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="84" column="25" bodyfile="Solver.cpp" bodystart="104" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1afc1e25855220cbe469433c70f8c44ea5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classrr_1_1Setting" kindref="compound">Setting</ref></type>
        <definition>Setting rr::Solver::hasValue</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>hasValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Return true if this setting is supported by the integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="90" column="25" bodyfile="Solver.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1abbefd0f38dfa2651c74f8abbd6d7b143" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t rr::Solver::getNumParams</definition>
        <argsstring>() const</argsstring>
        <name>getNumParams</name>
        <briefdescription>
<para>Get the number of parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="96" column="24" bodyfile="Solver.cpp" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1ae2bb88ffce40a0136c86a020b4c39037" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getParamName</definition>
        <argsstring>(size_t n) const</argsstring>
        <name>getParamName</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the name of the parameter at index n. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="102" column="29" bodyfile="Solver.cpp" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1afc0a667f204105aa133376144ce14c75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getParamDisplayName</definition>
        <argsstring>(int n) const</argsstring>
        <name>getParamDisplayName</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the display name of the parameter at index n. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="108" column="29" bodyfile="Solver.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1aa604b810ab3f1a2c8bc6dfa6fc731dc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getParamHint</definition>
        <argsstring>(int n) const</argsstring>
        <name>getParamHint</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the hint of the parameter at index n. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="114" column="29" bodyfile="Solver.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1aa13e13a92531fde27fe5711790eee0f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getParamDesc</definition>
        <argsstring>(int n) const</argsstring>
        <name>getParamDesc</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the description of the parameter at index n. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="120" column="29" bodyfile="Solver.cpp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a83b99af970b895d62998bf90ec619168" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getValueAsString</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>getValueAsString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Wrapper for <ref refid="classrr_1_1Solver_1a87339915a211b22ecd63078bb1cb7ca9" kindref="member">getValue</ref> which converts output to a specific type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>WBC, JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="126" column="29" bodyfile="Solver.cpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a18fa004a818506c15d47fa28015039c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::Solver::setValue</definition>
        <argsstring>(const std::string &amp;key, Setting value)</argsstring>
        <name>setValue</name>
        <reimplementedby refid="classrr_1_1ForwardSensitivitySolver_1ae0b99769434152ba1fbd775f32f3aa22">setValue</reimplementedby>
        <reimplementedby refid="classrr_1_1GillespieIntegrator_1aa21499e410b057552054665291618348">setValue</reimplementedby>
        <reimplementedby refid="classrr_1_1CVODEIntegrator_1a2ba8be5c51129d05dd8ab5315dc12edc">setValue</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classrr_1_1Setting" kindref="compound">Setting</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="128" column="22" bodyfile="Solver.cpp" bodystart="125" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a3f7a3671a4f2ee508fa015ed4b164213" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getSettingsRepr</definition>
        <argsstring>() const</argsstring>
        <name>getSettingsRepr</name>
        <briefdescription>
<para>Get the solver settings as a std::string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="134" column="29" bodyfile="Solver.cpp" bodystart="170" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a37b032d8755eaccd3480531bdc2a4596" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::settingsPyDictRepr</definition>
        <argsstring>() const</argsstring>
        <name>settingsPyDictRepr</name>
        <briefdescription>
<para>Python dictionary-style std::string representation of settings. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="140" column="29" bodyfile="Solver.cpp" bodystart="179" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1af08f448f7eea26415a47caaae161de02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <reimplementedby refid="classrr_1_1Integrator_1adde5221e0d61f9f5398d69020e1a5a86">toString</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolver_1aaf40e2ae58d2f4fef80a00f5bb7fd413">toString</reimplementedby>
        <reimplementedby refid="classrr_1_1ForwardSensitivitySolver_1a3d626fc6eb7f2698840a4d2a94da5720">toString</reimplementedby>
        <reimplementedby refid="classrr_1_1EulerIntegrator_1a65fed1a29701ddcfb6d0d3f023550bc8">toString</reimplementedby>
        <briefdescription>
<para>Return a std::string representation of the solver. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="146" column="29" bodyfile="Solver.cpp" bodystart="187" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a2f2b574b220becfebd1be2d8cc34d550" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::toRepr</definition>
        <argsstring>() const</argsstring>
        <name>toRepr</name>
        <reimplementedby refid="classrr_1_1Integrator_1abb3c4ae3020a5df7abe40639037615cb">toRepr</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolver_1a4307ed20fd04adf61cc8b4ef9a88f747">toRepr</reimplementedby>
        <reimplementedby refid="classrr_1_1ForwardSensitivitySolver_1acd883d6f972f3735251d363a69ae9da1">toRepr</reimplementedby>
        <reimplementedby refid="classrr_1_1EulerIntegrator_1abc775885d87bf9afa1b5616fe28d1de3">toRepr</reimplementedby>
        <briefdescription>
<para>Return std::string representation a la Python <bold>repr</bold> method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="152" column="29" bodyfile="Solver.cpp" bodystart="197" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a1fce02df70c95855d9d3cd7e3d352c08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; rr::Solver::getDisplayName</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>getDisplayName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the hint associated with a given key. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="158" column="27" bodyfile="Solver.cpp" bodystart="135" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a4915611d49d03f0fe499bed99a05aae1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; rr::Solver::getHint</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>getHint</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the hint associated with a given key. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="164" column="27" bodyfile="Solver.cpp" bodystart="145" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a522a881e88165986944db55a8f2da845" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; rr::Solver::getDescription</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>getDescription</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the description associated with a given key. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="170" column="27" bodyfile="Solver.cpp" bodystart="155" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a0bd064d494a0701edffca5eb67b64b2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrr_1_1Setting_1af49342a0fabdeeafe649246089a72b40" kindref="member">Setting::TypeId</ref></type>
        <definition>Setting::TypeId rr::Solver::getType</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>getType</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the type associated with a given key. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="176" column="25" bodyfile="Solver.cpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1aecb0e7c619e544aeabc6db9903165158" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void rr::Solver::syncWithModel</definition>
        <argsstring>(ExecutableModel *m)=0</argsstring>
        <name>syncWithModel</name>
        <reimplementedby refid="classrr_1_1ForwardSensitivitySolver_1aa0560086789464708c95896272e1b5ce">syncWithModel</reimplementedby>
        <reimplementedby refid="classrr_1_1RK45Integrator_1ac72e73c1d53f4884d9976cacee27f738">syncWithModel</reimplementedby>
        <reimplementedby refid="classrr_1_1Integrator_1a6b12118cd1b0f047f5a64cfb0546b565">syncWithModel</reimplementedby>
        <reimplementedby refid="classrr_1_1NLEQSolver_1a02142cf0c637815a33c754e8637fdb3f">syncWithModel</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolverDecorator_1a3d28cd898cf997dbc2243b0fc2ae3856">syncWithModel</reimplementedby>
        <reimplementedby refid="classrr_1_1GillespieIntegrator_1ad928d3d4e5efbe04dcc2ab503119c745">syncWithModel</reimplementedby>
        <reimplementedby refid="classrr_1_1RK4Integrator_1a11c9feeea50fcf52a453f374c1152535">syncWithModel</reimplementedby>
        <reimplementedby refid="classrr_1_1CVODEIntegrator_1a6ffad2eceae5fda58900a1bbaa738eff">syncWithModel</reimplementedby>
        <reimplementedby refid="classrr_1_1KinsolSteadyStateSolver_1a49ceabb3db818eabcf56d77d28d60d6d">syncWithModel</reimplementedby>
        <param>
          <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Called whenever a new model is loaded to allow integrator to reset internal state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="183" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1ac89194d54aaad3ecc71e1cfbbef83d15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
        <definition>ExecutableModel * rr::Solver::getModel</definition>
        <argsstring>() const</argsstring>
        <name>getModel</name>
        <briefdescription>
<para>returns the pointer to the <ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="189" column="33" bodyfile="Solver.cpp" bodystart="204" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1ae4ae3d123747f44ba18cb94a37cdcc6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>virtual std::string rr::Registrable::getName</definition>
        <argsstring>() const=0</argsstring>
        <name>getName</name>
        <briefdescription>
<para>Gets the name associated with this <ref refid="classrr_1_1Solver" kindref="compound">Solver</ref> type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM, WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="42" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a30605288d92db09d42a886c132e5429f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>virtual std::string rr::Registrable::getHint</definition>
        <argsstring>() const=0</argsstring>
        <name>getHint</name>
        <briefdescription>
<para>Gets the hint associated with this <ref refid="classrr_1_1Solver" kindref="compound">Solver</ref> type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM, WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="43" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a1062b181455da6310d5678a4c978d072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>virtual std::string rr::Registrable::getDescription</definition>
        <argsstring>() const=0</argsstring>
        <name>getDescription</name>
        <briefdescription>
<para>Gets the description associated with this <ref refid="classrr_1_1Solver" kindref="compound">Solver</ref> type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM, WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="44" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrr_1_1Solver_1a9d801d628c80877bbadd4fcff012837d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::Solver::addSetting</definition>
        <argsstring>(const std::string &amp;name, const Setting &amp;val, const std::string &amp;display_name, const std::string &amp;hint, const std::string &amp;description)</argsstring>
        <name>addSetting</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classrr_1_1Setting" kindref="compound">Setting</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>display_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>hint</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="210" column="14" bodyfile="Solver.cpp" bodystart="29" bodyend="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all integrators and steady state solvers. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>rr::RK45Integrator</label>
        <link refid="classrr_1_1RK45Integrator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>rr::LinesearchNewtonIteration</label>
        <link refid="classrr_1_1LinesearchNewtonIteration"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>rr::EulerIntegrator</label>
        <link refid="classrr_1_1EulerIntegrator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>rr::KinsolSteadyStateSolver</label>
        <link refid="classrr_1_1KinsolSteadyStateSolver"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>rr::PresimulationDecorator</label>
        <link refid="classrr_1_1PresimulationDecorator"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rr::Integrator</label>
        <link refid="classrr_1_1Integrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>rr::GillespieIntegrator</label>
        <link refid="classrr_1_1GillespieIntegrator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rr::Registrable</label>
        <link refid="classrr_1_1Registrable"/>
      </node>
      <node id="20">
        <label>rr::SteadyStateSolverDecorator</label>
        <link refid="classrr_1_1SteadyStateSolverDecorator"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>rr::CVODEIntegrator</label>
        <link refid="classrr_1_1CVODEIntegrator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>rr::NLEQSolver</label>
        <link refid="classrr_1_1NLEQSolver"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>rr::TimeSeriesSensitivitySolver</label>
        <link refid="classrr_1_1TimeSeriesSensitivitySolver"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>rr::SteadyStateSolver</label>
        <link refid="classrr_1_1SteadyStateSolver"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>rr::NewtonIteration</label>
        <link refid="classrr_1_1NewtonIteration"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>rr::RK4Integrator</label>
        <link refid="classrr_1_1RK4Integrator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rr::Solver</label>
        <link refid="classrr_1_1Solver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>rr::PresimulationProgramDecorator</label>
        <link refid="classrr_1_1PresimulationProgramDecorator"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>rr::BasicNewtonIteration</label>
        <link refid="classrr_1_1BasicNewtonIteration"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>rr::SteadyStateSensitivitySolver</label>
        <link refid="classrr_1_1SteadyStateSensitivitySolver"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>rr::SensitivitySolver</label>
        <link refid="classrr_1_1SensitivitySolver"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>rr::FixedPointIteration</label>
        <link refid="classrr_1_1FixedPointIteration"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>rr::ForwardSensitivitySolver</label>
        <link refid="classrr_1_1ForwardSensitivitySolver"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>rr::Registrable</label>
        <link refid="classrr_1_1Registrable"/>
      </node>
      <node id="1">
        <label>rr::Solver</label>
        <link refid="classrr_1_1Solver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mModel</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>rr::ExecutableModel</label>
        <link refid="classrr_1_1ExecutableModel"/>
      </node>
    </collaborationgraph>
    <location file="Solver.h" line="39" column="1" bodyfile="Solver.h" bodystart="38" bodyend="212"/>
    <listofallmembers>
      <member refid="classrr_1_1Solver_1a9d801d628c80877bbadd4fcff012837d" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>addSetting</name></member>
      <member refid="classrr_1_1Registrable_1a3f529e138fa0288622525bc13cd73c5f" prot="public" virt="pure-virtual"><scope>rr::Solver</scope><name>construct</name></member>
      <member refid="classrr_1_1Solver_1a7d58e224664ab44e56f90802d9601f01" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>DescriptionMap</name></member>
      <member refid="classrr_1_1Solver_1a7e07121f652db358045d6f7b95889ea3" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>descriptions</name></member>
      <member refid="classrr_1_1Solver_1a199de66231b25fef30d8ef2bdff80db7" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>display_names_</name></member>
      <member refid="classrr_1_1Solver_1a76b76c8ba3a31a2c6a600322c90a0452" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>DisplayNameMap</name></member>
      <member refid="classrr_1_1Solver_1a522a881e88165986944db55a8f2da845" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getDescription</name></member>
      <member refid="classrr_1_1Solver_1a1062b181455da6310d5678a4c978d072" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getDescription</name></member>
      <member refid="classrr_1_1Registrable_1af8b4a2f0dc7cc99fa22c1056f917e5d4" prot="public" virt="pure-virtual" ambiguityscope="rr::Registrable::"><scope>rr::Solver</scope><name>getDescription</name></member>
      <member refid="classrr_1_1Solver_1a1fce02df70c95855d9d3cd7e3d352c08" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getDisplayName</name></member>
      <member refid="classrr_1_1Solver_1a4915611d49d03f0fe499bed99a05aae1" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getHint</name></member>
      <member refid="classrr_1_1Solver_1a30605288d92db09d42a886c132e5429f" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getHint</name></member>
      <member refid="classrr_1_1Registrable_1a1a6c686212133cda58ab44b310f401d9" prot="public" virt="pure-virtual" ambiguityscope="rr::Registrable::"><scope>rr::Solver</scope><name>getHint</name></member>
      <member refid="classrr_1_1Solver_1ac89194d54aaad3ecc71e1cfbbef83d15" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getModel</name></member>
      <member refid="classrr_1_1Solver_1ae4ae3d123747f44ba18cb94a37cdcc6d" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getName</name></member>
      <member refid="classrr_1_1Registrable_1a7d66e096a8c5cfd5e3fdb6cf5aa339d6" prot="public" virt="pure-virtual" ambiguityscope="rr::Registrable::"><scope>rr::Solver</scope><name>getName</name></member>
      <member refid="classrr_1_1Solver_1abbefd0f38dfa2651c74f8abbd6d7b143" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getNumParams</name></member>
      <member refid="classrr_1_1Solver_1aa13e13a92531fde27fe5711790eee0f7" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getParamDesc</name></member>
      <member refid="classrr_1_1Solver_1afc0a667f204105aa133376144ce14c75" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getParamDisplayName</name></member>
      <member refid="classrr_1_1Solver_1aa604b810ab3f1a2c8bc6dfa6fc731dc2" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getParamHint</name></member>
      <member refid="classrr_1_1Solver_1ae2bb88ffce40a0136c86a020b4c39037" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getParamName</name></member>
      <member refid="classrr_1_1Solver_1ae2b13c6ae06980b14a80e8a32766dcfa" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getSettings</name></member>
      <member refid="classrr_1_1Solver_1a925e4dae5c4e3e71a2983dc58af9e550" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getSettingsMap</name></member>
      <member refid="classrr_1_1Solver_1a3f7a3671a4f2ee508fa015ed4b164213" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getSettingsRepr</name></member>
      <member refid="classrr_1_1Solver_1a0bd064d494a0701edffca5eb67b64b2a" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getType</name></member>
      <member refid="classrr_1_1Solver_1a87339915a211b22ecd63078bb1cb7ca9" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getValue</name></member>
      <member refid="classrr_1_1Solver_1a83b99af970b895d62998bf90ec619168" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getValueAsString</name></member>
      <member refid="classrr_1_1Solver_1afc1e25855220cbe469433c70f8c44ea5" prot="public" virt="virtual"><scope>rr::Solver</scope><name>hasValue</name></member>
      <member refid="classrr_1_1Solver_1ac39f2073d482cdf591d93415557c6751" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>HintMap</name></member>
      <member refid="classrr_1_1Solver_1a39049af7a03fd00b1021c1ce9a9691fc" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>hints</name></member>
      <member refid="classrr_1_1Solver_1ab60e7640a8c959558a144d9d7ee45515" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>mModel</name></member>
      <member refid="classrr_1_1Solver_1a71c8b404a40447f879b2253e7dcc3b85" prot="public" virt="virtual"><scope>rr::Solver</scope><name>resetSettings</name></member>
      <member refid="classrr_1_1Solver_1a44a22cf0edead17a9cc923d87dcc063e" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>settings</name></member>
      <member refid="classrr_1_1Solver_1adcbacd57e2871a83bb9c4d7a4038a069" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>SettingsList</name></member>
      <member refid="classrr_1_1Solver_1a61c0fd04ad69fc173c51dac3bdde2431" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>SettingsMap</name></member>
      <member refid="classrr_1_1Solver_1a37b032d8755eaccd3480531bdc2a4596" prot="public" virt="virtual"><scope>rr::Solver</scope><name>settingsPyDictRepr</name></member>
      <member refid="classrr_1_1Solver_1a18fa004a818506c15d47fa28015039c6" prot="public" virt="virtual"><scope>rr::Solver</scope><name>setValue</name></member>
      <member refid="classrr_1_1Solver_1a04bba4a342cc7197750f080d41d439e5" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>Solver</name></member>
      <member refid="classrr_1_1Solver_1aa0a07553e368f0be33b9bfc429782a97" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>Solver</name></member>
      <member refid="classrr_1_1Solver_1a99f48947491d7cd36c68cebba53915fe" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>sorted_settings</name></member>
      <member refid="classrr_1_1Solver_1aecb0e7c619e544aeabc6db9903165158" prot="public" virt="pure-virtual"><scope>rr::Solver</scope><name>syncWithModel</name></member>
      <member refid="classrr_1_1Solver_1a2f2b574b220becfebd1be2d8cc34d550" prot="public" virt="virtual"><scope>rr::Solver</scope><name>toRepr</name></member>
      <member refid="classrr_1_1Solver_1af08f448f7eea26415a47caaae161de02" prot="public" virt="virtual"><scope>rr::Solver</scope><name>toString</name></member>
      <member refid="classrr_1_1Solver_1a19315632eeab070bdbfe2fa4ae66ca6c" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>updateSettings</name></member>
      <member refid="classrr_1_1Registrable_1aca014aaba0d4aaa80f89c4451bce5b4c" prot="public" virt="virtual"><scope>rr::Solver</scope><name>~Registrable</name></member>
      <member refid="classrr_1_1Solver_1a3a6586c87e2218dd22f1461f50d5c0dd" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>~Solver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
