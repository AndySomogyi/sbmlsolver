<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classrr_1_1Solver" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>rr::Solver</compoundname>
    <derivedcompoundref refid="classrr_1_1Integrator" prot="public" virt="non-virtual">rr::Integrator</derivedcompoundref>
    <derivedcompoundref refid="classrr_1_1SteadyStateSolver" prot="public" virt="non-virtual">rr::SteadyStateSolver</derivedcompoundref>
    <includes refid="Solver_8h" local="no">Solver.h</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classrr_1_1Solver_1adcbacd57e2871a83bb9c4d7a4038a069" prot="protected" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>using rr::Solver::SettingsList =  std::vector&lt;std::string&gt;</definition>
        <argsstring></argsstring>
        <name>SettingsList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="200" column="9" bodyfile="Solver.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrr_1_1Solver_1a61c0fd04ad69fc173c51dac3bdde2431" prot="protected" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classrr_1_1Setting" kindref="compound">Setting</ref> &gt;</type>
        <definition>using rr::Solver::SettingsMap =  std::unordered_map&lt;std::string, Setting&gt;</definition>
        <argsstring></argsstring>
        <name>SettingsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="201" column="9" bodyfile="Solver.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrr_1_1Solver_1a76b76c8ba3a31a2c6a600322c90a0452" prot="protected" static="no">
        <type>std::unordered_map&lt; std::string, std::string &gt;</type>
        <definition>using rr::Solver::DisplayNameMap =  std::unordered_map&lt;std::string, std::string&gt;</definition>
        <argsstring></argsstring>
        <name>DisplayNameMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="202" column="9" bodyfile="Solver.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrr_1_1Solver_1ac39f2073d482cdf591d93415557c6751" prot="protected" static="no">
        <type>std::unordered_map&lt; std::string, std::string &gt;</type>
        <definition>using rr::Solver::HintMap =  std::unordered_map&lt;std::string, std::string&gt;</definition>
        <argsstring></argsstring>
        <name>HintMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="203" column="9" bodyfile="Solver.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrr_1_1Solver_1a7d58e224664ab44e56f90802d9601f01" prot="protected" static="no">
        <type>std::unordered_map&lt; std::string, std::string &gt;</type>
        <definition>using rr::Solver::DescriptionMap =  std::unordered_map&lt;std::string, std::string&gt;</definition>
        <argsstring></argsstring>
        <name>DescriptionMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="204" column="9" bodyfile="Solver.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrr_1_1Solver_1a99f48947491d7cd36c68cebba53915fe" prot="protected" static="no" mutable="no">
        <type>SettingsList</type>
        <definition>SettingsList rr::Solver::sorted_settings</definition>
        <argsstring></argsstring>
        <name>sorted_settings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="206" column="22" bodyfile="Solver.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1Solver_1a44a22cf0edead17a9cc923d87dcc063e" prot="protected" static="no" mutable="no">
        <type>SettingsMap</type>
        <definition>SettingsMap rr::Solver::settings</definition>
        <argsstring></argsstring>
        <name>settings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="207" column="21" bodyfile="Solver.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1Solver_1a199de66231b25fef30d8ef2bdff80db7" prot="protected" static="no" mutable="no">
        <type>DisplayNameMap</type>
        <definition>DisplayNameMap rr::Solver::display_names_</definition>
        <argsstring></argsstring>
        <name>display_names_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="208" column="24" bodyfile="Solver.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1Solver_1a39049af7a03fd00b1021c1ce9a9691fc" prot="protected" static="no" mutable="no">
        <type>HintMap</type>
        <definition>HintMap rr::Solver::hints</definition>
        <argsstring></argsstring>
        <name>hints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="209" column="17" bodyfile="Solver.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1Solver_1a7e07121f652db358045d6f7b95889ea3" prot="protected" static="no" mutable="no">
        <type>DescriptionMap</type>
        <definition>DescriptionMap rr::Solver::descriptions</definition>
        <argsstring></argsstring>
        <name>descriptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="210" column="24" bodyfile="Solver.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1Solver_1ab60e7640a8c959558a144d9d7ee45515" prot="protected" static="no" mutable="no">
        <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
        <definition>ExecutableModel* rr::Solver::mModel</definition>
        <argsstring></argsstring>
        <name>mModel</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>non-owning pointer to model </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="215" column="25" bodyfile="Solver.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrr_1_1Solver_1a04bba4a342cc7197750f080d41d439e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rr::Solver::Solver</definition>
        <argsstring>()=default</argsstring>
        <name>Solver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="43" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1aa0a07553e368f0be33b9bfc429782a97" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>rr::Solver::Solver</definition>
        <argsstring>(ExecutableModel *model)</argsstring>
        <name>Solver</name>
        <param>
          <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="45" column="18" bodyfile="Solver.cpp" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a0e6558e376aee7e4d3a9b69b8c3ae08b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual rr::Solver::~Solver</definition>
        <argsstring>()=default</argsstring>
        <name>~Solver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="47" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a417cca64a18c63535f2091584f8fed91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string rr::Solver::getName</definition>
        <argsstring>() const =0</argsstring>
        <name>getName</name>
        <reimplementedby refid="classrr_1_1EulerIntegrator_1a44c17c0740b6d7855f10849bae3b1223">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1GillespieIntegrator_1a290f7167ef2a6da01ff1543c496e1215">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1RK45Integrator_1aebee4c612006c929ba1d194b4258fa55">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1RK4Integrator_1ae65f8c20d95f0bc6018992d3803c3287">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1SensitivitySolver_1a6425f57bb72bb883a05ded13555714d5">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1AdjointSensitivitySolver_1ae087384b93e1ecfdc01e419fc2f9c0c9">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1BasicNewtonIteration_1abba6c099dc88a3b80d3a2d65c9c43e03">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1CVODEIntegrator_1aa889b08549036792918c41e88e2097f4">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1FixedPointIteration_1a9e1334eebd535c642abb8593d4e46824">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1ForwardSensitivitySolver_1a38a772f5306181ab61940bd453059ce4">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1LinesearchNewtonIteration_1a62113dcfc8a9d93fd419f025bc202563">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1NewtonIteration_1a5a77fd21be6a9af126872232998bfeb2">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1NLEQ1Solver_1aa0a09770b4595f7cc7b698055d2c4d1a">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1NLEQ2Solver_1acab401cc8acf3cf2049557b10342efe1">getName</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolverDecorator_1ab40943abac1972772212fb7fad42afa3">getName</reimplementedby>
        <briefdescription>
<para>Get the name of this solver. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="53" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a86067147c7631ca80d51667322f1a8f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string rr::Solver::getDescription</definition>
        <argsstring>() const =0</argsstring>
        <name>getDescription</name>
        <reimplementedby refid="classrr_1_1EulerIntegrator_1ae8553876982ae833839b7e33c08abdec">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1GillespieIntegrator_1adc46266d77d8c9d54bca86ca3d402f8f">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1RK45Integrator_1a45d69589da662628a6f0f66c200614e3">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1RK4Integrator_1ad4638630bbbfc3bc62adfdfdebc9bde9">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1SensitivitySolver_1a41ff63b9c439924d5aa1e9c9315bda1c">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1AdjointSensitivitySolver_1a782fdefcceb9ab7983568dd8968bbf3e">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1BasicNewtonIteration_1a52d645f2934c5230411d7ddfbe56bc78">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1CVODEIntegrator_1a1c6a393504cc85f2dc236abd0cb5577a">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1FixedPointIteration_1a4f8a179c87378739262b858a4e279642">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1ForwardSensitivitySolver_1ad1f87f41aa3d2798b5b129f1ca773a08">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1LinesearchNewtonIteration_1a31c7aeb461a19411e3b48336d16401f6">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1NewtonIteration_1ae1119d11821a6b1fb52fc84186d91b1e">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1NLEQ1Solver_1a3305ca56332184b9747f95a86c46c6ca">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1NLEQ2Solver_1aa262aaf5e1361ac34802a3e4c28772af">getDescription</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolverDecorator_1aeee54937d2c9bc9959e7be1ed217831c">getDescription</reimplementedby>
        <briefdescription>
<para>Get the description of this solver. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="59" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1aff005f7e71bc73123ecbd511a77f71b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string rr::Solver::getHint</definition>
        <argsstring>() const =0</argsstring>
        <name>getHint</name>
        <reimplementedby refid="classrr_1_1EulerIntegrator_1a2acf8abc8c584f487b5a394bcd3a1bdb">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1GillespieIntegrator_1a9903b945ac591f39cb3e93167fe45514">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1RK45Integrator_1ae5526461902e834afff94a18f679dbe3">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1RK4Integrator_1a2f98503350687e02bea28077f3538b07">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1SensitivitySolver_1ad2d350b1f013ba1fecdb40e7ff04f32d">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1AdjointSensitivitySolver_1a7b2b06f0e6b9d416c53e1c388b81597a">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1BasicNewtonIteration_1a4ed6c97258f57dfe0f4653284f6bb9ac">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1CVODEIntegrator_1addde67b3639fe1347efc2a37bbfdd60e">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1FixedPointIteration_1a694db68c3021fcbceec701335dffd2ee">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1ForwardSensitivitySolver_1a7ebffaf9c2b7d876ba0a845e869b0558">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1LinesearchNewtonIteration_1a39c0f6a3a82a515f4d71fdfdb4b25fc3">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1NewtonIteration_1ac346fbad167b7d4f1bcadb6ad9049ac2">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1NLEQ1Solver_1ad0b6aa0960821af4c9b4fcf6d2268790">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1NLEQ2Solver_1acb4cad3d5920adff567ee9a70d3646bc">getHint</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolverDecorator_1a010d1f84529bbcc1177f35ee646e8b6c">getHint</reimplementedby>
        <briefdescription>
<para>Get a (user-readable) hint for this solver. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="65" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a19315632eeab070bdbfe2fa4ae66ca6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::Solver::updateSettings</definition>
        <argsstring>(Dictionary *inputSettings)</argsstring>
        <name>updateSettings</name>
        <param>
          <type><ref refid="classrr_1_1Dictionary" kindref="compound">Dictionary</ref> *</type>
          <declname>inputSettings</declname>
        </param>
        <briefdescription>
<para>Update settings values. </para>
        </briefdescription>
        <detaileddescription>
<para>update the values of keys in<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>with the values. Keys that are not in <ref refid="classrr_1_1Solver" kindref="compound">Solver</ref> are ignored </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="72" column="15" bodyfile="Solver.cpp" bodystart="38" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1ae2b13c6ae06980b14a80e8a32766dcfa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; rr::Solver::getSettings</definition>
        <argsstring>() const</argsstring>
        <name>getSettings</name>
        <briefdescription>
<para>Get a list of all settings for this solver. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="78" column="21" bodyfile="Solver.cpp" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a925e4dae5c4e3e71a2983dc58af9e550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, <ref refid="classrr_1_1Setting" kindref="compound">Setting</ref> &gt; &amp;</type>
        <definition>std::unordered_map&lt; std::string, Setting &gt; &amp; rr::Solver::getSettingsMap</definition>
        <argsstring>()</argsstring>
        <name>getSettingsMap</name>
        <briefdescription>
<para>get settings for this solver </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>mapping of keys which are setting names to values stored as Variants. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classrr_1_1Solver_1ae2b13c6ae06980b14a80e8a32766dcfa" kindref="member">getSettings</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="86" column="28" bodyfile="Solver.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a71c8b404a40447f879b2253e7dcc3b85" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::Solver::resetSettings</definition>
        <argsstring>()</argsstring>
        <name>resetSettings</name>
        <reimplementedby refid="classrr_1_1EulerIntegrator_1ade4200288b7b99ec7eee7cde2d9729b6">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1GillespieIntegrator_1a2dcbd5a36b094a9b14d1e8e423204c7b">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1RK45Integrator_1a68cd9b39288762b25f1410aa743f703c">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1RK4Integrator_1ae7537cb767479cd0ab19dc405ed13376">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1CVODEIntegrator_1ac18581f5c000940449032e166ef48e79">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1FixedPointIteration_1ab7451909f822f8642b7555248493371d">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1KinsolSteadyStateSolver_1ad6bb33d80ec7660150167cac4aefa2ae">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1NewtonIteration_1aef52744c9ff9f21ad69a49b1fe8ef9c4">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1NLEQSolver_1a73142505757b0b6363da15e2b937dd78">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1SensitivitySolver_1a9ef849e2342e6c7437259d41cce5ed05">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolver_1ac9652965eb0defa7c12af91110dd68fc">resetSettings</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolverDecorator_1a6978cebc1cf1ac984be2051491170443">resetSettings</reimplementedby>
        <briefdescription>
<para>Reset all settings to their respective default values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="91" column="22" bodyfile="Solver.cpp" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a87339915a211b22ecd63078bb1cb7ca9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classrr_1_1Setting" kindref="compound">Setting</ref></type>
        <definition>Setting rr::Solver::getValue</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>getValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Get the value of an integrator setting. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM, WBC </para>
</simplesect>
<simplesect kind="note"><para>Use one of the type-concrete versions like getValueAsInt to avoid type conversion gotchas </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="99" column="25" bodyfile="Solver.cpp" bodystart="102" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1afc1e25855220cbe469433c70f8c44ea5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classrr_1_1Setting" kindref="compound">Setting</ref></type>
        <definition>Setting rr::Solver::hasValue</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>hasValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Return true if this setting is supported by the integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="105" column="25" bodyfile="Solver.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1abbefd0f38dfa2651c74f8abbd6d7b143" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t rr::Solver::getNumParams</definition>
        <argsstring>() const</argsstring>
        <name>getNumParams</name>
        <briefdescription>
<para>Get the number of parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="111" column="24" bodyfile="Solver.cpp" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1ae2bb88ffce40a0136c86a020b4c39037" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getParamName</definition>
        <argsstring>(size_t n) const</argsstring>
        <name>getParamName</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the name of the parameter at index n. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="117" column="29" bodyfile="Solver.cpp" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1afc0a667f204105aa133376144ce14c75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getParamDisplayName</definition>
        <argsstring>(int n) const</argsstring>
        <name>getParamDisplayName</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the display name of the parameter at index n. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="123" column="29" bodyfile="Solver.cpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1aa604b810ab3f1a2c8bc6dfa6fc731dc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getParamHint</definition>
        <argsstring>(int n) const</argsstring>
        <name>getParamHint</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the hint of the parameter at index n. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="129" column="29" bodyfile="Solver.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1aa13e13a92531fde27fe5711790eee0f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getParamDesc</definition>
        <argsstring>(int n) const</argsstring>
        <name>getParamDesc</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the description of the parameter at index n. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="135" column="29" bodyfile="Solver.cpp" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a83b99af970b895d62998bf90ec619168" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getValueAsString</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>getValueAsString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Wrapper for <ref refid="classrr_1_1Solver_1a87339915a211b22ecd63078bb1cb7ca9" kindref="member">getValue</ref> which converts output to a specific type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>WBC, JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="141" column="29" bodyfile="Solver.cpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a18fa004a818506c15d47fa28015039c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::Solver::setValue</definition>
        <argsstring>(const std::string &amp;key, Setting value)</argsstring>
        <name>setValue</name>
        <reimplementedby refid="classrr_1_1GillespieIntegrator_1af80e362ba349ce060c926c8d840835df">setValue</reimplementedby>
        <reimplementedby refid="classrr_1_1CVODEIntegrator_1a2ba8be5c51129d05dd8ab5315dc12edc">setValue</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classrr_1_1Setting" kindref="compound">Setting</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="143" column="22" bodyfile="Solver.cpp" bodystart="123" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a3f7a3671a4f2ee508fa015ed4b164213" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::getSettingsRepr</definition>
        <argsstring>() const</argsstring>
        <name>getSettingsRepr</name>
        <briefdescription>
<para>Get the solver settings as a std::string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="149" column="29" bodyfile="Solver.cpp" bodystart="166" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a37b032d8755eaccd3480531bdc2a4596" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::settingsPyDictRepr</definition>
        <argsstring>() const</argsstring>
        <name>settingsPyDictRepr</name>
        <briefdescription>
<para>Python dictionary-style std::string representation of settings. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="155" column="29" bodyfile="Solver.cpp" bodystart="175" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1af08f448f7eea26415a47caaae161de02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <reimplementedby refid="classrr_1_1EulerIntegrator_1aeafbbe730c71a4627fb79f21e0d839ad">toString</reimplementedby>
        <reimplementedby refid="classrr_1_1Integrator_1adde5221e0d61f9f5398d69020e1a5a86">toString</reimplementedby>
        <reimplementedby refid="classrr_1_1SensitivitySolver_1ab48e540f8b1ccc44da011f0de0714582">toString</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolver_1aaf40e2ae58d2f4fef80a00f5bb7fd413">toString</reimplementedby>
        <briefdescription>
<para>Return a std::string representation of the solver. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="161" column="29" bodyfile="Solver.cpp" bodystart="183" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a2f2b574b220becfebd1be2d8cc34d550" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::Solver::toRepr</definition>
        <argsstring>() const</argsstring>
        <name>toRepr</name>
        <reimplementedby refid="classrr_1_1EulerIntegrator_1a4f484ed1c727f3f45f90586de64e329f">toRepr</reimplementedby>
        <reimplementedby refid="classrr_1_1Integrator_1abb3c4ae3020a5df7abe40639037615cb">toRepr</reimplementedby>
        <reimplementedby refid="classrr_1_1SensitivitySolver_1a1acd022a24aeff09f46f6ef7e5960e65">toRepr</reimplementedby>
        <reimplementedby refid="classrr_1_1SteadyStateSolver_1a4307ed20fd04adf61cc8b4ef9a88f747">toRepr</reimplementedby>
        <briefdescription>
<para>Return std::string representation a la Python <bold>repr</bold> method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="167" column="29" bodyfile="Solver.cpp" bodystart="193" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a1fce02df70c95855d9d3cd7e3d352c08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; rr::Solver::getDisplayName</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>getDisplayName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the hint associated with a given key. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="173" column="27" bodyfile="Solver.cpp" bodystart="131" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a4915611d49d03f0fe499bed99a05aae1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; rr::Solver::getHint</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>getHint</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the hint associated with a given key. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="179" column="27" bodyfile="Solver.cpp" bodystart="141" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a522a881e88165986944db55a8f2da845" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; rr::Solver::getDescription</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>getDescription</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the description associated with a given key. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="185" column="27" bodyfile="Solver.cpp" bodystart="151" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1a0bd064d494a0701edffca5eb67b64b2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrr_1_1Setting_1af49342a0fabdeeafe649246089a72b40" kindref="member">Setting::TypeId</ref></type>
        <definition>Setting::TypeId rr::Solver::getType</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>getType</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the type associated with a given key. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="191" column="25" bodyfile="Solver.cpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1Solver_1ac89194d54aaad3ecc71e1cfbbef83d15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
        <definition>ExecutableModel * rr::Solver::getModel</definition>
        <argsstring>() const</argsstring>
        <name>getModel</name>
        <briefdescription>
<para>returns the pointer to the <ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="196" column="33" bodyfile="Solver.cpp" bodystart="200" bodyend="205"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrr_1_1Solver_1ad5b8ac1ef687d1a3c9f1f305cb73804d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::Solver::addSetting</definition>
        <argsstring>(const std::string &amp;name, Setting val, std::string display_name, std::string hint, std::string description)</argsstring>
        <name>addSetting</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classrr_1_1Setting" kindref="compound">Setting</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>display_name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>hint</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Solver.h" line="217" column="14" bodyfile="Solver.cpp" bodystart="29" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all integrators and steady state solvers. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="9">
        <label>rr::RK45Integrator</label>
        <link refid="classrr_1_1RK45Integrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>rr::LinesearchNewtonIteration</label>
        <link refid="classrr_1_1LinesearchNewtonIteration"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>rr::EulerIntegrator</label>
        <link refid="classrr_1_1EulerIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>rr::KinsolSteadyStateSolver</label>
        <link refid="classrr_1_1KinsolSteadyStateSolver"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>rr::PresimulationDecorator</label>
        <link refid="classrr_1_1PresimulationDecorator"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rr::Integrator</label>
        <link refid="classrr_1_1Integrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>rr::GillespieIntegrator</label>
        <link refid="classrr_1_1GillespieIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>rr::NLEQ2Solver</label>
        <link refid="classrr_1_1NLEQ2Solver"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>rr::SteadyStateSolverDecorator</label>
        <link refid="classrr_1_1SteadyStateSolverDecorator"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>rr::ApproxSteadyStateDecorator</label>
        <link refid="classrr_1_1ApproxSteadyStateDecorator"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rr::CVODEIntegrator</label>
        <link refid="classrr_1_1CVODEIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>rr::NLEQSolver</label>
        <link refid="classrr_1_1NLEQSolver"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>rr::SteadyStateSolver</label>
        <link refid="classrr_1_1SteadyStateSolver"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>rr::NewtonIteration</label>
        <link refid="classrr_1_1NewtonIteration"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>rr::RK4Integrator</label>
        <link refid="classrr_1_1RK4Integrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rr::Solver</label>
        <link refid="classrr_1_1Solver"/>
      </node>
      <node id="23">
        <label>rr::PresimulationProgramDecorator</label>
        <link refid="classrr_1_1PresimulationProgramDecorator"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>rr::BasicNewtonIteration</label>
        <link refid="classrr_1_1BasicNewtonIteration"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>rr::NLEQ1Solver</label>
        <link refid="classrr_1_1NLEQ1Solver"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>rr::AdjointSensitivitySolver</label>
        <link refid="classrr_1_1AdjointSensitivitySolver"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>rr::SensitivitySolver</label>
        <link refid="classrr_1_1SensitivitySolver"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>rr::FixedPointIteration</label>
        <link refid="classrr_1_1FixedPointIteration"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>rr::ForwardSensitivitySolver</label>
        <link refid="classrr_1_1ForwardSensitivitySolver"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>rr::Solver</label>
        <link refid="classrr_1_1Solver"/>
        <childnode refid="2" relation="usage">
          <edgelabel>mModel</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>rr::ExecutableModel</label>
        <link refid="classrr_1_1ExecutableModel"/>
      </node>
    </collaborationgraph>
    <location file="Solver.h" line="39" column="5" bodyfile="Solver.h" bodystart="40" bodyend="219"/>
    <listofallmembers>
      <member refid="classrr_1_1Solver_1ad5b8ac1ef687d1a3c9f1f305cb73804d" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>addSetting</name></member>
      <member refid="classrr_1_1Solver_1a7d58e224664ab44e56f90802d9601f01" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>DescriptionMap</name></member>
      <member refid="classrr_1_1Solver_1a7e07121f652db358045d6f7b95889ea3" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>descriptions</name></member>
      <member refid="classrr_1_1Solver_1a199de66231b25fef30d8ef2bdff80db7" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>display_names_</name></member>
      <member refid="classrr_1_1Solver_1a76b76c8ba3a31a2c6a600322c90a0452" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>DisplayNameMap</name></member>
      <member refid="classrr_1_1Solver_1a86067147c7631ca80d51667322f1a8f5" prot="public" virt="pure-virtual"><scope>rr::Solver</scope><name>getDescription</name></member>
      <member refid="classrr_1_1Solver_1a522a881e88165986944db55a8f2da845" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getDescription</name></member>
      <member refid="classrr_1_1Solver_1a1fce02df70c95855d9d3cd7e3d352c08" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getDisplayName</name></member>
      <member refid="classrr_1_1Solver_1aff005f7e71bc73123ecbd511a77f71b6" prot="public" virt="pure-virtual"><scope>rr::Solver</scope><name>getHint</name></member>
      <member refid="classrr_1_1Solver_1a4915611d49d03f0fe499bed99a05aae1" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getHint</name></member>
      <member refid="classrr_1_1Solver_1ac89194d54aaad3ecc71e1cfbbef83d15" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getModel</name></member>
      <member refid="classrr_1_1Solver_1a417cca64a18c63535f2091584f8fed91" prot="public" virt="pure-virtual"><scope>rr::Solver</scope><name>getName</name></member>
      <member refid="classrr_1_1Solver_1abbefd0f38dfa2651c74f8abbd6d7b143" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getNumParams</name></member>
      <member refid="classrr_1_1Solver_1aa13e13a92531fde27fe5711790eee0f7" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getParamDesc</name></member>
      <member refid="classrr_1_1Solver_1afc0a667f204105aa133376144ce14c75" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getParamDisplayName</name></member>
      <member refid="classrr_1_1Solver_1aa604b810ab3f1a2c8bc6dfa6fc731dc2" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getParamHint</name></member>
      <member refid="classrr_1_1Solver_1ae2bb88ffce40a0136c86a020b4c39037" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getParamName</name></member>
      <member refid="classrr_1_1Solver_1ae2b13c6ae06980b14a80e8a32766dcfa" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getSettings</name></member>
      <member refid="classrr_1_1Solver_1a925e4dae5c4e3e71a2983dc58af9e550" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getSettingsMap</name></member>
      <member refid="classrr_1_1Solver_1a3f7a3671a4f2ee508fa015ed4b164213" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getSettingsRepr</name></member>
      <member refid="classrr_1_1Solver_1a0bd064d494a0701edffca5eb67b64b2a" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>getType</name></member>
      <member refid="classrr_1_1Solver_1a87339915a211b22ecd63078bb1cb7ca9" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getValue</name></member>
      <member refid="classrr_1_1Solver_1a83b99af970b895d62998bf90ec619168" prot="public" virt="virtual"><scope>rr::Solver</scope><name>getValueAsString</name></member>
      <member refid="classrr_1_1Solver_1afc1e25855220cbe469433c70f8c44ea5" prot="public" virt="virtual"><scope>rr::Solver</scope><name>hasValue</name></member>
      <member refid="classrr_1_1Solver_1ac39f2073d482cdf591d93415557c6751" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>HintMap</name></member>
      <member refid="classrr_1_1Solver_1a39049af7a03fd00b1021c1ce9a9691fc" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>hints</name></member>
      <member refid="classrr_1_1Solver_1ab60e7640a8c959558a144d9d7ee45515" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>mModel</name></member>
      <member refid="classrr_1_1Solver_1a71c8b404a40447f879b2253e7dcc3b85" prot="public" virt="virtual"><scope>rr::Solver</scope><name>resetSettings</name></member>
      <member refid="classrr_1_1Solver_1a44a22cf0edead17a9cc923d87dcc063e" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>settings</name></member>
      <member refid="classrr_1_1Solver_1adcbacd57e2871a83bb9c4d7a4038a069" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>SettingsList</name></member>
      <member refid="classrr_1_1Solver_1a61c0fd04ad69fc173c51dac3bdde2431" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>SettingsMap</name></member>
      <member refid="classrr_1_1Solver_1a37b032d8755eaccd3480531bdc2a4596" prot="public" virt="virtual"><scope>rr::Solver</scope><name>settingsPyDictRepr</name></member>
      <member refid="classrr_1_1Solver_1a18fa004a818506c15d47fa28015039c6" prot="public" virt="virtual"><scope>rr::Solver</scope><name>setValue</name></member>
      <member refid="classrr_1_1Solver_1a04bba4a342cc7197750f080d41d439e5" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>Solver</name></member>
      <member refid="classrr_1_1Solver_1aa0a07553e368f0be33b9bfc429782a97" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>Solver</name></member>
      <member refid="classrr_1_1Solver_1a99f48947491d7cd36c68cebba53915fe" prot="protected" virt="non-virtual"><scope>rr::Solver</scope><name>sorted_settings</name></member>
      <member refid="classrr_1_1Solver_1a2f2b574b220becfebd1be2d8cc34d550" prot="public" virt="virtual"><scope>rr::Solver</scope><name>toRepr</name></member>
      <member refid="classrr_1_1Solver_1af08f448f7eea26415a47caaae161de02" prot="public" virt="virtual"><scope>rr::Solver</scope><name>toString</name></member>
      <member refid="classrr_1_1Solver_1a19315632eeab070bdbfe2fa4ae66ca6c" prot="public" virt="non-virtual"><scope>rr::Solver</scope><name>updateSettings</name></member>
      <member refid="classrr_1_1Solver_1a0e6558e376aee7e4d3a9b69b8c3ae08b" prot="public" virt="virtual"><scope>rr::Solver</scope><name>~Solver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
