<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classrrllvm_1_1LLVMException" kind="class" language="C++" prot="public">
    <compoundname>rrllvm::LLVMException</compoundname>
    <basecompoundref prot="public" virt="non-virtual">runtime_error</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrrllvm_1_1LLVMException_1a31f7ff05bf2e5a461acea2b0c4960335" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rrllvm::LLVMException::LLVMException</definition>
        <argsstring>(const std::string &amp;what)</argsstring>
        <name>LLVMException</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>what</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMException.h" line="21" column="14" bodyfile="llvm/LLVMException.h" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMException_1a796568a0c6d31685f6ade30b8e7cb8d4" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rrllvm::LLVMException::LLVMException</definition>
        <argsstring>(const std::string &amp;what, const std::string &amp;where)</argsstring>
        <name>LLVMException</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>what</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>where</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMException.h" line="26" column="14" bodyfile="llvm/LLVMException.h" bodystart="26" bodyend="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>std::runtime_error</label>
      </node>
      <node id="1">
        <label>rrllvm::LLVMException</label>
        <link refid="classrrllvm_1_1LLVMException"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>std::runtime_error</label>
      </node>
      <node id="1">
        <label>rrllvm::LLVMException</label>
        <link refid="classrrllvm_1_1LLVMException"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="llvm/LLVMException.h" line="18" column="1" bodyfile="llvm/LLVMException.h" bodystart="19" bodyend="30"/>
    <listofallmembers>
      <member refid="classrrllvm_1_1LLVMException_1a31f7ff05bf2e5a461acea2b0c4960335" prot="public" virt="non-virtual"><scope>rrllvm::LLVMException</scope><name>LLVMException</name></member>
      <member refid="classrrllvm_1_1LLVMException_1a796568a0c6d31685f6ade30b8e7cb8d4" prot="public" virt="non-virtual"><scope>rrllvm::LLVMException</scope><name>LLVMException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
