<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classrr_1_1CodeBuilder" kind="class" language="C++" prot="public">
    <compoundname>rr::CodeBuilder</compoundname>
    <basecompoundref refid="classrr_1_1StringBuilder" prot="public" virt="non-virtual">rr::StringBuilder</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrr_1_1CodeBuilder_1a6e5418172e85de4973acb02c18f5210e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int rr::CodeBuilder::mSizeOfVarField1</definition>
        <argsstring></argsstring>
        <name>mSizeOfVarField1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCodeBuilder.h" line="11" column="33" bodyfile="c/rrCodeBuilder.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CodeBuilder_1a6af5b51e3bd2b6632c2960d75c1f5675" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int rr::CodeBuilder::mSizeOfVarField2</definition>
        <argsstring></argsstring>
        <name>mSizeOfVarField2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCodeBuilder.h" line="12" column="33" bodyfile="c/rrCodeBuilder.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CodeBuilder_1a73d1b42f7d8aa5b23ac2dd3e4a27c952" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int rr::CodeBuilder::mSizeOfVarField3</definition>
        <argsstring></argsstring>
        <name>mSizeOfVarField3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCodeBuilder.h" line="13" column="33" bodyfile="c/rrCodeBuilder.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CodeBuilder_1a20a6a6bf231de607e1a84583294cbdff" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string rr::CodeBuilder::mDeclSpec</definition>
        <argsstring></argsstring>
        <name>mDeclSpec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCodeBuilder.h" line="14" column="33" bodyfile="c/rrCodeBuilder.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CodeBuilder_1ad9a1edafac5badb9f82dd0efa1f57bba" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string rr::CodeBuilder::mCallingConvention</definition>
        <argsstring></argsstring>
        <name>mCallingConvention</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCodeBuilder.h" line="15" column="33" bodyfile="c/rrCodeBuilder.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrr_1_1CodeBuilder_1ae3c155cf3b3b845130eecf9d591b32c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rr::CodeBuilder::CodeBuilder</definition>
        <argsstring>(const string &amp;aStr=&quot;&quot;, const string &amp;decl_spec=&quot;D_S&quot;, const string &amp;call_conv=&quot;__cdecl&quot;)</argsstring>
        <name>CodeBuilder</name>
        <param>
          <type>const string &amp;</type>
          <declname>aStr</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>decl_spec</declname>
          <defval>&quot;D_S&quot;</defval>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>call_conv</declname>
          <defval>&quot;__cdecl&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCodeBuilder.h" line="18" column="33" bodyfile="c/rrCodeBuilder.cpp" bodystart="10" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CodeBuilder_1a8e2845cc9b019c5991317cef016d4a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::CodeBuilder::FormatVariable</definition>
        <argsstring>(const string &amp;type, const string &amp;varName, const string &amp;comment=&quot;&quot;)</argsstring>
        <name>FormatVariable</name>
        <param>
          <type>const string &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>comment</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCodeBuilder.h" line="19" column="33" bodyfile="c/rrCodeBuilder.cpp" bodystart="21" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CodeBuilder_1a32e654c9f7b604738cd0b50e49b6e9f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::CodeBuilder::AddFunctionExport</definition>
        <argsstring>(const string &amp;retValue, const string &amp;funcProto)</argsstring>
        <name>AddFunctionExport</name>
        <param>
          <type>const string &amp;</type>
          <declname>retValue</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>funcProto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCodeBuilder.h" line="20" column="33" bodyfile="c/rrCodeBuilder.cpp" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CodeBuilder_1afea965cb51ea4a0e587d55d6f605d612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::CodeBuilder::AddFunctionProto</definition>
        <argsstring>(const string &amp;retValue, const string &amp;funcProto)</argsstring>
        <name>AddFunctionProto</name>
        <param>
          <type>const string &amp;</type>
          <declname>retValue</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>funcProto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCodeBuilder.h" line="21" column="33" bodyfile="c/rrCodeBuilder.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CodeBuilder_1a049b9a239b9da26a2a0c110bdae033ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::CodeBuilder::FormatArray</definition>
        <argsstring>(const string &amp;type, const string &amp;varName, const int &amp;arraySize, const string &amp;comment=&quot;&quot;)</argsstring>
        <name>FormatArray</name>
        <param>
          <type>const string &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>arraySize</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>comment</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCodeBuilder.h" line="22" column="33" bodyfile="c/rrCodeBuilder.cpp" bodystart="44" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>rr::CodeBuilder</label>
        <link refid="classrr_1_1CodeBuilder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rr::StringBuilder</label>
        <link refid="classrr_1_1StringBuilder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>stringstream</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="1">
        <label>rr::CodeBuilder</label>
        <link refid="classrr_1_1CodeBuilder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>mCallingConvention</edgelabel>
          <edgelabel>mDeclSpec</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>rr::StringBuilder</label>
        <link refid="classrr_1_1StringBuilder"/>
        <childnode refid="3" relation="usage">
          <edgelabel>mStringing</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="c/rrCodeBuilder.h" line="8" column="1" bodyfile="c/rrCodeBuilder.h" bodystart="9" bodyend="23"/>
    <listofallmembers>
      <member refid="classrr_1_1CodeBuilder_1a32e654c9f7b604738cd0b50e49b6e9f6" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>AddFunctionExport</name></member>
      <member refid="classrr_1_1CodeBuilder_1afea965cb51ea4a0e587d55d6f605d612" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>AddFunctionProto</name></member>
      <member refid="classrr_1_1StringBuilder_1a3a466c3f18ad159fa14d41e7c842c59d" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>Clear</name></member>
      <member refid="classrr_1_1CodeBuilder_1ae3c155cf3b3b845130eecf9d591b32c2" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>CodeBuilder</name></member>
      <member refid="classrr_1_1CodeBuilder_1a049b9a239b9da26a2a0c110bdae033ee" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>FormatArray</name></member>
      <member refid="classrr_1_1CodeBuilder_1a8e2845cc9b019c5991317cef016d4a89" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>FormatVariable</name></member>
      <member refid="classrr_1_1StringBuilder_1a9b9af43f8958012b55538082ab667301" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>Line</name></member>
      <member refid="classrr_1_1CodeBuilder_1ad9a1edafac5badb9f82dd0efa1f57bba" prot="protected" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>mCallingConvention</name></member>
      <member refid="classrr_1_1CodeBuilder_1a20a6a6bf231de607e1a84583294cbdff" prot="protected" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>mDeclSpec</name></member>
      <member refid="classrr_1_1CodeBuilder_1a6e5418172e85de4973acb02c18f5210e" prot="protected" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>mSizeOfVarField1</name></member>
      <member refid="classrr_1_1CodeBuilder_1a6af5b51e3bd2b6632c2960d75c1f5675" prot="protected" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>mSizeOfVarField2</name></member>
      <member refid="classrr_1_1CodeBuilder_1a73d1b42f7d8aa5b23ac2dd3e4a27c952" prot="protected" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>mSizeOfVarField3</name></member>
      <member refid="classrr_1_1StringBuilder_1a2e6e3fc9b0cd309a83bea1b29797491e" prot="protected" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>mStringing</name></member>
      <member refid="classrr_1_1StringBuilder_1a66247413c4f61c7e56103c63af32f6f7" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>NewLine</name></member>
      <member refid="classrr_1_1StringBuilder_1a70119feb4beaa821983a7f3ffee33075" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>operator&lt;&lt;</name></member>
      <member refid="classrr_1_1StringBuilder_1a225e4af9726b19c0466f275702d6bdb5" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>operator&lt;&lt;</name></member>
      <member refid="classrr_1_1StringBuilder_1a9865e870221e232becaf532ffcc918fa" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>StringBuilder</name></member>
      <member refid="classrr_1_1StringBuilder_1abde5739b8994e6eb1bb53bdea217ac3c" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>TLine</name></member>
      <member refid="classrr_1_1StringBuilder_1a22c778a02f315058633da32250c25bfd" prot="public" virt="non-virtual"><scope>rr::CodeBuilder</scope><name>ToString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
