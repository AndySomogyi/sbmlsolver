<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classrr_1_1CompiledExecutableModel" kind="class" language="C++" prot="public">
    <compoundname>rr::CompiledExecutableModel</compoundname>
    <basecompoundref refid="classrr_1_1ExecutableModel" prot="public" virt="non-virtual">rr::ExecutableModel</basecompoundref>
    <includes refid="rrCompiledExecutableModel_8h" local="no">rrCompiledExecutableModel.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classrr_1_1CompiledExecutableModel_1ad6a1d9558dfadffa255bad46d3593efa" prot="public" static="no" strong="no">
        <type></type>
        <name>StateStackOptions</name>
        <enumvalue id="classrr_1_1CompiledExecutableModel_1ad6a1d9558dfadffa255bad46d3593efaaf078a648b00f4a19d8d8ff45147bf65a" prot="public">
          <name>PopDiscard</name>
          <initializer>= 0x00000001</initializer>
          <briefdescription>
<para>Default behavior is to pop and restore previous state, (like OpenGL), this pops the last save and discards it without restoring the state. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="86" column="5" bodyfile="c/rrCompiledExecutableModel.h" bodystart="87" bodyend="93"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a9bc0bceca0e20f1824b8eabf7353759c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rr::CompiledExecutableModel::mConservedSumChanged</definition>
        <argsstring></argsstring>
        <name>mConservedSumChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="386" column="10" bodyfile="c/rrCompiledExecutableModel.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1aefb33ef87d2734970098f151e3d0d146" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::mDummyInt</definition>
        <argsstring></argsstring>
        <name>mDummyInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="401" column="9" bodyfile="c/rrCompiledExecutableModel.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1ae3615496f4465565e719816aca47f842" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::mDummyDouble</definition>
        <argsstring></argsstring>
        <name>mDummyDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="402" column="9" bodyfile="c/rrCompiledExecutableModel.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a92fa694df25872ca28ec2ebd013d0ddf" prot="public" static="no" mutable="no">
        <type>double *</type>
        <definition>double* rr::CompiledExecutableModel::mDummyDoubleArray</definition>
        <argsstring></argsstring>
        <name>mDummyDoubleArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="403" column="12" bodyfile="c/rrCompiledExecutableModel.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a0e9f631e3808545a6e9c19c64b7ce089" prot="public" static="no" mutable="no">
        <type><ref refid="structSModelData" kindref="compound">ModelData</ref></type>
        <definition>ModelData rr::CompiledExecutableModel::mData</definition>
        <argsstring></argsstring>
        <name>mData</name>
        <briefdescription>
<para>the data that is exchanged with the loaded shared lib, and all sorts of other routines such as CVODE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="409" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a96f54b093369dba01f1922282734ea73" prot="public" static="no" mutable="no">
        <type><ref refid="classrr_1_1ModelSymbols" kindref="compound">ModelSymbols</ref></type>
        <definition>ModelSymbols rr::CompiledExecutableModel::ms</definition>
        <argsstring></argsstring>
        <name>ms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="410" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a8a1e046aa716f81c30ebb4a8ffbd4a42" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rr::CompiledExecutableModel::mIsInitialized</definition>
        <argsstring></argsstring>
        <name>mIsInitialized</name>
        <briefdescription>
<para>If all functions are found properly in the dll, this one is true. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="415" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1ab74cb32586c9b684c42d82c2eb0970e6" prot="public" static="no" mutable="no">
        <type><ref refid="classrr_1_1ModelSharedLibrary" kindref="compound">ModelSharedLibrary</ref> *</type>
        <definition>ModelSharedLibrary* rr::CompiledExecutableModel::mDLL</definition>
        <argsstring></argsstring>
        <name>mDLL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="416" column="38" bodyfile="c/rrCompiledExecutableModel.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a8cab5094a3391b0b93e5ad9862f30c8c" prot="public" static="no" mutable="no">
        <type>std::stack&lt; <ref refid="classrr_1_1CompiledModelState" kindref="compound">CompiledModelState</ref> * &gt;</type>
        <definition>std::stack&lt;CompiledModelState*&gt; rr::CompiledExecutableModel::modelStates</definition>
        <argsstring></argsstring>
        <name>modelStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="418" column="23" bodyfile="c/rrCompiledExecutableModel.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a3a38ba403d17d5c6db5f6994a705c9c7" prot="public" static="no" mutable="no">
        <type>c_int_MDS</type>
        <definition>c_int_MDS rr::CompiledExecutableModel::cInitModel</definition>
        <argsstring></argsstring>
        <name>cInitModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="421" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a7a3af2b6c2ce06b3ac7765c34fb188c2" prot="public" static="no" mutable="no">
        <type>c_int_MDS</type>
        <definition>c_int_MDS rr::CompiledExecutableModel::cInitModelData</definition>
        <argsstring></argsstring>
        <name>cInitModelData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="422" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a107de20a86ec2cb7be62576acef9d0da" prot="public" static="no" mutable="no">
        <type>c_charStar_MDS</type>
        <definition>c_charStar_MDS rr::CompiledExecutableModel::cgetModelName</definition>
        <argsstring></argsstring>
        <name>cgetModelName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="423" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a6ed8623cb3b3d60e3843654a2c7242fd" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::cinitializeInitialConditions</definition>
        <argsstring></argsstring>
        <name>cinitializeInitialConditions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="424" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a6bea05828a524535e13f6953e87b97f2" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::csetParameterValues</definition>
        <argsstring></argsstring>
        <name>csetParameterValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="425" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a2bed2cc8acfc948194a133c753aaca4e" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::csetCompartmentVolumes</definition>
        <argsstring></argsstring>
        <name>csetCompartmentVolumes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="426" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1aaa0ec96c6cbe536da8abcc6027fe7cc4" prot="public" static="no" mutable="no">
        <type>c_int_MDS_int</type>
        <definition>c_int_MDS_int rr::CompiledExecutableModel::cgetNumLocalParameters</definition>
        <argsstring></argsstring>
        <name>cgetNumLocalParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="427" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1aa0d979244966b7a8d4cfd8ec7e778735" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::csetBoundaryConditions</definition>
        <argsstring></argsstring>
        <name>csetBoundaryConditions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="428" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a33855ba6b661f3db7504fd6af5977a50" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::csetInitialConditions</definition>
        <argsstring></argsstring>
        <name>csetInitialConditions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="429" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a8f4878decd5874b371374f18d26e30cb" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::cevalInitialAssignments</definition>
        <argsstring></argsstring>
        <name>cevalInitialAssignments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="430" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a48432dee6530b3b380553cb907f9e0f5" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::cupdateDependentSpeciesValues</definition>
        <argsstring></argsstring>
        <name>cupdateDependentSpeciesValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="431" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a015020ebb051507bc5f6bf3d6c318b2e" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::ccomputeRules</definition>
        <argsstring></argsstring>
        <name>ccomputeRules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="432" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a4cc5f79290ee97a33ab7ff3570aa563f" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::cconvertToAmounts</definition>
        <argsstring></argsstring>
        <name>cconvertToAmounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="433" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a90658be420a21e54eb4b4c585b64830c" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::ccomputeConservedTotals</definition>
        <argsstring></argsstring>
        <name>ccomputeConservedTotals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="434" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a8da8f86909562fc89b0261b6fddca571" prot="public" static="no" mutable="no">
        <type>c_double_MDS_int</type>
        <definition>c_double_MDS_int rr::CompiledExecutableModel::cgetConcentration</definition>
        <argsstring></argsstring>
        <name>cgetConcentration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="435" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1afaa881d7cc8a16df81ebe99aace9b5d3" prot="public" static="no" mutable="no">
        <type>c_doubleStar_MDS</type>
        <definition>c_doubleStar_MDS rr::CompiledExecutableModel::cGetCurrentValues</definition>
        <argsstring></argsstring>
        <name>cGetCurrentValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="436" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1ae96ced57631c1e2244a52b57260ddee1" prot="public" static="no" mutable="no">
        <type>c_void_MDS_double_doubleStar</type>
        <definition>c_void_MDS_double_doubleStar rr::CompiledExecutableModel::cevalModel</definition>
        <argsstring></argsstring>
        <name>cevalModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="437" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a87bc7fe483e31c998befcb74a6af8213" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::cconvertToConcentrations</definition>
        <argsstring></argsstring>
        <name>cconvertToConcentrations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="438" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a40c7619a6c39e44d1b2c3e9edd03c6ff" prot="public" static="no" mutable="no">
        <type>c_void_MDS_double_doubleStar</type>
        <definition>c_void_MDS_double_doubleStar rr::CompiledExecutableModel::cevalEvents</definition>
        <argsstring></argsstring>
        <name>cevalEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="439" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a03a83d683b08de3bc3e4362a1bf2f191" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::ccomputeAllRatesOfChange</definition>
        <argsstring></argsstring>
        <name>ccomputeAllRatesOfChange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="440" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1af225567017f29585a721e19f395b8a16" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::cAssignRates_a</definition>
        <argsstring></argsstring>
        <name>cAssignRates_a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="441" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a7804b8c4086b51f3e7582acfbf279f3e" prot="public" static="no" mutable="no">
        <type>c_void_MDS_doubleStar</type>
        <definition>c_void_MDS_doubleStar rr::CompiledExecutableModel::cAssignRates_b</definition>
        <argsstring></argsstring>
        <name>cAssignRates_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="442" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a21b1576296ce08904a525b5e53f9bc15" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::ctestConstraints</definition>
        <argsstring></argsstring>
        <name>ctestConstraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="443" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a0a156cb3bfc3393e14c71d7d6c54c81c" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::cresetEvents</definition>
        <argsstring></argsstring>
        <name>cresetEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="444" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1afb7d96a19919a50d594ac799b09559dd" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::cInitializeRates</definition>
        <argsstring></argsstring>
        <name>cInitializeRates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="445" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a6f9e6580d1c25f305a83deba42c47454" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::cInitializeRateRuleSymbols</definition>
        <argsstring></argsstring>
        <name>cInitializeRateRuleSymbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="446" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1af12dfb932e55432e51119b3ed9456794" prot="public" static="no" mutable="no">
        <type>c_void_MDS_int_double</type>
        <definition>c_void_MDS_int_double rr::CompiledExecutableModel::csetConcentration</definition>
        <argsstring></argsstring>
        <name>csetConcentration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="447" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a8e1da512d5d5e09cbb1127e8ef49f705" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::cComputeReactionRates</definition>
        <argsstring></argsstring>
        <name>cComputeReactionRates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="448" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a5871195828a4296d4fd708f706b7ec7f" prot="public" static="no" mutable="no">
        <type>c_void_MDS</type>
        <definition>c_void_MDS rr::CompiledExecutableModel::ccomputeEventPriorities</definition>
        <argsstring></argsstring>
        <name>ccomputeEventPriorities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="449" column="39" bodyfile="c/rrCompiledExecutableModel.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a410819286030c7ec1c6ecc16292292b8" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classrr_1_1PendingAssignment" kindref="compound">PendingAssignment</ref> &gt;</type>
        <definition>std::vector&lt;PendingAssignment&gt; rr::CompiledExecutableModel::mAssignments</definition>
        <argsstring></argsstring>
        <name>mAssignments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="451" column="19" bodyfile="c/rrCompiledExecutableModel.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1ad871d89e7c91ca265f259aa6e53bc11d" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; rr::CompiledExecutableModel::mAssignmentTimes</definition>
        <argsstring></argsstring>
        <name>mAssignmentTimes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="453" column="30" bodyfile="c/rrCompiledExecutableModel.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrr_1_1CompiledExecutableModel_1a74c9fa0353bea3e576414eafe78759cc" prot="public" static="no" mutable="no">
        <type>DoubleMatrix</type>
        <definition>DoubleMatrix rr::CompiledExecutableModel::stoichiometryMatrix</definition>
        <argsstring></argsstring>
        <name>stoichiometryMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="455" column="18" bodyfile="c/rrCompiledExecutableModel.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classrr_1_1CompiledExecutableModel_1af5eaffccb3276d5df2c3648acad060fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class CompiledModelState</definition>
        <argsstring></argsstring>
        <name>CompiledModelState</name>
        <param>
          <type><ref refid="classrr_1_1CompiledModelState" kindref="compound">CompiledModelState</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="502" column="5" bodyfile="c/rrCompiledExecutableModel.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ac831d54ccdde2cd5df4a086ff944102e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string rr::CompiledExecutableModel::getExecutableModelDesc</definition>
        <argsstring>() const</argsstring>
        <name>getExecutableModelDesc</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a07791b0ccd6feeb665278e9888cb8af7">getExecutableModelDesc</reimplements>
        <briefdescription>
<para>Returns a human-readable description of the code generation backend, e.g. LLVM, legacy C, etc. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM </para>
</simplesect>
<simplesect kind="date"><para>07/31/2015 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="53" column="25" bodyfile="c/rrCompiledExecutableModel.h" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a289e026daee71eb990147906c7f6aa96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rr::CompiledExecutableModel::CompiledExecutableModel</definition>
        <argsstring>(const ModelSymbols &amp;symbols, ModelSharedLibrary *dll)</argsstring>
        <name>CompiledExecutableModel</name>
        <param>
          <type>const <ref refid="classrr_1_1ModelSymbols" kindref="compound">ModelSymbols</ref> &amp;</type>
          <declname>symbols</declname>
        </param>
        <param>
          <type><ref refid="classrr_1_1ModelSharedLibrary" kindref="compound">ModelSharedLibrary</ref> *</type>
          <declname>dll</declname>
        </param>
        <briefdescription>
<para>makes a copy of the <ref refid="classrr_1_1ModelSymbols" kindref="compound">ModelSymbols</ref> and keeps it. </para>
        </briefdescription>
        <detaileddescription>
<para>takes ownership of the shared lib. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="61" column="5" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="43" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a5d538e2fccd5ad73a8cc4bda3347eafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>rr::CompiledExecutableModel::~CompiledExecutableModel</definition>
        <argsstring>()</argsstring>
        <name>~CompiledExecutableModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="62" column="13" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="68" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a358042c7806b3ab4572e9ace4afe2e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool rr::CompiledExecutableModel::getConservedSumChanged</definition>
        <argsstring>()</argsstring>
        <name>getConservedSumChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="64" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1adcf2db50d1975580be0ae2323bc83d6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::setConservedSumChanged</definition>
        <argsstring>(bool)</argsstring>
        <name>setConservedSumChanged</name>
        <param>
          <type>bool</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="65" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a7a35baccccf36442c3e38770587db25c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::CompiledExecutableModel::getModelName</definition>
        <argsstring>()</argsstring>
        <name>getModelName</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a6ad7fd317a2335c337d7c8a3aeb8e044">getModelName</reimplements>
        <briefdescription>
<para>get the name of the model </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="67" column="25" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a324c8df0ec3e73850ca0ac48d2770594" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::setTime</definition>
        <argsstring>(double _time)</argsstring>
        <name>setTime</name>
        <reimplements refid="classrr_1_1ExecutableModel_1ad38c7e2bf987ce1f7cbb8ac7316b8760">setTime</reimplements>
        <param>
          <type>double</type>
          <declname>_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="69" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1af02f8a5c72a7daa22b7a5138cc9848ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double rr::CompiledExecutableModel::getTime</definition>
        <argsstring>()</argsstring>
        <name>getTime</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a9f4ae8c898f3c1553377b0f90b96c8e4">getTime</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="70" column="20" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a2b6c90abe1a1052ebf4147609f65c338" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::evalInitialConditions</definition>
        <argsstring>()</argsstring>
        <name>evalInitialConditions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="72" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="234" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ad919983c3e2f1fe9b1d86d80ae8a938f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a217c61819d9b029c5928ace53b805e89">reset</reimplements>
        <briefdescription>
<para>reset the model to its original state </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="77" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="714" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a2308bfaa84c422add0119fde85ba6026" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::reset</definition>
        <argsstring>(int options)</argsstring>
        <name>reset</name>
        <reimplements refid="classrr_1_1ExecutableModel_1ac87e7f485678d07d7567398dea63c512">reset</reimplements>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>reset the model accordign to a bitfield specified by the <ref refid="classrr_1_1SelectionRecord_1a898963ab24a6ba614913715c981d8394" kindref="member">SelectionRecord::SelectionType</ref> values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="83" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="708" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a615e7f1917c7a11d01ed5f014bd4c07a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::pushState</definition>
        <argsstring>(unsigned options=0)</argsstring>
        <name>pushState</name>
        <param>
          <type>unsigned</type>
          <declname>options</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>A <ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> holds a stack of states, the entire state of this model is pushed onto the saved state stack, and the current state remains unchanged. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the size of the saved stack after the current state has been pushed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="104" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="212" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a8aa4dc7066eb37d923b3d0f8a5ad87a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::popState</definition>
        <argsstring>(unsigned options=0)</argsstring>
        <name>popState</name>
        <param>
          <type>unsigned</type>
          <declname>options</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>restore the state from a previously saved state, if the state stack is empty, this has no effect. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the size of the saved stack after the top has been poped. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="112" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="219" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a57547419a8ad6d372ba861116850b788" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getNumIndFloatingSpecies</definition>
        <argsstring>()</argsstring>
        <name>getNumIndFloatingSpecies</name>
        <reimplements refid="classrr_1_1ExecutableModel_1ace75e9d47e3eeb59661e7c2e2b2ed6e4">getNumIndFloatingSpecies</reimplements>
        <briefdescription>
<para>independent species do are not defined by rules, they typically participate in reactions and can have thier values set at any time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="115" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a60e52e1aaa1b775cc85a61567c1a13b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getNumDepFloatingSpecies</definition>
        <argsstring>()</argsstring>
        <name>getNumDepFloatingSpecies</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a2acd2a498cee58cfdc676d9010be5ec0">getNumDepFloatingSpecies</reimplements>
        <briefdescription>
<para>dependent species are defined by rules and the only way to change them is by changing the values on which they depend. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="116" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a08951a49b979f2fd3653f6376e18fd15" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getNumFloatingSpecies</definition>
        <argsstring>()</argsstring>
        <name>getNumFloatingSpecies</name>
        <reimplements refid="classrr_1_1ExecutableModel_1aa2999a84a5a0d691dc08f3f78b94636d">getNumFloatingSpecies</reimplements>
        <briefdescription>
<para>total number of floating species. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="118" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a95e8e93fd51bb84a89ca45a22e3ace60" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getFloatingSpeciesIndex</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>getFloatingSpeciesIndex</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a390a1905aabac6056f6dceff11833c43">getFloatingSpeciesIndex</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="119" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a3dab9587b521885924032e40cb6c1ea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::CompiledExecutableModel::getFloatingSpeciesId</definition>
        <argsstring>(int index)</argsstring>
        <name>getFloatingSpeciesId</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="120" column="25" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a1c5cb4c75584906946d426d1193da39e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getNumBoundarySpecies</definition>
        <argsstring>()</argsstring>
        <name>getNumBoundarySpecies</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a6ee272090a6b7a4a6808f091c1930495">getNumBoundarySpecies</reimplements>
        <briefdescription>
<para>get the number of boundary species. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="122" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1adf4ab509d93bab14f0b1e34b85ad704a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getBoundarySpeciesIndex</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>getBoundarySpeciesIndex</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a28488139fa975776eded9e8c899c307d">getBoundarySpeciesIndex</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="123" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a3c99a105961f6fd7c69a2b7c1fb60032" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::CompiledExecutableModel::getBoundarySpeciesId</definition>
        <argsstring>(int index)</argsstring>
        <name>getBoundarySpeciesId</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="124" column="25" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a66747b5067ff6a1799bf3f49ff9d6493" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getBoundarySpeciesCompartmentIndex</definition>
        <argsstring>(int index)</argsstring>
        <name>getBoundarySpeciesCompartmentIndex</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="125" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="182" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a578a753970f79d1576172fc032f1e411" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getFloatingSpeciesAmounts</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getFloatingSpeciesAmounts</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>get the floating species amounts </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the indx and values arrays. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indx</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of length len of boundary species to return. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of at least length len which will store the returned boundary species amounts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="135" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="756" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a30f493afe7986c17d38577a37f5715b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::setFloatingSpeciesAmounts</definition>
        <argsstring>(int len, int const *indx, const double *values)</argsstring>
        <name>setFloatingSpeciesAmounts</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="138" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1378" bodyend="1387"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1aadcc3bd8f08ff2e62efe7c7a0c484f79" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getFloatingSpeciesConcentrations</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getFloatingSpeciesConcentrations</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>get the floating species concentrations </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the indx and values arrays. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indx</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of length len of boundary species to return. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of at least length len which will store the returned boundary species amounts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="149" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="767" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ab11a809d3d3d6b03d778079aad441e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::setFloatingSpeciesConcentrations</definition>
        <argsstring>(int len, int const *indx, double const *values)</argsstring>
        <name>setFloatingSpeciesConcentrations</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>set the floating species concentrations </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the indx and values arrays. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indx</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of length len of boundary species to return. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of at least length len which will store the returned boundary species amounts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="160" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="778" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ae68052960840d14da8998d00ad18503e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getFloatingSpeciesAmountRates</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getFloatingSpeciesAmountRates</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="163" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1360" bodyend="1376"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a3aa8c96b3a1a30346f05837b29ceb77d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getFloatingSpeciesConcentrationRates</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getFloatingSpeciesConcentrationRates</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="166" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1751" bodyend="1755"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a09681dd060af48372696dee3427a509b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getBoundarySpeciesAmounts</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getBoundarySpeciesAmounts</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>get the boundary species amounts </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the indx and values arrays. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indx</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of length len of boundary species to return. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of at least length len which will store the returned boundary species amounts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="178" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="790" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a050290614fc5e788ec8d839909cb362e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getBoundarySpeciesConcentrations</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getBoundarySpeciesConcentrations</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>get the boundary species concentrations </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the indx and values arrays. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indx</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of length len of boundary species to return. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of at least length len which will store the returned boundary species amounts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="189" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="806" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a98f019d5e748b28c6dd6e7273873a761" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::setBoundarySpeciesConcentrations</definition>
        <argsstring>(int len, int const *indx, double const *values)</argsstring>
        <name>setBoundarySpeciesConcentrations</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>set the boundary species concentrations </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the indx and values arrays. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indx</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of length len of boundary species to return. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of at least length len which will store the returned boundary species amounts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="200" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="824" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ab362cc56a36821440b5737ca3cf07496" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getNumGlobalParameters</definition>
        <argsstring>()</argsstring>
        <name>getNumGlobalParameters</name>
        <reimplements refid="classrr_1_1ExecutableModel_1aabbf6f025ea3c064f0dcaa5e4afaa87e">getNumGlobalParameters</reimplements>
        <briefdescription>
<para>get the number of global parameters </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="203" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a8b0dec616b4154c8a56c68cc3265d502" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getGlobalParameterIndex</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>getGlobalParameterIndex</name>
        <reimplements refid="classrr_1_1ExecutableModel_1abcdcc03c4563dfbe6b64f932812906ee">getGlobalParameterIndex</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>eid</declname>
        </param>
        <briefdescription>
<para>index of the global parameter id, -1 if it does not exist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="204" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a7a55623288bf239c2486b48060160cd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::CompiledExecutableModel::getGlobalParameterId</definition>
        <argsstring>(int index)</argsstring>
        <name>getGlobalParameterId</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="205" column="25" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a84cf75aaef544e60e2a786bbaec39392" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getGlobalParameterValues</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getGlobalParameterValues</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>get the global parameter values </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the indx and values arrays. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indx</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of length len of boundary species to return. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of at least length len which will store the returned boundary species amounts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="215" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="842" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ab64eca3d7dd17b27ae3f6c50b3bafdea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::setGlobalParameterValues</definition>
        <argsstring>(int len, int const *indx, const double *values)</argsstring>
        <name>setGlobalParameterValues</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="218" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="860" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1aafd3cf14394ab83920eac901df0a5c87" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getNumCompartments</definition>
        <argsstring>()</argsstring>
        <name>getNumCompartments</name>
        <reimplements refid="classrr_1_1ExecutableModel_1acada1e982eafe06d0d5e46defdb40ca7">getNumCompartments</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="221" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ac086fec83ad0f77876aface9965f6e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getCompartmentIndex</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>getCompartmentIndex</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a366727be244766db2ff917b64949858c">getCompartmentIndex</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="222" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="190" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a9176b67fd6f37a242323fdd58f402a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::CompiledExecutableModel::getCompartmentId</definition>
        <argsstring>(int index)</argsstring>
        <name>getCompartmentId</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="223" column="25" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a17ab2cef550fed61c4e2162ade95c62c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getCompartmentVolumes</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getCompartmentVolumes</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>get the compartment volumes </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the indx and values arrays. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indx</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of length len of boundary species to return. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">values</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of at least length len which will store the returned boundary species amounts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="233" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="878" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ad41d28162371bccbda5e4e24978ea67c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getNumRateRules</definition>
        <argsstring>()</argsstring>
        <name>getNumRateRules</name>
        <reimplements refid="classrr_1_1ExecutableModel_1aa6ccf1c5b3b8817c7ce291a933bcaab7">getNumRateRules</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="236" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="751" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1aeab495d246324b89051360053c9ca42b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getNumReactions</definition>
        <argsstring>()</argsstring>
        <name>getNumReactions</name>
        <reimplements refid="classrr_1_1ExecutableModel_1acb056a72125190c2abe39dba9c3600f1">getNumReactions</reimplements>
        <briefdescription>
<para>get the number of reactions the model has </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="241" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a067e156d79dcdd676ec2351fc43170bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getReactionRates</definition>
        <argsstring>(int len, const int *indx, double *values)</argsstring>
        <name>getReactionRates</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="243" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1290" bodyend="1306"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a9a2275b0715bc7461c8f402492462b05" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getReactionIndex</definition>
        <argsstring>(const std::string &amp;reactionName)</argsstring>
        <name>getReactionIndex</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a86fe96598b06cee5ca9a28dfdfd9d437">getReactionIndex</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>reactionName</declname>
        </param>
        <briefdescription>
<para>get the index of a named reaction </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>&gt;= 0 on success, &lt; 0 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="249" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a448c9bcff065fbb2e0c12015beea16c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::CompiledExecutableModel::getReactionId</definition>
        <argsstring>(int index)</argsstring>
        <name>getReactionId</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>get the name of the specified reaction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="254" column="25" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a5780766e212b015f2ce946b97dac6299" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getNumEvents</definition>
        <argsstring>()</argsstring>
        <name>getNumEvents</name>
        <reimplements refid="classrr_1_1ExecutableModel_1abd94b60defc6ffa9ab17166ebaa440c5">getNumEvents</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="256" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1af78621cb3bd546eb1e1e3a381530b89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::computeEventPriorites</definition>
        <argsstring>()</argsstring>
        <name>computeEventPriorites</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="257" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="529" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ad3b1b9aa6d026c92f7bc118cb3a8d301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::setConcentration</definition>
        <argsstring>(int index, double value)</argsstring>
        <name>setConcentration</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="258" column="10" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="393" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a213b1bb086baf676d4a64a8db7cb228b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::evalReactionRates</definition>
        <argsstring>()</argsstring>
        <name>evalReactionRates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="259" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="404" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a9ebcd8efc7236c3dd34d01a86c989012" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::setCompartmentVolumes</definition>
        <argsstring>()</argsstring>
        <name>setCompartmentVolumes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="260" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="382" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a5207e407a5a9d27c5c4834d01a0173b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getNumLocalParameters</definition>
        <argsstring>(int reactionId)</argsstring>
        <name>getNumLocalParameters</name>
        <param>
          <type>int</type>
          <declname>reactionId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="261" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="456" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ad63eae12df725323fe7d1455eebe2838" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::computeRules</definition>
        <argsstring>()</argsstring>
        <name>computeRules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="263" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="571" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a5736bfea4ad4d9fdf08d60b6a0dc941b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::initializeInitialConditions</definition>
        <argsstring>()</argsstring>
        <name>initializeInitialConditions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="265" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="467" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a3bcfd7683ce99c101d216121c6f836df" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::setParameterValues</definition>
        <argsstring>()</argsstring>
        <name>setParameterValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="266" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="478" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a2fc66633049fbc25d3838795ebf22684" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::setBoundaryConditions</definition>
        <argsstring>()</argsstring>
        <name>setBoundaryConditions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="267" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="488" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ad575ef19c6c58454aa965dac1a980278" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::setInitialConditions</definition>
        <argsstring>()</argsstring>
        <name>setInitialConditions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="268" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="582" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a91175275b452bbf367ed88bccea51455" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::evalInitialAssignments</definition>
        <argsstring>()</argsstring>
        <name>evalInitialAssignments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="269" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="665" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a91169a3e267ba2e9468bfb9bc37bfb81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::convertToAmounts</definition>
        <argsstring>()</argsstring>
        <name>convertToAmounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="271" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="539" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a576dfc091736c090ea942d2deb4ef72e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::computeConservedTotals</definition>
        <argsstring>()</argsstring>
        <name>computeConservedTotals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="272" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="519" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a2a820ae64f278087b85f836aef5afb32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::getRateRuleValues</definition>
        <argsstring>(double *rateRuleValues)</argsstring>
        <name>getRateRuleValues</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a8372872ec5858e91adc81080ad763c84">getRateRuleValues</reimplements>
        <param>
          <type>double *</type>
          <declname>rateRuleValues</declname>
        </param>
        <briefdescription>
<para>get the &apos;values&apos; i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>the what the rate rule integrates to, and store it in the given array.</para>
<para>The length of rateRuleValues obviously must be the number of rate rules we have. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="276" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="415" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1aae2baea0b910865b8c85e773e69014be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rr::CompiledExecutableModel::getAmount</definition>
        <argsstring>(const int i)</argsstring>
        <name>getAmount</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="278" column="12" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ad7946e8df6ef7202138f86e356a57135" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::initializeRates</definition>
        <argsstring>()</argsstring>
        <name>initializeRates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="279" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="498" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a064dda2d30b91be8a46e9f68c893e9f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::CompiledExecutableModel::getStateVectorId</definition>
        <argsstring>(int index)</argsstring>
        <name>getStateVectorId</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="281" column="25" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1757" bodyend="1760"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ade8ee1b8f813ff02d80a9df79af4e461" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::setRateRuleValues</definition>
        <argsstring>(const double *rateRuleValues)</argsstring>
        <name>setRateRuleValues</name>
        <param>
          <type>const double *</type>
          <declname>rateRuleValues</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="283" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="509" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a6ba2d5c65fa0c94f521c22ff440a56bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getStateVector</definition>
        <argsstring>(double *stateVector)</argsstring>
        <name>getStateVector</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a75b6f37ac538d2d2a0709fe4080b0570">getStateVector</reimplements>
        <param>
          <type>double *</type>
          <declname>stateVector</declname>
        </param>
        <briefdescription>
<para>copies the internal model state std::vector into the provided buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">stateVector</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer to copy the state std::vector into, if NULL, return the size required.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of items coppied into the provided buffer, if stateVector is NULL, returns the length of the state std::vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="295" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="264" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a39fc85f1dfeba7d5885f66f78f9b4704" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::setStateVector</definition>
        <argsstring>(const double *stateVector)</argsstring>
        <name>setStateVector</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a57a67063c957714b916d4a3d4277c3b9">setStateVector</reimplements>
        <param>
          <type>const double *</type>
          <declname>stateVector</declname>
        </param>
        <briefdescription>
<para>sets the internal model state to the provided packed state std::vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">an</parametername>
</parameternamelist>
<parameterdescription>
<para>array which holds the packed state std::vector, must be at least the size returned by getStateVector.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of items copied from the state std::vector, negative on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="306" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="287" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a35327952a7b67340f4613db543cf437c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::convertToConcentrations</definition>
        <argsstring>()</argsstring>
        <name>convertToConcentrations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="308" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="549" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a2e1c5da00f0aa9b79c37c21701b8ac76" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::updateDependentSpeciesValues</definition>
        <argsstring>()</argsstring>
        <name>updateDependentSpeciesValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="309" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="559" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a33d6803251960b0c331fc507bd4f0455" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::computeAllRatesOfChange</definition>
        <argsstring>()</argsstring>
        <name>computeAllRatesOfChange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="310" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="593" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a4333e3139f974ae771ad2d2fb317208f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::getStateVectorRate</definition>
        <argsstring>(double time, const double *y, double *dydt=0)</argsstring>
        <name>getStateVectorRate</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a0495c2ece9edad29d61849b2443d4274">getStateVectorRate</reimplements>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dydt</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>the state std::vector y is the rate rule values and floating species concentrations concatenated. </para>
        </briefdescription>
        <detaileddescription>
<para>y is of length numFloatingSpecies + numRateRules.</para>
<para>The state std::vector is packed such that the first n raterule elements are the values of the rate rules, and the last n floatingspecies are the floating species values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>current simulator time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>state std::vector, must be of size returned by getStateVector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dydt</parametername>
</parameternamelist>
<parameterdescription>
<para>calculated rate of change of the state std::vector, if null, it is ignored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="325" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="603" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a9ae88059e38dd380f5f10bbfc8b2c15a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::evalEvents</definition>
        <argsstring>(const double time, const double *y)</argsstring>
        <name>evalEvents</name>
        <param>
          <type>const double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="327" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="633" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a039ad6b5ffedd9d560fa1f270dbfa210" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::resetEvents</definition>
        <argsstring>()</argsstring>
        <name>resetEvents</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a936756fa4facd2b182b4cfcbe0f07fab">resetEvents</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="328" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="654" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1aa5ccbd3d20bf857d8361c2bc4d7130c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::testConstraints</definition>
        <argsstring>()</argsstring>
        <name>testConstraints</name>
        <reimplements refid="classrr_1_1ExecutableModel_1abe4be4ec2e96aaf0a256776dff3cc9a9">testConstraints</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="329" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="676" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ab4bceb8fee39aca02e6d5d627efeb215" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::initializeRateRuleSymbols</definition>
        <argsstring>()</argsstring>
        <name>initializeRateRuleSymbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="330" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="687" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a7cf0832caf732cda5e42967c922c1539" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::CompiledExecutableModel::getInfo</definition>
        <argsstring>()</argsstring>
        <name>getInfo</name>
        <reimplements refid="classrr_1_1ExecutableModel_1ab8073e0f3e57cb6f0d807bdf60d1d2a1">getInfo</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="331" column="25" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="698" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1abb50d6fbc8cbd14a155989f76430d967" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::print</definition>
        <argsstring>(std::ostream &amp;stream)</argsstring>
        <name>print</name>
        <reimplements refid="classrr_1_1ExecutableModel_1acea87cea26a0f322a8df7b5ae73f065c">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="333" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="745" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a9c5f0f3045d073ae63d4f1e2b3cb232a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::getIds</definition>
        <argsstring>(int types, std::list&lt; std::string &gt; &amp;ids)</argsstring>
        <name>getIds</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a172aeacd0685bcce8153ae67718fc697">getIds</reimplements>
        <param>
          <type>int</type>
          <declname>types</declname>
        </param>
        <param>
          <type>std::list&lt; std::string &gt; &amp;</type>
          <declname>ids</declname>
        </param>
        <briefdescription>
<para>populates a given list with all the ids that this class can accept. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ids</parametername>
</parameternamelist>
<parameterdescription>
<para>a list of strings that will be filled by this class. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>types</parametername>
</parameternamelist>
<parameterdescription>
<para>the types of ids that are requested. Can be set to 0xffffffff to request all the ids that this class supports. This should by a bitwise OR of the filelds in <ref refid="classrr_1_1SelectionRecord_1a898963ab24a6ba614913715c981d8394" kindref="member">SelectionRecord::SelectionType</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="335" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1477" bodyend="1515"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1af50e6358c72134961ae87dd4406ababa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getSupportedIdTypes</definition>
        <argsstring>()</argsstring>
        <name>getSupportedIdTypes</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a200b81cd9a7f1f9a6b3af6a35fcc4c63">getSupportedIdTypes</reimplements>
        <briefdescription>
<para>returns a bit field of the ids that this class supports. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="337" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1517" bodyend="1530"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ab7bc9e9b4426d9d22080bb64bd900cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double rr::CompiledExecutableModel::getValue</definition>
        <argsstring>(const std::string &amp;id)</argsstring>
        <name>getValue</name>
        <reimplements refid="classrr_1_1ExecutableModel_1aebaced13ef2afd070d7a1c35eec8d9f2">getValue</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>gets the value for the given id std::string. </para>
        </briefdescription>
        <detaileddescription>
<para>The std::string must be a <ref refid="classrr_1_1SelectionRecord" kindref="compound">SelectionRecord</ref> std::string that is accepted by this class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="339" column="20" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1533" bodyend="1651"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a6c3c63fd848f8ffae1c7125fe79f2ad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::setValue</definition>
        <argsstring>(const std::string &amp;id, double value)</argsstring>
        <name>setValue</name>
        <reimplements refid="classrr_1_1ExecutableModel_1ac98de72b8f4f43bc6b93b191852702b5">setValue</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets the value coresponding to the given selection stringl </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="341" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1653" bodyend="1749"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ad816af65c4e850372d646c8fff23845b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getEventDelays</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getEventDelays</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="343" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="896" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a7fc0ac16cf9fef92abb158dd4d043571" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getEventPriorities</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getEventPriorities</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="345" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="914" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a2e886dc06d056fbb6221f7a761f898cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::eventAssignment</definition>
        <argsstring>(int eventId)</argsstring>
        <name>eventAssignment</name>
        <param>
          <type>int</type>
          <declname>eventId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="347" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="920" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ab6d1ae09762b1f11c04ec982ad8fb94e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double *</type>
        <definition>double * rr::CompiledExecutableModel::evalEventAssignment</definition>
        <argsstring>(int eventId)</argsstring>
        <name>evalEventAssignment</name>
        <param>
          <type>int</type>
          <declname>eventId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="349" column="20" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="932" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ae7eda6b60005eb01f9d278599c9540dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::applyEventAssignment</definition>
        <argsstring>(int eventId, double *values)</argsstring>
        <name>applyEventAssignment</name>
        <param>
          <type>int</type>
          <declname>eventId</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="351" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="937" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1af7f48f2f8aa3178f8e9247ea9ab5894c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getEventTriggers</definition>
        <argsstring>(int len, const int *indx, unsigned char *values)</argsstring>
        <name>getEventTriggers</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="353" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="941" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a02138d21075a752a3928615630078a6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getNumConservedMoieties</definition>
        <argsstring>()</argsstring>
        <name>getNumConservedMoieties</name>
        <reimplements refid="classrr_1_1ExecutableModel_1ab4927aa2d8bf20c59b75a568757d369b">getNumConservedMoieties</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="355" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1308" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a3e5addab5a5bf57e487874703fdbd244" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getConservedMoietyIndex</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>getConservedMoietyIndex</name>
        <reimplements refid="classrr_1_1ExecutableModel_1afb584e140ba5ef19865d0256d275e538">getConservedMoietyIndex</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="356" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1313" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1aa7189b1968bfd7ca94f82219ba5b55d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::CompiledExecutableModel::getConservedMoietyId</definition>
        <argsstring>(int index)</argsstring>
        <name>getConservedMoietyId</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="357" column="25" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1319" bodyend="1322"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a392d479dc9b6bb427e525e8b546af61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getConservedMoietyValues</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getConservedMoietyValues</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="358" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1324" bodyend="1340"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a980c582f8efeac68297ec329b0b50d62" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::setConservedMoietyValues</definition>
        <argsstring>(int len, int const *indx, const double *values)</argsstring>
        <name>setConservedMoietyValues</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="359" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1342" bodyend="1358"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1adda73007bd312b341e4c03a0d1694bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::setCompartmentVolumes</definition>
        <argsstring>(int len, int const *indx, const double *values)</argsstring>
        <name>setCompartmentVolumes</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="362" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1390" bodyend="1399"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ab90a9abaa0fc4a6b40642db955e76a25" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::setFloatingSpeciesInitConcentrations</definition>
        <argsstring>(int len, int const *indx, double const *values)</argsstring>
        <name>setFloatingSpeciesInitConcentrations</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="364" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1401" bodyend="1410"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a5911a6126a583c8258b32e9753397296" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getFloatingSpeciesInitConcentrations</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getFloatingSpeciesInitConcentrations</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="366" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1412" bodyend="1421"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a15522874be17399807aa1f0f1e2fd655" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double rr::CompiledExecutableModel::getStoichiometry</definition>
        <argsstring>(int speciesIndex, int reactionIndex)</argsstring>
        <name>getStoichiometry</name>
        <reimplements refid="classrr_1_1ExecutableModel_1af9f7809b903426c14942b01a8e24a2b7">getStoichiometry</reimplements>
        <param>
          <type>int</type>
          <declname>speciesIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reactionIndex</declname>
        </param>
        <briefdescription>
<para>Get the current stiochiometry value for the given species / reaction. </para>
        </briefdescription>
        <detaileddescription>
<para>If either are not valid, NaN is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="369" column="20" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1423" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1add13e9f74b8918a43bee644d27dac876" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getStoichiometryMatrix</definition>
        <argsstring>(int *rows, int *cols, double **data)</argsstring>
        <name>getStoichiometryMatrix</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a2aacbf75ac32b2b188f7850cd48b8f71">getStoichiometryMatrix</reimplements>
        <param>
          <type>int *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>allocate a block of memory and copy the stochiometric values into it, and return it. </para>
        </briefdescription>
        <detaileddescription>
<para>The caller is responsible for freeing the memory that is referenced by data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">rows</parametername>
</parameternamelist>
<parameterdescription>
<para>will hold the number of rows in the matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">cols</parametername>
</parameternamelist>
<parameterdescription>
<para>will hold the number of columns in the matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer which will hold a newly allocated memory block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="381" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1438" bodyend="1450"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a5f6ea55fe53bae580f1edf703fc17b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rr::CompiledExecutableModel::getFloatingSpeciesConcentration</definition>
        <argsstring>(int index)</argsstring>
        <name>getFloatingSpeciesConcentration</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="384" column="12" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="445" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a53a996bfec50781d72b01ef4ed50d15f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rr::CompiledExecutableModel::setupModelData</definition>
        <argsstring>()</argsstring>
        <name>setupModelData</name>
        <briefdescription>
<para>initialize and allocate space for the ModelData buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="391" column="10" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="348" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a6ed828bd7380883f7d70eab3b11cb47c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool rr::CompiledExecutableModel::setupDLLFunctions</definition>
        <argsstring>()</argsstring>
        <name>setupDLLFunctions</name>
        <briefdescription>
<para>setup the function pointer variables to point to the C functions in the loaded shared library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="397" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="307" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a2dc1e802226e9a7278503bb0e5348351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; rr::CompiledExecutableModel::retestEvents</definition>
        <argsstring>(const double &amp;timeEnd, const std::vector&lt; int &gt; &amp;handledEvents, std::vector&lt; int &gt; &amp;removeEvents)</argsstring>
        <name>retestEvents</name>
        <param>
          <type>const double &amp;</type>
          <declname>timeEnd</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>handledEvents</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>removeEvents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="457" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="972" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a146acfa8e42182a11e3d10dfa3a77521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; rr::CompiledExecutableModel::retestEvents</definition>
        <argsstring>(const double &amp;timeEnd, std::vector&lt; int &gt; &amp;handledEvents, const bool &amp;assignOldState)</argsstring>
        <name>retestEvents</name>
        <param>
          <type>const double &amp;</type>
          <declname>timeEnd</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>handledEvents</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>assignOldState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="460" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="977" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ac2c5e8d6f0e487d12743d624a505173f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; rr::CompiledExecutableModel::retestEvents</definition>
        <argsstring>(const double &amp;timeEnd, const std::vector&lt; int &gt; &amp;handledEvents, const bool &amp;assignOldState, std::vector&lt; int &gt; &amp;removeEvents)</argsstring>
        <name>retestEvents</name>
        <param>
          <type>const double &amp;</type>
          <declname>timeEnd</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>handledEvents</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>assignOldState</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>removeEvents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="463" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="983" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ae0c386b45724d6ee0d09aa6c92d51c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::applyPendingEvents</definition>
        <argsstring>(double timeEnd)</argsstring>
        <name>applyPendingEvents</name>
        <param>
          <type>double</type>
          <declname>timeEnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="467" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1026" bodyend="1051"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ab377d0bba85bbd8c8eec4f2ad132c41b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::applyEvents</definition>
        <argsstring>(double timeEnd, const unsigned char *previousEventStatus, const double *initialState, double *finalState)</argsstring>
        <name>applyEvents</name>
        <reimplements refid="classrr_1_1ExecutableModel_1ae30181bdbfd3e4fedc2dedcf988ecb95">applyEvents</reimplements>
        <param>
          <type>double</type>
          <declname>timeEnd</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>previousEventStatus</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>initialState</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>finalState</declname>
        </param>
        <briefdescription>
<para>Itterate through all of the current and pending events and apply them. </para>
        </briefdescription>
        <detaileddescription>
<para>If any events trigger a state change which triggers any additional events, these are applied as well. After this method finishes, all events are processed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeEnd</parametername>
</parameternamelist>
<parameterdescription>
<para>model time when the event occured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>previousEventStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>array of previous event triggered states. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional): initial state std::vector, may be NULL, in which the current state is used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>finalState</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional): final state std::vector, where the final state is coppied to. May be NULL, in which case, ignored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="469" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1053" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ae88b85f7caac07acbeed3d429bc74afb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::getEventRoots</definition>
        <argsstring>(double time, const double *y, double *gdot)</argsstring>
        <name>getEventRoots</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a2c4d631f32873d4d98d613add078d9b3">getEventRoots</reimplements>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>gdot</declname>
        </param>
        <briefdescription>
<para>evaluate the event &apos;roots&apos; <ndash/> when events transition form triggered - non-triggered or triggered to non-triggered state. </para>
        </briefdescription>
        <detaileddescription>
<para>Simplest method is to return 1 for triggered, -1 for not-triggered, so long as there is a zero crossing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time[in]</parametername>
</parameternamelist>
<parameterdescription>
<para>current time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y[in]</parametername>
</parameternamelist>
<parameterdescription>
<para>the state std::vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gdot[out]</parametername>
</parameternamelist>
<parameterdescription>
<para>result event roots, this is of length numEvents. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="472" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1256" bodyend="1273"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a61a5e57762fd8a4a87ac5843f2314347" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double rr::CompiledExecutableModel::getNextPendingEventTime</definition>
        <argsstring>(bool pop)</argsstring>
        <name>getNextPendingEventTime</name>
        <reimplements refid="classrr_1_1ExecutableModel_1ad80b6a7167b0a78364dc680475ab2e3c">getNextPendingEventTime</reimplements>
        <param>
          <type>bool</type>
          <declname>pop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="474" column="20" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1275" bodyend="1283"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a637150c6f6ca6bede8cbdd7e0405ce12" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getPendingEventSize</definition>
        <argsstring>()</argsstring>
        <name>getPendingEventSize</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a9875c1203e09d4d51c29fdb2318f9a4c">getPendingEventSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="476" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1285" bodyend="1288"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a9dafdd77575ff11263fa27916fe0cbe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::removePendingAssignmentForIndex</definition>
        <argsstring>(int eventIndex)</argsstring>
        <name>removePendingAssignmentForIndex</name>
        <param>
          <type>int</type>
          <declname>eventIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="478" column="10" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1191" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1afa911d07605712c1f1eca8df729e1233" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::sortEventsByPriority</definition>
        <argsstring>(std::vector&lt; Event &gt; &amp;firedEvents)</argsstring>
        <name>sortEventsByPriority</name>
        <param>
          <type>std::vector&lt; <ref refid="classrr_1_1Event" kindref="compound">Event</ref> &gt; &amp;</type>
          <declname>firedEvents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="480" column="10" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1202" bodyend="1220"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1abc440ef2f6e7543a51c0255ae8384246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::sortEventsByPriority</definition>
        <argsstring>(std::vector&lt; int &gt; &amp;firedEvents)</argsstring>
        <name>sortEventsByPriority</name>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>firedEvents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="482" column="10" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1222" bodyend="1254"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a858d37fbecd6c28d45dbbf35f4b3eeb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::setFloatingSpeciesInitAmounts</definition>
        <argsstring>(int len, int const *indx, double const *values)</argsstring>
        <name>setFloatingSpeciesInitAmounts</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="485" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1453" bodyend="1457"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a422740e3b4057098746f5039d0ea31b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getFloatingSpeciesInitAmounts</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getFloatingSpeciesInitAmounts</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="488" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1459" bodyend="1463"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1aef5d86ce6963e7a60406d4a9b72a810a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::setCompartmentInitVolumes</definition>
        <argsstring>(int len, int const *indx, double const *values)</argsstring>
        <name>setCompartmentInitVolumes</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="491" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1465" bodyend="1469"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a445ab5652c7349bcbcb3469d5a94311e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getCompartmentInitVolumes</definition>
        <argsstring>(int len, int const *indx, double *values)</argsstring>
        <name>getCompartmentInitVolumes</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="494" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1471" bodyend="1475"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ac7a3dc4d4e4df17dad7e521d09671189" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int rr::CompiledExecutableModel::getEventIndex</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>getEventIndex</name>
        <reimplements refid="classrr_1_1ExecutableModel_1ae9b3e5baef45072822f9ccaf9d13ffa8">getEventIndex</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>eid</declname>
        </param>
        <briefdescription>
<para>Gets the index for an event id. </para>
        </briefdescription>
        <detaileddescription>
<para>If there is no event with this id, returns -1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="497" column="17" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1762" bodyend="1765"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1ae28c8efbbc3549f17dd66e33e59d7959" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::CompiledExecutableModel::getEventId</definition>
        <argsstring>(int)</argsstring>
        <name>getEventId</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="498" column="25" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1767" bodyend="1770"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a2cc993428a335a993df0c9973e9b7b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::setEventListener</definition>
        <argsstring>(int, rr::EventListenerPtr)</argsstring>
        <name>setEventListener</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type><ref refid="rrExecutableModel_8h_1af42654ad469e89c71909fbbff90b3c07" kindref="member">rr::EventListenerPtr</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="499" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1772" bodyend="1775"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a6d3c205e3e4e9e6578a3ecb18f1067f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="rrExecutableModel_8h_1af42654ad469e89c71909fbbff90b3c07" kindref="member">rr::EventListenerPtr</ref></type>
        <definition>EventListenerPtr rr::CompiledExecutableModel::getEventListener</definition>
        <argsstring>(int)</argsstring>
        <name>getEventListener</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="500" column="34" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1777" bodyend="1780"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a32e97517da50a7b08174b2e26aebb3c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double rr::CompiledExecutableModel::getFloatingSpeciesAmountRate</definition>
        <argsstring>(int index, const double *reactionRates)</argsstring>
        <name>getFloatingSpeciesAmountRate</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>reactionRates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="506" column="20" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1782" bodyend="1786"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1adf911e78697e088e315c2235ebf63376" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::CompiledExecutableModel::setRandomSeed</definition>
        <argsstring>(int64_t)</argsstring>
        <name>setRandomSeed</name>
        <reimplements refid="classrr_1_1ExecutableModel_1aa5b4c23527fab27a54ac279de045c735">setRandomSeed</reimplements>
        <param>
          <type>int64_t</type>
        </param>
        <briefdescription>
<para>set the seed used by the random number generator. </para>
        </briefdescription>
        <detaileddescription>
<para>This will by definition reset the RNG. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="509" column="18" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1788" bodyend="1791"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a728ba55db8c4d193990452c9303ea133" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int64_t</type>
        <definition>int64_t rr::CompiledExecutableModel::getRandomSeed</definition>
        <argsstring>()</argsstring>
        <name>getRandomSeed</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a7a543cc2ccca4130d26c871308fa2b4d">getRandomSeed</reimplements>
        <briefdescription>
<para>get the seed used by the RNG. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="511" column="21" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1793" bodyend="1796"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a02b3938fd3ad7d20d33ed3e0b42da21a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double rr::CompiledExecutableModel::getRandom</definition>
        <argsstring>()</argsstring>
        <name>getRandom</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a1f69d29d4291440935ed41122ed83e7f">getRandom</reimplements>
        <briefdescription>
<para>Get a uniform random number between 0 and 1 created by the RNG. </para>
        </briefdescription>
        <detaileddescription>
<para>The type of RNG can be specified in the config file with the RANDOM_GENERATOR_TYPE key. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="513" column="20" bodyfile="c/rrCompiledExecutableModel.cpp" bodystart="1798" bodyend="1801"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a1db2b94da9271085a088c16acba2462e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>uint32_t</type>
        <definition>virtual uint32_t rr::CompiledExecutableModel::getFlags</definition>
        <argsstring>() const</argsstring>
        <name>getFlags</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a86c218fc4ad993ddd532a50f2918f383">getFlags</reimplements>
        <briefdescription>
<para>Get the current set of flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="515" column="22" bodyfile="c/rrCompiledExecutableModel.h" bodystart="515" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1CompiledExecutableModel_1a87c0f1441bb4f5222d69228d15ac1b0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void rr::CompiledExecutableModel::setFlags</definition>
        <argsstring>(uint32_t)</argsstring>
        <name>setFlags</name>
        <reimplements refid="classrr_1_1ExecutableModel_1a3474ace3dd70d16662142d377bd1b5f6">setFlags</reimplements>
        <param>
          <type>uint32_t</type>
        </param>
        <briefdescription>
<para>Set certain options that determine the state of the <ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref>, these are listed in. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c/rrCompiledExecutableModel.h" line="520" column="18" bodyfile="c/rrCompiledExecutableModel.h" bodystart="520" bodyend="523"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Both the <ref refid="classrr_1_1CModelGenerator" kindref="compound">CModelGenerator</ref> and the CSharpModelGenerator use the same paradigm of producing source code, calling a external compiler and loadig the resulting shared library. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements the <ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> interface using this paradigm. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>rr::CompiledExecutableModel</label>
        <link refid="classrr_1_1CompiledExecutableModel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rr::ExecutableModel</label>
        <link refid="classrr_1_1ExecutableModel"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>rr::SymbolList</label>
        <link refid="classrr_1_1SymbolList"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rr::CompiledExecutableModel</label>
        <link refid="classrr_1_1CompiledExecutableModel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>stoichiometryMatrix</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>mDLL</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ms</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>cAssignRates_b</edgelabel>
          <edgelabel>cGetCurrentValues</edgelabel>
          <edgelabel>cInitModel</edgelabel>
          <edgelabel>cInitModelData</edgelabel>
          <edgelabel>cevalEvents</edgelabel>
          <edgelabel>cevalModel</edgelabel>
          <edgelabel>cgetConcentration</edgelabel>
          <edgelabel>cgetModelName</edgelabel>
          <edgelabel>cgetNumLocalParameters</edgelabel>
          <edgelabel>csetConcentration</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>rr::ModelSymbols</label>
        <link refid="classrr_1_1ModelSymbols"/>
        <childnode refid="8" relation="usage">
          <edgelabel>mDependentSpeciesList</edgelabel>
          <edgelabel>mFunctionNames</edgelabel>
          <edgelabel>mFunctionParameters</edgelabel>
          <edgelabel>mIndependentSpeciesList</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>mRateRules</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mBoundarySpeciesList</edgelabel>
          <edgelabel>mCompartmentList</edgelabel>
          <edgelabel>mConservationList</edgelabel>
          <edgelabel>mFloatingSpeciesConcentrationList</edgelabel>
          <edgelabel>mGlobalParameterList</edgelabel>
          <edgelabel>mModifiableSpeciesReferenceList</edgelabel>
          <edgelabel>mReactionList</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="10">
        <label>std::map&lt; int, std::string &gt;</label>
      </node>
      <node id="6">
        <label>SharedLibrary</label>
      </node>
      <node id="9">
        <label>rr::IntStringHashTable</label>
        <link refid="classrr_1_1IntStringHashTable"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>SModelData</label>
        <link refid="structSModelData"/>
      </node>
      <node id="3">
        <label>DoubleMatrix</label>
      </node>
      <node id="12">
        <label>std::vector&lt; Symbol &gt;</label>
      </node>
      <node id="4">
        <label>rr::ModelSharedLibrary</label>
        <link refid="classrr_1_1ModelSharedLibrary"/>
        <childnode refid="5" relation="usage">
          <edgelabel>mLibName</edgelabel>
          <edgelabel>mPathToLib</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>mTheLib</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>rr::StringList</label>
        <link refid="classrr_1_1StringList"/>
      </node>
      <node id="2">
        <label>rr::ExecutableModel</label>
        <link refid="classrr_1_1ExecutableModel"/>
      </node>
    </collaborationgraph>
    <location file="c/rrCompiledExecutableModel.h" line="42" column="1" bodyfile="c/rrCompiledExecutableModel.h" bodystart="43" bodyend="524"/>
    <listofallmembers>
      <member refid="classrr_1_1CompiledExecutableModel_1ae7eda6b60005eb01f9d278599c9540dd" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>applyEventAssignment</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ab377d0bba85bbd8c8eec4f2ad132c41b" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>applyEvents</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ae0c386b45724d6ee0d09aa6c92d51c60" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>applyPendingEvents</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1af225567017f29585a721e19f395b8a16" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cAssignRates_a</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a7804b8c4086b51f3e7582acfbf279f3e" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cAssignRates_b</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a03a83d683b08de3bc3e4362a1bf2f191" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>ccomputeAllRatesOfChange</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a90658be420a21e54eb4b4c585b64830c" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>ccomputeConservedTotals</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a5871195828a4296d4fd708f706b7ec7f" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>ccomputeEventPriorities</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a8e1da512d5d5e09cbb1127e8ef49f705" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cComputeReactionRates</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a015020ebb051507bc5f6bf3d6c318b2e" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>ccomputeRules</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a4cc5f79290ee97a33ab7ff3570aa563f" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cconvertToAmounts</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a87bc7fe483e31c998befcb74a6af8213" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cconvertToConcentrations</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a40c7619a6c39e44d1b2c3e9edd03c6ff" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cevalEvents</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a8f4878decd5874b371374f18d26e30cb" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cevalInitialAssignments</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ae96ced57631c1e2244a52b57260ddee1" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cevalModel</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a8da8f86909562fc89b0261b6fddca571" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cgetConcentration</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1afaa881d7cc8a16df81ebe99aace9b5d3" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cGetCurrentValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a107de20a86ec2cb7be62576acef9d0da" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cgetModelName</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1aaa0ec96c6cbe536da8abcc6027fe7cc4" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cgetNumLocalParameters</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a6ed8623cb3b3d60e3843654a2c7242fd" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cinitializeInitialConditions</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a6f9e6580d1c25f305a83deba42c47454" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cInitializeRateRuleSymbols</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1afb7d96a19919a50d594ac799b09559dd" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cInitializeRates</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a3a38ba403d17d5c6db5f6994a705c9c7" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cInitModel</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a7a3af2b6c2ce06b3ac7765c34fb188c2" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cInitModelData</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a289e026daee71eb990147906c7f6aa96" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>CompiledExecutableModel</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1af5eaffccb3276d5df2c3648acad060fe" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>CompiledModelState</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a33d6803251960b0c331fc507bd4f0455" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>computeAllRatesOfChange</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a576dfc091736c090ea942d2deb4ef72e" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>computeConservedTotals</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1af78621cb3bd546eb1e1e3a381530b89e" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>computeEventPriorites</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ad63eae12df725323fe7d1455eebe2838" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>computeRules</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a91169a3e267ba2e9468bfb9bc37bfb81" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>convertToAmounts</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a35327952a7b67340f4613db543cf437c" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>convertToConcentrations</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a0a156cb3bfc3393e14c71d7d6c54c81c" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cresetEvents</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1aa0d979244966b7a8d4cfd8ec7e778735" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>csetBoundaryConditions</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a2bed2cc8acfc948194a133c753aaca4e" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>csetCompartmentVolumes</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1af12dfb932e55432e51119b3ed9456794" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>csetConcentration</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a33855ba6b661f3db7504fd6af5977a50" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>csetInitialConditions</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a6bea05828a524535e13f6953e87b97f2" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>csetParameterValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a21b1576296ce08904a525b5e53f9bc15" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>ctestConstraints</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a48432dee6530b3b380553cb907f9e0f5" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>cupdateDependentSpeciesValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ab6d1ae09762b1f11c04ec982ad8fb94e" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>evalEventAssignment</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a9ae88059e38dd380f5f10bbfc8b2c15a" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>evalEvents</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a91175275b452bbf367ed88bccea51455" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>evalInitialAssignments</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a2b6c90abe1a1052ebf4147609f65c338" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>evalInitialConditions</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a213b1bb086baf676d4a64a8db7cb228b" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>evalReactionRates</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a2e886dc06d056fbb6221f7a761f898cc" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>eventAssignment</name></member>
      <member refid="classrr_1_1ExecutableModel_1a0503ffbf5c6c971cf545d7570ec0404c" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>ExecutableModelFlags</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1aae2baea0b910865b8c85e773e69014be" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>getAmount</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a09681dd060af48372696dee3427a509b" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getBoundarySpeciesAmounts</name></member>
      <member refid="classrr_1_1ExecutableModel_1a892be60159e501929cbb1169533d5104" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getBoundarySpeciesAmounts</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a66747b5067ff6a1799bf3f49ff9d6493" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getBoundarySpeciesCompartmentIndex</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a050290614fc5e788ec8d839909cb362e" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getBoundarySpeciesConcentrations</name></member>
      <member refid="classrr_1_1ExecutableModel_1a17dbc546d79fe987ff625e0c387f5cbd" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getBoundarySpeciesConcentrations</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a3c99a105961f6fd7c69a2b7c1fb60032" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getBoundarySpeciesId</name></member>
      <member refid="classrr_1_1ExecutableModel_1a1eda6c6d5e9db5d9057510dbd9bbbef5" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getBoundarySpeciesId</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1adf4ab509d93bab14f0b1e34b85ad704a" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getBoundarySpeciesIndex</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a9176b67fd6f37a242323fdd58f402a59" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getCompartmentId</name></member>
      <member refid="classrr_1_1ExecutableModel_1a8edf24e2351bc5796ddfa0901dcbaee5" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getCompartmentId</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ac086fec83ad0f77876aface9965f6e38" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getCompartmentIndex</name></member>
      <member refid="classrr_1_1ExecutableModel_1aa19f2c21557264ce883bd24c3b8f647a" prot="public" virt="pure-virtual"><scope>rr::CompiledExecutableModel</scope><name>getCompartmentIndexForFloatingSpecies</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a445ab5652c7349bcbcb3469d5a94311e" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getCompartmentInitVolumes</name></member>
      <member refid="classrr_1_1ExecutableModel_1afbc91472ec905f668e0cc5714fdc30db" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getCompartmentInitVolumes</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a17ab2cef550fed61c4e2162ade95c62c" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getCompartmentVolumes</name></member>
      <member refid="classrr_1_1ExecutableModel_1a977a5a3a7ed0fcfa04fe74369a4526ae" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getCompartmentVolumes</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1aa7189b1968bfd7ca94f82219ba5b55d7" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getConservedMoietyId</name></member>
      <member refid="classrr_1_1ExecutableModel_1a0fac30c0c3cab7e52e7f305be6a453fb" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getConservedMoietyId</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a3e5addab5a5bf57e487874703fdbd244" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getConservedMoietyIndex</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a392d479dc9b6bb427e525e8b546af61d" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getConservedMoietyValues</name></member>
      <member refid="classrr_1_1ExecutableModel_1a8a155a08e3a7f015ebbe54e6dded9cfb" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getConservedMoietyValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a358042c7806b3ab4572e9ace4afe2e7c" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getConservedSumChanged</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ad816af65c4e850372d646c8fff23845b" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getEventDelays</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ae28c8efbbc3549f17dd66e33e59d7959" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getEventId</name></member>
      <member refid="classrr_1_1ExecutableModel_1a4ae80f154f19c3cb39957630e803a152" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getEventId</name></member>
      <member refid="classrr_1_1ExecutableModel_1a9a7ca6c6976625c1ebfa0e3cbeb6f51f" prot="public" virt="pure-virtual"><scope>rr::CompiledExecutableModel</scope><name>getEventIds</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ac7a3dc4d4e4df17dad7e521d09671189" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getEventIndex</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a6d3c205e3e4e9e6578a3ecb18f1067f9" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getEventListener</name></member>
      <member refid="classrr_1_1ExecutableModel_1a93633ae9a0f5b04c16115e291176aa9e" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getEventListener</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a7fc0ac16cf9fef92abb158dd4d043571" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getEventPriorities</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ae88b85f7caac07acbeed3d429bc74afb" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getEventRoots</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1af7f48f2f8aa3178f8e9247ea9ab5894c" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getEventTriggers</name></member>
      <member refid="classrr_1_1ExecutableModel_1a6402d7445658e1828be487e1a63bbc89" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getEventTriggers</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ac831d54ccdde2cd5df4a086ff944102e" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getExecutableModelDesc</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a1db2b94da9271085a088c16acba2462e" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getFlags</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a32e97517da50a7b08174b2e26aebb3c5" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesAmountRate</name></member>
      <member refid="classrr_1_1ExecutableModel_1a460387891972dfb029d5fdd6134c10eb" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesAmountRate</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ae68052960840d14da8998d00ad18503e" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesAmountRates</name></member>
      <member refid="classrr_1_1ExecutableModel_1ae1e4374bedf764a353165d7f3acc31c0" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesAmountRates</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a578a753970f79d1576172fc032f1e411" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesAmounts</name></member>
      <member refid="classrr_1_1ExecutableModel_1ac83c1f5b678079babd5eeb76c87a4e02" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesAmounts</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a5f6ea55fe53bae580f1edf703fc17b06" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesConcentration</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a3aa8c96b3a1a30346f05837b29ceb77d" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesConcentrationRates</name></member>
      <member refid="classrr_1_1ExecutableModel_1aae51da13c4dbe4e0ae21f12f3a23cdb8" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesConcentrationRates</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1aadcc3bd8f08ff2e62efe7c7a0c484f79" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesConcentrations</name></member>
      <member refid="classrr_1_1ExecutableModel_1afdb9b1204d85b4baf496e685e16c0479" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesConcentrations</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a3dab9587b521885924032e40cb6c1ea2" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesId</name></member>
      <member refid="classrr_1_1ExecutableModel_1a50dfa7535bec552fbc8396bd1ce99155" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesId</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a95e8e93fd51bb84a89ca45a22e3ace60" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesIndex</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a422740e3b4057098746f5039d0ea31b3" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesInitAmounts</name></member>
      <member refid="classrr_1_1ExecutableModel_1a21232f10be3c16a112ddd93170d9caa8" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesInitAmounts</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a5911a6126a583c8258b32e9753397296" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesInitConcentrations</name></member>
      <member refid="classrr_1_1ExecutableModel_1a6545a8afda7e5a52d9fb0ae945990d80" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getFloatingSpeciesInitConcentrations</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a7a55623288bf239c2486b48060160cd6" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getGlobalParameterId</name></member>
      <member refid="classrr_1_1ExecutableModel_1a741aa1e4a24bca93c8eb12019a33cd81" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getGlobalParameterId</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a8b0dec616b4154c8a56c68cc3265d502" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getGlobalParameterIndex</name></member>
      <member refid="classrr_1_1ExecutableModel_1a8a1693fc65e2e34772ca5acecad1e90b" prot="public" virt="pure-virtual"><scope>rr::CompiledExecutableModel</scope><name>getGlobalParameterInitValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a84cf75aaef544e60e2a786bbaec39392" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getGlobalParameterValues</name></member>
      <member refid="classrr_1_1ExecutableModel_1af598ac63c984d7101b0d026dd217a822" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getGlobalParameterValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a9c5f0f3045d073ae63d4f1e2b3cb232a" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getIds</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a7cf0832caf732cda5e42967c922c1539" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getInfo</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a7a35baccccf36442c3e38770587db25c" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getModelName</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a61a5e57762fd8a4a87ac5843f2314347" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNextPendingEventTime</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a1c5cb4c75584906946d426d1193da39e" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNumBoundarySpecies</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1aafd3cf14394ab83920eac901df0a5c87" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNumCompartments</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a02138d21075a752a3928615630078a6c" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNumConservedMoieties</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a60e52e1aaa1b775cc85a61567c1a13b0" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNumDepFloatingSpecies</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a5780766e212b015f2ce946b97dac6299" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNumEvents</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a08951a49b979f2fd3653f6376e18fd15" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNumFloatingSpecies</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ab362cc56a36821440b5737ca3cf07496" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNumGlobalParameters</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a57547419a8ad6d372ba861116850b788" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNumIndFloatingSpecies</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a5207e407a5a9d27c5c4834d01a0173b0" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNumLocalParameters</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ad41d28162371bccbda5e4e24978ea67c" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNumRateRules</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1aeab495d246324b89051360053c9ca42b" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getNumReactions</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a637150c6f6ca6bede8cbdd7e0405ce12" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getPendingEventSize</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a02b3938fd3ad7d20d33ed3e0b42da21a" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getRandom</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a728ba55db8c4d193990452c9303ea133" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getRandomSeed</name></member>
      <member refid="classrr_1_1ExecutableModel_1aa1d89fd7d5690de7add613f5ce75b631" prot="public" virt="pure-virtual"><scope>rr::CompiledExecutableModel</scope><name>getRateRuleSymbols</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a2a820ae64f278087b85f836aef5afb32" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getRateRuleValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a448c9bcff065fbb2e0c12015beea16c2" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getReactionId</name></member>
      <member refid="classrr_1_1ExecutableModel_1aeb911dc90408981370c78149680d9027" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getReactionId</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a9a2275b0715bc7461c8f402492462b05" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getReactionIndex</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a067e156d79dcdd676ec2351fc43170bc" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getReactionRates</name></member>
      <member refid="classrr_1_1ExecutableModel_1a37c53cc370ff236657272f5596fd27ff" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getReactionRates</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a6ba2d5c65fa0c94f521c22ff440a56bc" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getStateVector</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a064dda2d30b91be8a46e9f68c893e9f2" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getStateVectorId</name></member>
      <member refid="classrr_1_1ExecutableModel_1ac6c245edd9ecea5feea84cff15db7b26" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>getStateVectorId</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a4333e3139f974ae771ad2d2fb317208f" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getStateVectorRate</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a15522874be17399807aa1f0f1e2fd655" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getStoichiometry</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1add13e9f74b8918a43bee644d27dac876" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getStoichiometryMatrix</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1af50e6358c72134961ae87dd4406ababa" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getSupportedIdTypes</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1af02f8a5c72a7daa22b7a5138cc9848ff" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getTime</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ab7bc9e9b4426d9d22080bb64bd900cab" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>getValue</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a5736bfea4ad4d9fdf08d60b6a0dc941b" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>initializeInitialConditions</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ab4bceb8fee39aca02e6d5d627efeb215" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>initializeRateRuleSymbols</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ad7946e8df6ef7202138f86e356a57135" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>initializeRates</name></member>
      <member refid="classrr_1_1ExecutableModel_1a0503ffbf5c6c971cf545d7570ec0404ca389fbe7a44e9cb64d2e16415cd08554f" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>INTEGRATION</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a410819286030c7ec1c6ecc16292292b8" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>mAssignments</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ad871d89e7c91ca265f259aa6e53bc11d" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>mAssignmentTimes</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a9bc0bceca0e20f1824b8eabf7353759c" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>mConservedSumChanged</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a0e9f631e3808545a6e9c19c64b7ce089" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>mData</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ab74cb32586c9b684c42d82c2eb0970e6" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>mDLL</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ae3615496f4465565e719816aca47f842" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>mDummyDouble</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a92fa694df25872ca28ec2ebd013d0ddf" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>mDummyDoubleArray</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1aefb33ef87d2734970098f151e3d0d146" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>mDummyInt</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a8a1e046aa716f81c30ebb4a8ffbd4a42" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>mIsInitialized</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a8cab5094a3391b0b93e5ad9862f30c8c" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>modelStates</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a96f54b093369dba01f1922282734ea73" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>ms</name></member>
      <member refid="classrr_1_1ExecutableModel_1a0503ffbf5c6c971cf545d7570ec0404ca3a399e67ea485968593a0c692643e107" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>OPTIMIZE_REACTION_RATE_SELECTION</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ad6a1d9558dfadffa255bad46d3593efaaf078a648b00f4a19d8d8ff45147bf65a" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>PopDiscard</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a8aa4dc7066eb37d923b3d0f8a5ad87a8" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>popState</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1abb50d6fbc8cbd14a155989f76430d967" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>print</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a615e7f1917c7a11d01ed5f014bd4c07a" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>pushState</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a9dafdd77575ff11263fa27916fe0cbe2" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>removePendingAssignmentForIndex</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ad919983c3e2f1fe9b1d86d80ae8a938f" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>reset</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a2308bfaa84c422add0119fde85ba6026" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>reset</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a039ad6b5ffedd9d560fa1f270dbfa210" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>resetEvents</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a2dc1e802226e9a7278503bb0e5348351" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>retestEvents</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a146acfa8e42182a11e3d10dfa3a77521" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>retestEvents</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ac2c5e8d6f0e487d12743d624a505173f" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>retestEvents</name></member>
      <member refid="classrr_1_1ExecutableModel_1a8db1a8a035e0b226b16ae10b18caaf1e" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>saveState</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a2fc66633049fbc25d3838795ebf22684" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setBoundaryConditions</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a98f019d5e748b28c6dd6e7273873a761" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setBoundarySpeciesConcentrations</name></member>
      <member refid="classrr_1_1ExecutableModel_1a1a4409ff1e5e41a13b1dcf2ab936ab23" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>setBoundarySpeciesConcentrations</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1aef5d86ce6963e7a60406d4a9b72a810a" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setCompartmentInitVolumes</name></member>
      <member refid="classrr_1_1ExecutableModel_1a83fa84b59feb32abe1f2a6b178b6f106" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>setCompartmentInitVolumes</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a9ebcd8efc7236c3dd34d01a86c989012" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setCompartmentVolumes</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1adda73007bd312b341e4c03a0d1694bfc" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setCompartmentVolumes</name></member>
      <member refid="classrr_1_1ExecutableModel_1a81a08dad23cb196914961e41d1f2f491" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>setCompartmentVolumes</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ad3b1b9aa6d026c92f7bc118cb3a8d301" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>setConcentration</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a980c582f8efeac68297ec329b0b50d62" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setConservedMoietyValues</name></member>
      <member refid="classrr_1_1ExecutableModel_1a3281ae63f4ab21a070a7858f022c3f9a" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>setConservedMoietyValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1adcf2db50d1975580be0ae2323bc83d6a" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setConservedSumChanged</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a2cc993428a335a993df0c9973e9b7b3b" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setEventListener</name></member>
      <member refid="classrr_1_1ExecutableModel_1abc6d0913ac6cf58b413186e7dbfa2502" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>setEventListener</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a87c0f1441bb4f5222d69228d15ac1b0f" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setFlags</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a30f493afe7986c17d38577a37f5715b9" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setFloatingSpeciesAmounts</name></member>
      <member refid="classrr_1_1ExecutableModel_1a47b3aed1ff982849b4398e85735650fc" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>setFloatingSpeciesAmounts</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ab11a809d3d3d6b03d778079aad441e16" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setFloatingSpeciesConcentrations</name></member>
      <member refid="classrr_1_1ExecutableModel_1aecd3bdfe291bd3791fe7e4e75a71ac3f" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>setFloatingSpeciesConcentrations</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a858d37fbecd6c28d45dbbf35f4b3eeb9" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setFloatingSpeciesInitAmounts</name></member>
      <member refid="classrr_1_1ExecutableModel_1ab18c3070d601ba587d24a16353fc8b60" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>setFloatingSpeciesInitAmounts</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ab90a9abaa0fc4a6b40642db955e76a25" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setFloatingSpeciesInitConcentrations</name></member>
      <member refid="classrr_1_1ExecutableModel_1a29d64b57e270120b9ee37d3464ffbb3c" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>setFloatingSpeciesInitConcentrations</name></member>
      <member refid="classrr_1_1ExecutableModel_1a71d62fc8b558dfb4da4de4dbd3845665" prot="public" virt="pure-virtual"><scope>rr::CompiledExecutableModel</scope><name>setGlobalParameterInitValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ab64eca3d7dd17b27ae3f6c50b3bafdea" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setGlobalParameterValues</name></member>
      <member refid="classrr_1_1ExecutableModel_1a46fbc6162f59ac7052c25879dba8e423" prot="public" virt="pure-virtual" ambiguityscope="rr::ExecutableModel::"><scope>rr::CompiledExecutableModel</scope><name>setGlobalParameterValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ad575ef19c6c58454aa965dac1a980278" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setInitialConditions</name></member>
      <member refid="classrr_1_1ExecutableModel_1aec2ca2935ed5ed13500204fdec32e058" prot="protected" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>setIntegration</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a3bcfd7683ce99c101d216121c6f836df" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setParameterValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1adf911e78697e088e315c2235ebf63376" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setRandomSeed</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ade8ee1b8f813ff02d80a9df79af4e461" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setRateRuleValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a39fc85f1dfeba7d5885f66f78f9b4704" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setStateVector</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a324c8df0ec3e73850ca0ac48d2770594" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setTime</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a6ed828bd7380883f7d70eab3b11cb47c" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setupDLLFunctions</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a53a996bfec50781d72b01ef4ed50d15f" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>setupModelData</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a6c3c63fd848f8ffae1c7125fe79f2ad7" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>setValue</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1afa911d07605712c1f1eca8df729e1233" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>sortEventsByPriority</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1abc440ef2f6e7543a51c0255ae8384246" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>sortEventsByPriority</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1ad6a1d9558dfadffa255bad46d3593efa" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>StateStackOptions</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a74c9fa0353bea3e576414eafe78759cc" prot="public" virt="non-virtual"><scope>rr::CompiledExecutableModel</scope><name>stoichiometryMatrix</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1aa5ccbd3d20bf857d8361c2bc4d7130c6" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>testConstraints</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a2e1c5da00f0aa9b79c37c21701b8ac76" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>updateDependentSpeciesValues</name></member>
      <member refid="classrr_1_1CompiledExecutableModel_1a5d538e2fccd5ad73a8cc4bda3347eafd" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>~CompiledExecutableModel</name></member>
      <member refid="classrr_1_1ExecutableModel_1a7d670c92b720d7dcf3ab70fa9d1b14d0" prot="public" virt="virtual"><scope>rr::CompiledExecutableModel</scope><name>~ExecutableModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
