<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classrrllvm_1_1LLVMModelGenerator" kind="class" language="C++" prot="public">
    <compoundname>rrllvm::LLVMModelGenerator</compoundname>
    <includes refid="LLVMModelGenerator_8h" local="no">LLVMModelGenerator.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelGenerator_1ad117e1d1c9871906b421903262a4ebb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">rr::ExecutableModel</ref> *</type>
        <definition>ExecutableModel * rrllvm::LLVMModelGenerator::createModel</definition>
        <argsstring>(const libsbml::SBMLDocument *sbml, const std::string &amp;md5, std::uint32_t options)</argsstring>
        <name>createModel</name>
        <qualifiedname>rrllvm::LLVMModelGenerator::createModel</qualifiedname>
        <param>
          <type>const libsbml::SBMLDocument *</type>
          <declname>sbml</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>md5</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Create an executable model from an sbml std::string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>The sbml md5 is used as the LLVM module name. This facilitates object caching via rrObjectCache since the LLVM module name is the key in the object map used to cache the objects.</para>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.h" line="47" column="32" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="499" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="classrrllvm_1_1LLVMModelGenerator_1acca1a198b41b71a1abfc28f45422b861" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">rr::ExecutableModel</ref> *</type>
        <definition>ExecutableModel * rrllvm::LLVMModelGenerator::regenerateModel</definition>
        <argsstring>(rr::ExecutableModel *oldModel, libsbml::SBMLDocument *doc, uint options)</argsstring>
        <name>regenerateModel</name>
        <qualifiedname>rrllvm::LLVMModelGenerator::regenerateModel</qualifiedname>
        <param>
          <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">rr::ExecutableModel</ref> *</type>
          <declname>oldModel</declname>
        </param>
        <param>
          <type>libsbml::SBMLDocument *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Regenerate an executable model from an existing sbml document i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>generate the model normally from the SBML document, but copy the values of the floating species (initial and current), boundary species, compartments (initial and current), global parameters (initial and current) that are in both oldModel and doc, as well as time from the old model into the one returned </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="llvm/LLVMModelGenerator.h" line="55" column="28" bodyfile="llvm/LLVMModelGenerator.cpp" bodystart="285" bodyend="496"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>General concepts: </para>
    </briefdescription>
    <detaileddescription>
<para>SBML defines chemical species.</para>
<para>Floating Species: species whose value varies over time, i.e. they can &apos;float&apos; Boundary Species: boundary condition species, values are fixed to initial conditions. </para>
    </detaileddescription>
    <location file="llvm/LLVMModelGenerator.h" line="40" column="1" bodyfile="llvm/LLVMModelGenerator.h" bodystart="41" bodyend="57"/>
    <listofallmembers>
      <member refid="classrrllvm_1_1LLVMModelGenerator_1ad117e1d1c9871906b421903262a4ebb6" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelGenerator</scope><name>createModel</name></member>
      <member refid="classrrllvm_1_1LLVMModelGenerator_1acca1a198b41b71a1abfc28f45422b861" prot="public" virt="non-virtual"><scope>rrllvm::LLVMModelGenerator</scope><name>regenerateModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
