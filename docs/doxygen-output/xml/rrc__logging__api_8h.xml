<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="rrc__logging__api_8h" kind="file" language="C++">
    <compoundname>rrc_logging_api.h</compoundname>
    <includes refid="rrc__exporter_8h" local="yes">rrc_exporter.h</includes>
    <includes refid="rrc__types_8h" local="yes">rrc_types.h</includes>
    <includedby refid="rrc__api_8h" local="yes">/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_api.h</includedby>
    <includedby refid="rrc__logging__api_8cpp" local="yes">/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>rrc_types.h</label>
        <link refid="rrc__types_8h"/>
      </node>
      <node id="1">
        <label>/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h</label>
        <link refid="rrc__logging__api_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>rrc_exporter.h</label>
        <link refid="rrc__exporter_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_api.h</label>
        <link refid="rrc__api_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h</label>
        <link refid="rrc__logging__api_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_api.cpp</label>
        <link refid="rrc__api_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686a" prot="public" static="no" strong="no">
        <type></type>
        <name>CLogLevel</name>
        <enumvalue id="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa709ec9008fa428cb2dff7172813f4e16" prot="public">
          <name>CL_PRIO_CURRENT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa525ac69677867e7394315ab9e0ca0730" prot="public">
          <name>CL_PRIO_FATAL</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Use the current level <ndash/> don&apos;t change the level from what it is. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa05ec9ed752e7dee87bc0318c3bc99cef" prot="public">
          <name>CL_PRIO_CRITICAL</name>
          <briefdescription>
<para>A fatal error. The application will most likely terminate. This is the highest priority. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aac8c0c1c440ee2f6e8bee9affa0dd2d47" prot="public">
          <name>CL_PRIO_ERROR</name>
          <briefdescription>
<para>A critical error. The application might not be able to continue running successfully. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa7a3e540aeb201b05e207e13e09a203b6" prot="public">
          <name>CL_PRIO_WARNING</name>
          <briefdescription>
<para>An error. An operation did not complete successfully, but the application as a whole is not affected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa3134765a05a2946e8d63dc2523329903" prot="public">
          <name>CL_PRIO_NOTICE</name>
          <briefdescription>
<para>A warning. An operation completed with an unexpected result. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aab51627982460bb987ed7caf2d13fab81" prot="public">
          <name>CL_PRIO_INFORMATION</name>
          <briefdescription>
<para>A notice, which is an information with just a higher priority. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aaa904cf111d8dd10890a7c8048fe18b54" prot="public">
          <name>CL_PRIO_DEBUG</name>
          <briefdescription>
<para>An informational message, usually denoting the successful completion of an operation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aaa420078cddfd67c148f07436885216d1" prot="public">
          <name>CL_PRIO_TRACE</name>
          <briefdescription>
<para>A debugging message. </para>
          </briefdescription>
          <detaileddescription>
<para>A tracing message. This is the lowest priority. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Log level enum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" line="58" column="1" bodyfile="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" bodystart="59" bodyend="69"/>
      </memberdef>
      <memberdef kind="enum" id="rrc__logging__api_8h_1a06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no" strong="no">
        <type></type>
        <name>@0</name>
        <enumvalue id="rrc__logging__api_8h_1a06fc87d81c62e9abb8790b6e5713c55baa6eb0c7467fd39caf4dbb9417ac7f09d" prot="public">
          <name>clError</name>
          <initializer>= CL_PRIO_ERROR</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrc__logging__api_8h_1a06fc87d81c62e9abb8790b6e5713c55bac74db9ab5150d2ed035aa93972003037" prot="public">
          <name>clInfo</name>
          <initializer>= CL_PRIO_INFORMATION</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrc__logging__api_8h_1a06fc87d81c62e9abb8790b6e5713c55ba9c46253a407ae594de755e0ddf0f4a5d" prot="public">
          <name>clDebug</name>
          <initializer>= CL_PRIO_DEBUG</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rrc__logging__api_8h_1a06fc87d81c62e9abb8790b6e5713c55ba5a220ab2d09c75b79455db3cddbe54cb" prot="public">
          <name>clWarning</name>
          <initializer>= CL_PRIO_WARNING</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" line="71" column="1" bodyfile="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" bodystart="72" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__logging_1ga26aae545bbc31c1505ade0579741a4b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC bool rrcCallConv</type>
        <definition>C_DECL_SPEC bool rrcCallConv enableLoggingToConsole</definition>
        <argsstring>(void)</argsstring>
        <name>enableLoggingToConsole</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Enable logging to console. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" line="83" column="30" declfile="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" declline="83" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1gaa5be6edee1af88ca1f87bf17568ea1cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC bool rrcCallConv</type>
        <definition>C_DECL_SPEC bool rrcCallConv disableLoggingToConsole</definition>
        <argsstring>(void)</argsstring>
        <name>disableLoggingToConsole</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disable logging to console. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" line="90" column="30" declfile="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" declline="90" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1ga94829307689bb7f93c59d3098b83a9f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC bool rrcCallConv</type>
        <definition>C_DECL_SPEC bool rrcCallConv enableLoggingToFile</definition>
        <argsstring>()</argsstring>
        <name>enableLoggingToFile</name>
        <briefdescription>
<para>Enable logging to logFile. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" line="97" column="30" declfile="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" declline="97" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1ga9ccf608e3864a75bdca868af6b511b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC bool rrcCallConv</type>
        <definition>C_DECL_SPEC bool rrcCallConv enableLoggingToFileWithPath</definition>
        <argsstring>(const char *path)</argsstring>
        <name>enableLoggingToFileWithPath</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Enable logging to a log file with the specified path. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" line="104" column="30" declfile="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" declline="104" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1gaed2bf69408c13ca8e3d65149261e6689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC bool rrcCallConv</type>
        <definition>C_DECL_SPEC bool rrcCallConv disableLoggingToFile</definition>
        <argsstring>()</argsstring>
        <name>disableLoggingToFile</name>
        <briefdescription>
<para>Disable logging to logFile. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" line="111" column="30" declfile="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" declline="111" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1ga6e6cb15a163ea13e5ef9f0ebfded2c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC bool rrcCallConv</type>
        <definition>C_DECL_SPEC bool rrcCallConv setLogLevel</definition>
        <argsstring>(const char *lvl)</argsstring>
        <name>setLogLevel</name>
        <param>
          <type>const char *</type>
          <declname>lvl</declname>
        </param>
        <briefdescription>
<para>Set the logging status level The logging level is determined by the following strings. </para>
        </briefdescription>
        <detaileddescription>
<para>&quot;ANY&quot;, &quot;DEBUG5&quot;, &quot;DEBUG4&quot;, &quot;DEBUG3&quot;, &quot;DEBUG2&quot;, &quot;DEBUG1&quot;, &quot;DEBUG&quot;, &quot;INFO&quot;, &quot;WARNING&quot;, &quot;ERROR&quot;</para>
<para>Example:<programlisting><codeline><highlight class="normal">setLogLevel<sp/>(&quot;DEBUG4&quot;)<sp/></highlight></codeline>
</programlisting></para>
<para>Will show log messages with levels DEBUG4, DEBUG3 -&gt; Error</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lvl</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the logging level string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" line="128" column="30" declfile="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" declline="128" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1ga0d9810fbff78ccdf4912d5789d55f49e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC char *rrcCallConv</type>
        <definition>C_DECL_SPEC char* rrcCallConv getLogLevel</definition>
        <argsstring>(void)</argsstring>
        <name>getLogLevel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the logging status level as a pointer to a string. </para>
        </briefdescription>
        <detaileddescription>
<para>The logging level can be one of the following strings</para>
<para>&quot;ANY&quot;, &quot;DEBUG5&quot;, &quot;DEBUG4&quot;, &quot;DEBUG3&quot;, &quot;DEBUG2&quot;, &quot;DEBUG1&quot;, &quot;DEBUG&quot;, &quot;INFO&quot;, &quot;WARNING&quot;, &quot;ERROR&quot;</para>
<para>Example:<programlisting><codeline><highlight class="normal">str<sp/>=<sp/>getLogLevel<sp/>(void)<sp/></highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Returns null if it fails else returns a pointer to the logging string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" line="143" column="30" declfile="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" declline="143" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1ga05133e19d88371f05908ba5f87ca57ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC char *rrcCallConv</type>
        <definition>C_DECL_SPEC char* rrcCallConv getLogFileName</definition>
        <argsstring>(void)</argsstring>
        <name>getLogFileName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a pointer to the string that holds the logging file name path. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: str = getLogFileName (void)</para>
<para><simplesect kind="return"><para>Returns null if it fails otherwise returns the full path to the logging file name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" line="153" column="30" declfile="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" declline="153" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__logging_1gaa6fb15f5bbab056c9351695bcb0775a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C_DECL_SPEC void rrcCallConv</type>
        <definition>C_DECL_SPEC void rrcCallConv logMsg</definition>
        <argsstring>(enum CLogLevel lvl, const char *msg)</argsstring>
        <name>logMsg</name>
        <param>
          <type>enum <ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686a" kindref="member">CLogLevel</ref></type>
          <declname>lvl</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Create a log message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lvl</parametername>
</parameternamelist>
<parameterdescription>
<para>Loglevel for message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Log message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" line="161" column="30" declfile="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h" declline="161" declcolumn="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>roadRunner C wrappers 2012 </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Totte Karlsson &amp; Herbert M Sauro</para>
</simplesect>
&lt;-----------------------------------------------------------<mdash/> This file is part of cRoadRunner. See <ulink url="http://code.google.com/p/roadrunnerlib">http://code.google.com/p/roadrunnerlib</ulink> for more details.</para>
<para>Copyright (C) 2012-2013 University of Washington, Seattle, WA, USA</para>
<para>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at <verbatim>http://www.apache.org/licenses/LICENSE-2.0
</verbatim></para>
<para>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</para>
<para>In plain english this means:</para>
<para>You CAN freely download and use this software, in whole or in part, for personal, company internal, or commercial purposes;</para>
<para>You CAN use the software in packages or distributions that you create.</para>
<para>You SHOULD include a copy of the license in any redistribution you may make;</para>
<para>You are NOT required include the source of software, or of any modifications you may have made to it, in any redistribution you may assemble that includes it.</para>
<para>YOU CANNOT:</para>
<para>redistribute any piece of this software without proper attribution; </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="42"><highlight class="preprocessor">#ifndef<sp/>rrc_logging_apiH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rrc_logging_apiH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rrc__exporter_8h" kindref="compound">rrc_exporter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rrc__types_8h" kindref="compound">rrc_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rrc</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686a" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686a" kindref="member">CLogLevel</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CL_PRIO_CURRENT<sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="61" refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa525ac69677867e7394315ab9e0ca0730" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa525ac69677867e7394315ab9e0ca0730" kindref="member">CL_PRIO_FATAL</ref><sp/>=<sp/>1,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa05ec9ed752e7dee87bc0318c3bc99cef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa05ec9ed752e7dee87bc0318c3bc99cef" kindref="member">CL_PRIO_CRITICAL</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aac8c0c1c440ee2f6e8bee9affa0dd2d47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aac8c0c1c440ee2f6e8bee9affa0dd2d47" kindref="member">CL_PRIO_ERROR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa7a3e540aeb201b05e207e13e09a203b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa7a3e540aeb201b05e207e13e09a203b6" kindref="member">CL_PRIO_WARNING</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa3134765a05a2946e8d63dc2523329903" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa3134765a05a2946e8d63dc2523329903" kindref="member">CL_PRIO_NOTICE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aab51627982460bb987ed7caf2d13fab81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aab51627982460bb987ed7caf2d13fab81" kindref="member">CL_PRIO_INFORMATION</ref>,<sp/></highlight></codeline>
<codeline lineno="67" refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aaa904cf111d8dd10890a7c8048fe18b54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aaa904cf111d8dd10890a7c8048fe18b54" kindref="member">CL_PRIO_DEBUG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aaa420078cddfd67c148f07436885216d1" kindref="member">CL_PRIO_TRACE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aaa420078cddfd67c148f07436885216d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>clError<sp/>=<sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aac8c0c1c440ee2f6e8bee9affa0dd2d47" kindref="member">CL_PRIO_ERROR</ref>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>clInfo<sp/><sp/>=<sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aab51627982460bb987ed7caf2d13fab81" kindref="member">CL_PRIO_INFORMATION</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>clDebug<sp/>=<sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aaa904cf111d8dd10890a7c8048fe18b54" kindref="member">CL_PRIO_DEBUG</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>clWarning<sp/>=<sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686aa7a3e540aeb201b05e207e13e09a203b6" kindref="member">CL_PRIO_WARNING</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83" refid="group__logging_1ga26aae545bbc31c1505ade0579741a4b9" refkind="member"><highlight class="normal">C_DECL_SPEC<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rrcCallConv<sp/><ref refid="group__logging_1ga26aae545bbc31c1505ade0579741a4b9" kindref="member">enableLoggingToConsole</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group__logging_1gaa5be6edee1af88ca1f87bf17568ea1cb" refkind="member"><highlight class="normal">C_DECL_SPEC<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rrcCallConv<sp/><ref refid="group__logging_1gaa5be6edee1af88ca1f87bf17568ea1cb" kindref="member">disableLoggingToConsole</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="group__logging_1ga94829307689bb7f93c59d3098b83a9f7" refkind="member"><highlight class="normal">C_DECL_SPEC<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rrcCallConv<sp/><ref refid="group__logging_1ga94829307689bb7f93c59d3098b83a9f7" kindref="member">enableLoggingToFile</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group__logging_1ga9ccf608e3864a75bdca868af6b511b17" refkind="member"><highlight class="normal">C_DECL_SPEC<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rrcCallConv<sp/><ref refid="group__logging_1ga9ccf608e3864a75bdca868af6b511b17" kindref="member">enableLoggingToFileWithPath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="group__logging_1gaed2bf69408c13ca8e3d65149261e6689" refkind="member"><highlight class="normal">C_DECL_SPEC<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rrcCallConv<sp/><ref refid="group__logging_1gaed2bf69408c13ca8e3d65149261e6689" kindref="member">disableLoggingToFile</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="group__logging_1ga6e6cb15a163ea13e5ef9f0ebfded2c78" refkind="member"><highlight class="normal">C_DECL_SPEC<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rrcCallConv<sp/><ref refid="group__logging_1ga6e6cb15a163ea13e5ef9f0ebfded2c78" kindref="member">setLogLevel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lvl);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="group__logging_1ga0d9810fbff78ccdf4912d5789d55f49e" refkind="member"><highlight class="normal">C_DECL_SPEC<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>rrcCallConv<sp/><ref refid="group__logging_1ga0d9810fbff78ccdf4912d5789d55f49e" kindref="member">getLogLevel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="group__logging_1ga05133e19d88371f05908ba5f87ca57ad" refkind="member"><highlight class="normal">C_DECL_SPEC<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>rrcCallConv<sp/><ref refid="group__logging_1ga05133e19d88371f05908ba5f87ca57ad" kindref="member">getLogFileName</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">C_DECL_SPEC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rrcCallConv<sp/><ref refid="group__logging_1gaa6fb15f5bbab056c9351695bcb0775a6" kindref="member">logMsg</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="rrc__logging__api_8h_1a588bd44cc2c96622ce20b8aba702686a" kindref="member">CLogLevel</ref><sp/>lvl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rrc<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/ciaranwelsh/Documents/roadrunner/wrappers/C/rrc_logging_api.h"/>
  </compounddef>
</doxygen>
