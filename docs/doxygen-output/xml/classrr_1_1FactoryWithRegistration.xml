<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classrr_1_1FactoryWithRegistration" kind="class" language="C++" prot="public">
    <compoundname>rr::FactoryWithRegistration</compoundname>
    <derivedcompoundref refid="classrr_1_1IntegratorFactory" prot="public" virt="non-virtual">rr::IntegratorFactory</derivedcompoundref>
    <derivedcompoundref refid="classrr_1_1SteadyStateSolverFactory" prot="public" virt="non-virtual">rr::SteadyStateSolverFactory</derivedcompoundref>
    <includes refid="FactoryWithRegistration_8h" local="no">FactoryWithRegistration.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrr_1_1FactoryWithRegistration_1af22bbf5b406cd4c0b1e104d1ea62530b" prot="protected" static="no" mutable="no">
        <type>RegistrarVector</type>
        <definition>RegistrarVector rr::FactoryWithRegistration::registrars</definition>
        <argsstring></argsstring>
        <name>registrars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FactoryWithRegistration.h" line="68" column="25" bodyfile="FactoryWithRegistration.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrr_1_1FactoryWithRegistration_1a1b4253d8373e8d31919de20e63d834c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>rr::FactoryWithRegistration::~FactoryWithRegistration</definition>
        <argsstring>()</argsstring>
        <name>~FactoryWithRegistration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FactoryWithRegistration.h" line="30" column="17" bodyfile="FactoryWithRegistration.cpp" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1FactoryWithRegistration_1a7c398ee43e2cc611cfdc9ba1598a1c64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrr_1_1Solver" kindref="compound">Solver</ref> *</type>
        <definition>Solver * rr::FactoryWithRegistration::New</definition>
        <argsstring>(const std::string &amp;name, ExecutableModel *m) const</argsstring>
        <name>New</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classrr_1_1ExecutableModel" kindref="compound">ExecutableModel</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Constructs a new integrator given the name (e.g. cvode, gillespie) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM, WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FactoryWithRegistration.h" line="37" column="16" bodyfile="FactoryWithRegistration.cpp" bodystart="20" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1FactoryWithRegistration_1a8d75bd9ffec1eef7241f173a64ef5674" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rr::FactoryWithRegistration::registerSolver</definition>
        <argsstring>(Registrar *i)</argsstring>
        <name>registerSolver</name>
        <param>
          <type><ref refid="classrr_1_1Registrar" kindref="compound">Registrar</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Registers a new integrator with the factory so that it can be constructed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM, WBC  Should be called at startup for new integrators. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FactoryWithRegistration.h" line="45" column="22" bodyfile="FactoryWithRegistration.cpp" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1FactoryWithRegistration_1a2235f601129fa81c0d32b6e778940c72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t rr::FactoryWithRegistration::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the singleton instance of the integrator factory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM, WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FactoryWithRegistration.h" line="53" column="29" bodyfile="FactoryWithRegistration.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1FactoryWithRegistration_1a8ac0326917df8a3aa25ed9bba5cb066d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::FactoryWithRegistration::name</definition>
        <argsstring>(std::size_t n) const</argsstring>
        <name>name</name>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FactoryWithRegistration.h" line="55" column="29" bodyfile="FactoryWithRegistration.cpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1FactoryWithRegistration_1adfdf0ab1c4e8e61c20c3af4809baadc0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::FactoryWithRegistration::hint</definition>
        <argsstring>(std::size_t n) const</argsstring>
        <name>hint</name>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FactoryWithRegistration.h" line="57" column="29" bodyfile="FactoryWithRegistration.cpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classrr_1_1FactoryWithRegistration_1a87bfaaa30d0574a096f1a2c0e98d13dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rr::FactoryWithRegistration::description</definition>
        <argsstring>(std::size_t n) const</argsstring>
        <name>description</name>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FactoryWithRegistration.h" line="59" column="29" bodyfile="FactoryWithRegistration.cpp" bodystart="53" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrr_1_1FactoryWithRegistration_1a5bf68f07f71d724839bc759a1791efa2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rr::FactoryWithRegistration::FactoryWithRegistration</definition>
        <argsstring>()=default</argsstring>
        <name>FactoryWithRegistration</name>
        <briefdescription>
<para>Prevents external instantiation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>JKM, WBC </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FactoryWithRegistration.h" line="66" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Constructs new integrators. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>JKM, WBC  Implements the factory and singleton patterns. Constructs a new integrator given the name (e.g. cvode, gillespie) and returns a base pointer to <ref refid="classrr_1_1Integrator" kindref="compound">rr::Integrator</ref>. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>rr::IntegratorFactory</label>
        <link refid="classrr_1_1IntegratorFactory"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rr::SteadyStateSolverFactory</label>
        <link refid="classrr_1_1SteadyStateSolverFactory"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rr::FactoryWithRegistration</label>
        <link refid="classrr_1_1FactoryWithRegistration"/>
      </node>
    </inheritancegraph>
    <location file="FactoryWithRegistration.h" line="28" column="5" bodyfile="FactoryWithRegistration.h" bodystart="28" bodyend="70"/>
    <listofallmembers>
      <member refid="classrr_1_1FactoryWithRegistration_1a87bfaaa30d0574a096f1a2c0e98d13dc" prot="public" virt="virtual"><scope>rr::FactoryWithRegistration</scope><name>description</name></member>
      <member refid="classrr_1_1FactoryWithRegistration_1a5bf68f07f71d724839bc759a1791efa2" prot="protected" virt="non-virtual"><scope>rr::FactoryWithRegistration</scope><name>FactoryWithRegistration</name></member>
      <member refid="classrr_1_1FactoryWithRegistration_1adfdf0ab1c4e8e61c20c3af4809baadc0" prot="public" virt="virtual"><scope>rr::FactoryWithRegistration</scope><name>hint</name></member>
      <member refid="classrr_1_1FactoryWithRegistration_1a8ac0326917df8a3aa25ed9bba5cb066d" prot="public" virt="virtual"><scope>rr::FactoryWithRegistration</scope><name>name</name></member>
      <member refid="classrr_1_1FactoryWithRegistration_1a7c398ee43e2cc611cfdc9ba1598a1c64" prot="public" virt="non-virtual"><scope>rr::FactoryWithRegistration</scope><name>New</name></member>
      <member refid="classrr_1_1FactoryWithRegistration_1a8d75bd9ffec1eef7241f173a64ef5674" prot="public" virt="virtual"><scope>rr::FactoryWithRegistration</scope><name>registerSolver</name></member>
      <member refid="classrr_1_1FactoryWithRegistration_1af22bbf5b406cd4c0b1e104d1ea62530b" prot="protected" virt="non-virtual"><scope>rr::FactoryWithRegistration</scope><name>registrars</name></member>
      <member refid="classrr_1_1FactoryWithRegistration_1a2235f601129fa81c0d32b6e778940c72" prot="public" virt="virtual"><scope>rr::FactoryWithRegistration</scope><name>size</name></member>
      <member refid="classrr_1_1FactoryWithRegistration_1a1b4253d8373e8d31919de20e63d834c0" prot="public" virt="virtual"><scope>rr::FactoryWithRegistration</scope><name>~FactoryWithRegistration</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
