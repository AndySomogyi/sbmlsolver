<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="LibrdfQueryResults_8cpp" kind="file" language="C++">
    <compoundname>LibrdfQueryResults.cpp</compoundname>
    <includes refid="LibrdfQueryResults_8h" local="yes">LibrdfQueryResults.h</includes>
    <incdepgraph>
      <node id="1991">
        <label>regex</label>
      </node>
      <node id="1989">
        <label>World.h</label>
        <link refid="World_8h_source"/>
        <childnode refid="1987" relation="include">
        </childnode>
        <childnode refid="1990" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="1991" relation="include">
        </childnode>
      </node>
      <node id="1986">
        <label>LibrdfQueryResults.h</label>
        <link refid="LibrdfQueryResults_8h_source"/>
        <childnode refid="1987" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="1989" relation="include">
        </childnode>
      </node>
      <node id="1990">
        <label>iostream</label>
      </node>
      <node id="1985">
        <label>src/redland/RedlandWrapper/src/LibrdfQueryResults.cpp</label>
        <link refid="LibrdfQueryResults_8cpp"/>
        <childnode refid="1986" relation="include">
        </childnode>
      </node>
      <node id="1987">
        <label>librdf.h</label>
      </node>
      <node id="1988">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceredland">redland</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;LibrdfQueryResults.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceredland" kindref="compound">redland</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>LibrdfQueryResults::LibrdfQueryResults(librdf_query_results<sp/>*query_results)<sp/>:</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query_results_(query_results)<sp/>{}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LibrdfQueryResults::deleter::operator()(librdf_query_results<sp/>*query_results)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(query_results)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>librdf_free_query_results(query_results);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>librdf_query_results<sp/>*LibrdfQueryResults::get()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>query_results_.get();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>LibrdfQueryResults::str(std::string<sp/>format)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Todo<sp/>implement<sp/>librdf_query_results_get_binding_value_by_name(</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query_results_,<sp/>(const<sp/>char<sp/>*)<sp/>name.c_str());</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>use<sp/>in<sp/>Query.cpp</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/redland/RedlandWrapper/src/LibrdfQueryResults.cpp"/>
  </compounddef>
</doxygen>
