<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="RaptorIOStream_8cpp" kind="file" language="C++">
    <compoundname>RaptorIOStream.cpp</compoundname>
    <includes refid="RaptorIOStream_8h" local="yes">RaptorIOStream.h</includes>
    <incdepgraph>
      <node id="2174">
        <label>regex</label>
      </node>
      <node id="2177">
        <label>exception</label>
      </node>
      <node id="2169">
        <label>RaptorIOStream.h</label>
        <link refid="RaptorIOStream_8h_source"/>
        <childnode refid="2170" relation="include">
        </childnode>
        <childnode refid="2171" relation="include">
        </childnode>
        <childnode refid="2172" relation="include">
        </childnode>
        <childnode refid="2175" relation="include">
        </childnode>
        <childnode refid="2176" relation="include">
        </childnode>
      </node>
      <node id="2172">
        <label>World.h</label>
        <link refid="World_8h_source"/>
        <childnode refid="2171" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2170" relation="include">
        </childnode>
        <childnode refid="2174" relation="include">
        </childnode>
      </node>
      <node id="2168">
        <label>src/redland/RedlandWrapper/src/RaptorIOStream.cpp</label>
        <link refid="RaptorIOStream_8cpp"/>
        <childnode refid="2169" relation="include">
        </childnode>
      </node>
      <node id="2176">
        <label>LibrdfException.h</label>
        <link refid="LibrdfException_8h_source"/>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
      </node>
      <node id="2175">
        <label>utility</label>
      </node>
      <node id="2173">
        <label>iostream</label>
      </node>
      <node id="2171">
        <label>librdf.h</label>
      </node>
      <node id="2170">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceredland">redland</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Ciaran<sp/>on<sp/>5/26/2020.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RaptorIOStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceredland" kindref="compound">redland</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RaptorIOStream::deleter::operator()(raptor_iostream<sp/>*iostream)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iostream)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raptor_free_iostream(iostream);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>RaptorIOStream::RaptorIOStream(raptor_iostream<sp/>*iostream)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>iostream_(std::unique_ptr&lt;raptor_iostream,<sp/>deleter&gt;(iostream))<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>raptor_iostream<sp/>*RaptorIOStream::get()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iostream_.get();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;RaptorIOStream,<sp/>void<sp/>*&gt;<sp/>RaptorIOStream::newIOToString()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer_to_hold_string<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RaptorIOStream<sp/>ios(raptor_new_iostream_to_string(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>World::getRaptor(),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>&amp;buffer_to_hold_string,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>malloc)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ios.get())</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classRedlandNullPointerException" kindref="compound">RedlandNullPointerException</ref>(</highlight><highlight class="stringliteral">&quot;Writer::toString():<sp/>raptor_iostream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;RaptorIOStream,<sp/>void<sp/>*&gt;<sp/>pair(std::move(ios),<sp/>buffer_to_hold_string);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/redland/RedlandWrapper/src/RaptorIOStream.cpp"/>
  </compounddef>
</doxygen>
