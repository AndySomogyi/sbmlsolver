<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classomexmeta_1_1Subject" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::Subject</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1Subject_1ac6f8f8b58d81748ba000f05ed4f4eecb" prot="private" static="no" mutable="no">
        <type>librdf_node *</type>
        <definition>librdf_node* omexmeta::Subject::node_</definition>
        <argsstring></argsstring>
        <name>node_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="23" column="1" bodyfile="src/omexmeta/Subject.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classomexmeta_1_1Subject_1a6ea1f43fab08770a4e0b0e9679af1880" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::Subject::Subject</definition>
        <argsstring>(librdf_node *node)</argsstring>
        <name>Subject</name>
        <param>
          <type>librdf_node *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="25" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="10" bodyend="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1Subject_1a4e80ab7745a8c2cf6628e8e93a95cdac" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::Subject::Subject</definition>
        <argsstring>(LibrdfNode node)</argsstring>
        <name>Subject</name>
        <param>
          <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="28" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="14" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Subject_1ac39b07acc615dbd6f7ef57668a315708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::Subject::Subject</definition>
        <argsstring>()=default</argsstring>
        <name>Subject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Subject_1a91ea148978a5320dfba19bdb1bdbdd90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>librdf_node *</type>
        <definition>librdf_node * omexmeta::Subject::getNode</definition>
        <argsstring>() const</argsstring>
        <name>getNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="32" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Subject_1aa04b4e973bd7df44fffe588e31b8779f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Subject::setNode</definition>
        <argsstring>(librdf_node *node)</argsstring>
        <name>setNode</name>
        <param>
          <type>librdf_node *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="34" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Subject_1a1b170dceee7bf297843da5b201e06693" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::Subject::operator==</definition>
        <argsstring>(const Subject &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1Subject" kindref="compound">Subject</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="42" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Subject_1a3729c201061ff27fc50b1ae2412dab2b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::Subject::operator!=</definition>
        <argsstring>(const Subject &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1Subject" kindref="compound">Subject</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="44" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Subject_1a3aa59bfd78d3c6e138beb386d846a584" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::Subject::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="47" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Subject_1a1b4c539f6310fc0c834cc44afb275c32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::Subject::isSet</definition>
        <argsstring>() const</argsstring>
        <name>isSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="49" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Subject_1ac21da4aad49780ba33322de5b7f87756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Subject::free</definition>
        <argsstring>()</argsstring>
        <name>free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="51" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="44" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classomexmeta_1_1Subject_1a845dda888ce07265306d0eb6b46cd989" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Subject" kindref="compound">Subject</ref></type>
        <definition>Subject omexmeta::Subject::fromRawPtr</definition>
        <argsstring>(librdf_node *node)</argsstring>
        <name>fromRawPtr</name>
        <param>
          <type>librdf_node *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="36" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Subject_1a346583235b81d5bd523818de09d7359e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Subject" kindref="compound">Subject</ref></type>
        <definition>Subject omexmeta::Subject::fromUri</definition>
        <argsstring>(const std::string &amp;uri)</argsstring>
        <name>fromUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="38" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Subject_1a315d058097112f4081c4db7860346aef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Subject" kindref="compound">Subject</ref></type>
        <definition>Subject omexmeta::Subject::fromBlank</definition>
        <argsstring>(const std::string &amp;blank)</argsstring>
        <name>fromBlank</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>blank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Subject.h" line="40" column="1" bodyfile="src/omexmeta/Subject.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/omexmeta/Subject.h" line="21" column="1" bodyfile="src/omexmeta/Subject.h" bodystart="21" bodyend="53"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1Subject_1ac21da4aad49780ba33322de5b7f87756" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>free</name></member>
      <member refid="classomexmeta_1_1Subject_1a315d058097112f4081c4db7860346aef" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>fromBlank</name></member>
      <member refid="classomexmeta_1_1Subject_1a845dda888ce07265306d0eb6b46cd989" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>fromRawPtr</name></member>
      <member refid="classomexmeta_1_1Subject_1a346583235b81d5bd523818de09d7359e" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>fromUri</name></member>
      <member refid="classomexmeta_1_1Subject_1a91ea148978a5320dfba19bdb1bdbdd90" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>getNode</name></member>
      <member refid="classomexmeta_1_1Subject_1a1b4c539f6310fc0c834cc44afb275c32" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>isSet</name></member>
      <member refid="classomexmeta_1_1Subject_1ac6f8f8b58d81748ba000f05ed4f4eecb" prot="private" virt="non-virtual"><scope>omexmeta::Subject</scope><name>node_</name></member>
      <member refid="classomexmeta_1_1Subject_1a3729c201061ff27fc50b1ae2412dab2b" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>operator!=</name></member>
      <member refid="classomexmeta_1_1Subject_1a1b170dceee7bf297843da5b201e06693" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>operator==</name></member>
      <member refid="classomexmeta_1_1Subject_1aa04b4e973bd7df44fffe588e31b8779f" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>setNode</name></member>
      <member refid="classomexmeta_1_1Subject_1a3aa59bfd78d3c6e138beb386d846a584" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>str</name></member>
      <member refid="classomexmeta_1_1Subject_1a6ea1f43fab08770a4e0b0e9679af1880" prot="private" virt="non-virtual"><scope>omexmeta::Subject</scope><name>Subject</name></member>
      <member refid="classomexmeta_1_1Subject_1a4e80ab7745a8c2cf6628e8e93a95cdac" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>Subject</name></member>
      <member refid="classomexmeta_1_1Subject_1ac39b07acc615dbd6f7ef57668a315708" prot="public" virt="non-virtual"><scope>omexmeta::Subject</scope><name>Subject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
