<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classomexmeta_1_1OmexMetaUtils" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::OmexMetaUtils</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a28ab6d86e458158ac441457d74d0ebd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::OmexMetaUtils::OmexMetaUtils</definition>
        <argsstring>()=default</argsstring>
        <name>OmexMetaUtils</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="31" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1ab72b362607e6bbdd0025eefa574cd073" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::OmexMetaUtils::exists</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>exists</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="37" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a9c445a8e0cc6589b25d6fa630686c171" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int omexmeta::OmexMetaUtils::removeFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>removeFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="44" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="13" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a8e629136cb2685ed839ea3a0e88094e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::OmexMetaUtils::removeIfExists</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>removeIfExists</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="50" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a046b603d6308242b70b55de6cb72325c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::OmexMetaUtils::download</definition>
        <argsstring>(const std::string &amp;url, std::string filename)</argsstring>
        <name>download</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="55" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1aac769ce6e901f32820cd7dc3fef989fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; omexmeta::OmexMetaUtils::splitStringBy</definition>
        <argsstring>(const std::string &amp;str, char delimiter)</argsstring>
        <name>splitStringBy</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="60" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="36" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a4700231d455a5f65f7cc290d98d2b0ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaUtils::generateUniqueMetaid</definition>
        <argsstring>(librdf_model *model, const std::string &amp;metaid_base, std::vector&lt; std::string &gt; &amp;exclusions)</argsstring>
        <name>generateUniqueMetaid</name>
        <param>
          <type>librdf_model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metaid_base</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>exclusions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="68" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="59" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a6694715cf3f5dccd33d416ecc84ff375" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaUtils::prepareBaseUri</definition>
        <argsstring>(std::string str, bool absolute_path=false)</argsstring>
        <name>prepareBaseUri</name>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>absolute_path</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="83" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="102" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a0956bde073b212596d8e4b2ffc983e47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaUtils::getNamespaceFromUri</definition>
        <argsstring>(const std::string &amp;uri)</argsstring>
        <name>getNamespaceFromUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="92" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="130" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1af663724f2efb0324a64c6a57e8491c13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::OmexMetaUtils::isFormattedUri</definition>
        <argsstring>(std::string uri)</argsstring>
        <name>isFormattedUri</name>
        <param>
          <type>std::string</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="99" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a9c2b712b85f74fff9740477660f7b371" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::OmexMetaUtils::endsWith</definition>
        <argsstring>(std::string const &amp;full_string, std::string const &amp;ending)</argsstring>
        <name>endsWith</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>full_string</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>ending</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="106" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="171" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a4ec81c80bf33d232331ea9ef0b94da61" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::OmexMetaUtils::assertRegexMatchSplitByNewLine</definition>
        <argsstring>(const std::string &amp;expected_string, const std::string &amp;actual_string)</argsstring>
        <name>assertRegexMatchSplitByNewLine</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>actual_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="109" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="188" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a6ddc16d56f238ef7ff3c8ab355163ef7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::OmexMetaUtils::assertMatchByNewLine</definition>
        <argsstring>(const std::string &amp;expected_string, const std::string &amp;actual_string)</argsstring>
        <name>assertMatchByNewLine</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>actual_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="111" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="210" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a744a0575136f1cc60b76a6560a5595e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; omexmeta::OmexMetaUtils::configurePrefixStrings</definition>
        <argsstring>(std::string repository_name, std::string omex_name, std::string model_name)</argsstring>
        <name>configurePrefixStrings</name>
        <param>
          <type>std::string</type>
          <declname>repository_name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>omex_name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>model_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="121" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="227" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1ae645af49ce57dac8bd0e0eba9e39a6c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaUtils::concatMetaIdAndUri</definition>
        <argsstring>(std::string metaid, std::string uri)</argsstring>
        <name>concatMetaIdAndUri</name>
        <param>
          <type>std::string</type>
          <declname>metaid</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="130" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="272" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1aca2230ca99338b9dc0fc7d296b0c553b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaUtils::stringReplace</definition>
        <argsstring>(std::string str, const std::string &amp;string_to_replace, const std::string &amp;replacement)</argsstring>
        <name>stringReplace</name>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>string_to_replace</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="137" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="299" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a66d58e0ebcbee1857b23ead70c87de7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::OmexMetaUtils::startsWith</definition>
        <argsstring>(const std::string &amp;full_string, const std::string &amp;start)</argsstring>
        <name>startsWith</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>full_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="142" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a6f8e406b8798bd2f1f0ae0d1bd07ed2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::OmexMetaUtils::stringInVector</definition>
        <argsstring>(std::vector&lt; std::string &gt; vec, const std::string &amp;string)</argsstring>
        <name>stringInVector</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="147" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="312" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a718710d8ba7fc7598bd73a5456b3d903" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>xmlDoc *</type>
        <definition>xmlDoc * omexmeta::OmexMetaUtils::parseXmlDocument</definition>
        <argsstring>(const std::string &amp;xml_string)</argsstring>
        <name>parseXmlDocument</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="149" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="320" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a29cc8222c809162eadbc424a0687cbf3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaUtils::getXmlNodeProperty</definition>
        <argsstring>(xmlNode *node, const std::string &amp;property)</argsstring>
        <name>getXmlNodeProperty</name>
        <param>
          <type>xmlNode *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="151" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="329" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a1dbcd874b2b72531e7f4f9e82524d8e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>xmlNode *</type>
        <definition>xmlNode * omexmeta::OmexMetaUtils::getChildElementCalled</definition>
        <argsstring>(xmlNode *node, const std::string &amp;name)</argsstring>
        <name>getChildElementCalled</name>
        <param>
          <type>xmlNode *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="153" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="343" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a4d6f7d2140c42435be9339edf975b949" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; xmlNode * &gt;</type>
        <definition>std::vector&lt; xmlNode * &gt; omexmeta::OmexMetaUtils::getAllChildElements</definition>
        <argsstring>(xmlNode *node)</argsstring>
        <name>getAllChildElements</name>
        <param>
          <type>xmlNode *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="155" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="355" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaUtils_1a96e93667c8799b9569cb30fc102b129b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::OmexMetaUtils::isSubString</definition>
        <argsstring>(const std::string &amp;full_string, const std::string &amp;substring)</argsstring>
        <name>isSubString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>full_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>substring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/OmexMetaUtils.h" line="157" column="1" bodyfile="src/omexmeta/OmexMetaUtils.cpp" bodystart="52" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/omexmeta/OmexMetaUtils.h" line="29" column="1" bodyfile="src/omexmeta/OmexMetaUtils.h" bodystart="29" bodyend="158"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a6ddc16d56f238ef7ff3c8ab355163ef7" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>assertMatchByNewLine</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a4ec81c80bf33d232331ea9ef0b94da61" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>assertRegexMatchSplitByNewLine</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1ae645af49ce57dac8bd0e0eba9e39a6c0" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>concatMetaIdAndUri</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a744a0575136f1cc60b76a6560a5595e9" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>configurePrefixStrings</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a046b603d6308242b70b55de6cb72325c" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>download</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a9c2b712b85f74fff9740477660f7b371" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>endsWith</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1ab72b362607e6bbdd0025eefa574cd073" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>exists</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a4700231d455a5f65f7cc290d98d2b0ec" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>generateUniqueMetaid</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a4d6f7d2140c42435be9339edf975b949" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>getAllChildElements</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a1dbcd874b2b72531e7f4f9e82524d8e8" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>getChildElementCalled</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a0956bde073b212596d8e4b2ffc983e47" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>getNamespaceFromUri</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a29cc8222c809162eadbc424a0687cbf3" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>getXmlNodeProperty</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1af663724f2efb0324a64c6a57e8491c13" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>isFormattedUri</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a96e93667c8799b9569cb30fc102b129b" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>isSubString</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a28ab6d86e458158ac441457d74d0ebd7" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>OmexMetaUtils</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a718710d8ba7fc7598bd73a5456b3d903" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>parseXmlDocument</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a6694715cf3f5dccd33d416ecc84ff375" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>prepareBaseUri</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a9c445a8e0cc6589b25d6fa630686c171" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>removeFile</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a8e629136cb2685ed839ea3a0e88094e6" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>removeIfExists</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1aac769ce6e901f32820cd7dc3fef989fa" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>splitStringBy</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a66d58e0ebcbee1857b23ead70c87de7f" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>startsWith</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1a6f8e406b8798bd2f1f0ae0d1bd07ed2b" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>stringInVector</name></member>
      <member refid="classomexmeta_1_1OmexMetaUtils_1aca2230ca99338b9dc0fc7d296b0c553b" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaUtils</scope><name>stringReplace</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
