<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classomexmeta_1_1PersonalInformation" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::PersonalInformation</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1PersonalInformation_1aa7926298a95c2e0418e360afaa9036d7" prot="private" static="no" mutable="no">
        <type>librdf_model *</type>
        <definition>librdf_model* omexmeta::PersonalInformation::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="31" column="1" bodyfile="src/omexmeta/PersonalInformation.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1PersonalInformation_1ac4708b8e04dba32b67bc67a68f7c7fc7" prot="private" static="no" mutable="no">
        <type><ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref></type>
        <definition>Triples omexmeta::PersonalInformation::triples_</definition>
        <argsstring></argsstring>
        <name>triples_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="32" column="1" bodyfile="src/omexmeta/PersonalInformation.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1PersonalInformation_1afdae43f2e4f56f8b4320cdc1fa0f6a06" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::PersonalInformation::local_uri_</definition>
        <argsstring></argsstring>
        <name>local_uri_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="33" column="1" bodyfile="src/omexmeta/PersonalInformation.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1PersonalInformation_1a01f5b7a1789bbcfda5cb51a041799438" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::PersonalInformation::metaid_</definition>
        <argsstring></argsstring>
        <name>metaid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="34" column="1" bodyfile="src/omexmeta/PersonalInformation.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1PersonalInformation_1aa4dcccf20c51c9e4e3f120e95de76963" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::PersonalInformation::model_uri_</definition>
        <argsstring></argsstring>
        <name>model_uri_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="35" column="1" bodyfile="src/omexmeta/PersonalInformation.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1ad8ac47e95eff79132873a743d4884034" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::PersonalInformation::generateMetaId</definition>
        <argsstring>() const</argsstring>
        <name>generateMetaId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="38" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="54" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a9c705b23c9935cbf827e2c11a8bd266b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PersonalInformation::createSubject</definition>
        <argsstring>()</argsstring>
        <name>createSubject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="40" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="165" bodyend="176"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a3f829abf201987bf79892862e92877ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PersonalInformation::PersonalInformation</definition>
        <argsstring>()=default</argsstring>
        <name>PersonalInformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1ad06c48c239cf4e2c62b44c9b97fde011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PersonalInformation::~PersonalInformation</definition>
        <argsstring>()</argsstring>
        <name>~PersonalInformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="45" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a7494a26893d42e33953dee18bc6db4e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PersonalInformation::PersonalInformation</definition>
        <argsstring>(librdf_model *model, std::string model_uri, std::string local_uri)</argsstring>
        <name>PersonalInformation</name>
        <param>
          <type>librdf_model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>model_uri</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>local_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="47" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="10" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a75cedb2a97efb996852b4e7cd39d6440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PersonalInformation::PersonalInformation</definition>
        <argsstring>(const PersonalInformation &amp;information)=delete</argsstring>
        <name>PersonalInformation</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a6653d6c5751154f5f33562d9879d6727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PersonalInformation::PersonalInformation</definition>
        <argsstring>(PersonalInformation &amp;&amp;information) noexcept</argsstring>
        <name>PersonalInformation</name>
        <param>
          <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;&amp;</type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="57" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="23" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a11a759dd5f065ba6a48f0bc3b4c48438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation&amp; omexmeta::PersonalInformation::operator=</definition>
        <argsstring>(const PersonalInformation &amp;information)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a048a3377b27d4b87681e4f8c24dd8c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::operator=</definition>
        <argsstring>(PersonalInformation &amp;&amp;information) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;&amp;</type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="67" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="34" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1aef8b8cfd83f8247b487d58f887c93e54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PersonalInformation::getLocalUri</definition>
        <argsstring>() const</argsstring>
        <name>getLocalUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="69" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1ab7d25a7a99ae29ef8cbb004343b9b540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PersonalInformation::setLocalUri</definition>
        <argsstring>(const std::string &amp;localUri)</argsstring>
        <name>setLocalUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>localUri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="71" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="161" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a84ce9ae11ad2ed4a01fe1b5b84707146" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::PersonalInformation::operator==</definition>
        <argsstring>(const PersonalInformation &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="73" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1abb71bc363efd7466c71733709aa50394" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::PersonalInformation::operator!=</definition>
        <argsstring>(const PersonalInformation &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="75" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1af37c1c7065dd9edbb89e90e8b37f35e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addCreator</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>addCreator</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="77" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a14d941856c6a188a964fb4a0c5475885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addName</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>addName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="81" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1aab4c7522fba200d4776d59c32085371d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addMbox</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>addMbox</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="83" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a9fd33e3189e1f77725e54dd24cc9dcb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addAccountName</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>addAccountName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="85" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a344fc47bde65f8c0ea75409160fdfe00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addAccountServiceHomepage</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>addAccountServiceHomepage</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="87" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1af26bf72dc840b9c45fa7494f7164c04d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addFoafBlank</definition>
        <argsstring>(const std::string &amp;predicate, const std::string &amp;blank_value)</argsstring>
        <name>addFoafBlank</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>blank_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="89" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a1df32d40f46d98767fc360015bf0f3ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addDC</definition>
        <argsstring>(const std::string &amp;predicate, const LibrdfNode &amp;value_node)</argsstring>
        <name>addDC</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;</type>
          <declname>value_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="91" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="70" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a1458c6e092a9436a956ffd6a92c71d16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addDCBlank</definition>
        <argsstring>(const std::string &amp;predicate, const std::string &amp;blank_value)</argsstring>
        <name>addDCBlank</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>blank_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="93" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a1c605320ec0f12dda246cc3abdb0aeae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addDCUri</definition>
        <argsstring>(const std::string &amp;predicate, const std::string &amp;uri_value)</argsstring>
        <name>addDCUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="95" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a843d2eddcdb33fc49d7de5059f5fa04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addDCLiteral</definition>
        <argsstring>(const std::string &amp;predicate, const std::string &amp;literal_value)</argsstring>
        <name>addDCLiteral</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>literal_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="97" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a7d760a327fe103386f1bb08063f8795a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addFoafUri</definition>
        <argsstring>(const std::string &amp;predicate, const std::string &amp;uri_value)</argsstring>
        <name>addFoafUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="99" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="86" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1ae6fbd4fad2a738fae9fce7affa6b2f15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addFoafLiteral</definition>
        <argsstring>(const std::string &amp;predicate, const std::string &amp;literal_value)</argsstring>
        <name>addFoafLiteral</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>literal_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="101" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a99198226df0c8acfdd7bc30ff7c4bf8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> &amp;</type>
        <definition>PersonalInformation &amp; omexmeta::PersonalInformation::addFoaf</definition>
        <argsstring>(const std::string &amp;predicate, const LibrdfNode &amp;value_node)</argsstring>
        <name>addFoaf</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;</type>
          <declname>value_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="103" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="61" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1ae00bfe55d51745ac11f37986443feb28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PersonalInformation::getMetaid</definition>
        <argsstring>() const</argsstring>
        <name>getMetaid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="105" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a2bf7f31511c545eb0158643645115b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PersonalInformation::setMetaid</definition>
        <argsstring>(const std::string &amp;metaid)</argsstring>
        <name>setMetaid</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>metaid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="107" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a6b2ce3a6c724b67afe3d0c2df00bb484" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PersonalInformation::getModelUri</definition>
        <argsstring>() const</argsstring>
        <name>getModelUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="109" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1afc5f378fc98d02112a9a569f4388552e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PersonalInformation::setModelUri</definition>
        <argsstring>(const std::string &amp;modelUri)</argsstring>
        <name>setModelUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>modelUri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="111" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1aecc5783753b41ed88a49c5b3bce82ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref></type>
        <definition>Triples omexmeta::PersonalInformation::getTriples</definition>
        <argsstring>()</argsstring>
        <name>getTriples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="113" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1aea3a34c765f176a3d6f6b88a6b8c8369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PersonalInformation::freeTriples</definition>
        <argsstring>()</argsstring>
        <name>freeTriples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="115" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PersonalInformation_1a25a1e9ba56dda2459cb1bbbe61cc4346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PersonalInformation::setTriples</definition>
        <argsstring>(Triples triples)</argsstring>
        <name>setTriples</name>
        <param>
          <type><ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref></type>
          <declname>triples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PersonalInformation.h" line="117" column="1" bodyfile="src/omexmeta/PersonalInformation.cpp" bodystart="143" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/omexmeta/PersonalInformation.h" line="29" column="1" bodyfile="src/omexmeta/PersonalInformation.h" bodystart="29" bodyend="118"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1PersonalInformation_1a9fd33e3189e1f77725e54dd24cc9dcb7" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addAccountName</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a344fc47bde65f8c0ea75409160fdfe00" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addAccountServiceHomepage</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1af37c1c7065dd9edbb89e90e8b37f35e8" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addCreator</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a1df32d40f46d98767fc360015bf0f3ed" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addDC</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a1458c6e092a9436a956ffd6a92c71d16" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addDCBlank</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a843d2eddcdb33fc49d7de5059f5fa04c" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addDCLiteral</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a1c605320ec0f12dda246cc3abdb0aeae" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addDCUri</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a99198226df0c8acfdd7bc30ff7c4bf8b" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addFoaf</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1af26bf72dc840b9c45fa7494f7164c04d" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addFoafBlank</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1ae6fbd4fad2a738fae9fce7affa6b2f15" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addFoafLiteral</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a7d760a327fe103386f1bb08063f8795a" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addFoafUri</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1aab4c7522fba200d4776d59c32085371d" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addMbox</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a14d941856c6a188a964fb4a0c5475885" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>addName</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a9c705b23c9935cbf827e2c11a8bd266b" prot="private" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>createSubject</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1aea3a34c765f176a3d6f6b88a6b8c8369" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>freeTriples</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1ad8ac47e95eff79132873a743d4884034" prot="private" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>generateMetaId</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1aef8b8cfd83f8247b487d58f887c93e54" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>getLocalUri</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1ae00bfe55d51745ac11f37986443feb28" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>getMetaid</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a6b2ce3a6c724b67afe3d0c2df00bb484" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>getModelUri</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1aecc5783753b41ed88a49c5b3bce82ba4" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>getTriples</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1afdae43f2e4f56f8b4320cdc1fa0f6a06" prot="private" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>local_uri_</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a01f5b7a1789bbcfda5cb51a041799438" prot="private" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>metaid_</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1aa7926298a95c2e0418e360afaa9036d7" prot="private" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>model_</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1aa4dcccf20c51c9e4e3f120e95de76963" prot="private" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>model_uri_</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1abb71bc363efd7466c71733709aa50394" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>operator!=</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a11a759dd5f065ba6a48f0bc3b4c48438" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>operator=</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a048a3377b27d4b87681e4f8c24dd8c4f" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>operator=</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a84ce9ae11ad2ed4a01fe1b5b84707146" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>operator==</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a3f829abf201987bf79892862e92877ec" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>PersonalInformation</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a7494a26893d42e33953dee18bc6db4e4" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>PersonalInformation</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a75cedb2a97efb996852b4e7cd39d6440" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>PersonalInformation</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a6653d6c5751154f5f33562d9879d6727" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>PersonalInformation</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1ab7d25a7a99ae29ef8cbb004343b9b540" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>setLocalUri</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a2bf7f31511c545eb0158643645115b00" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>setMetaid</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1afc5f378fc98d02112a9a569f4388552e" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>setModelUri</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1a25a1e9ba56dda2459cb1bbbe61cc4346" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>setTriples</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1ac4708b8e04dba32b67bc67a68f7c7fc7" prot="private" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>triples_</name></member>
      <member refid="classomexmeta_1_1PersonalInformation_1ad06c48c239cf4e2c62b44c9b97fde011" prot="public" virt="non-virtual"><scope>omexmeta::PersonalInformation</scope><name>~PersonalInformation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
