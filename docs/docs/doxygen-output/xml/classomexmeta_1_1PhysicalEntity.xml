<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classomexmeta_1_1PhysicalEntity" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::PhysicalEntity</compoundname>
    <basecompoundref refid="classomexmeta_1_1PhysicalPhenomenon" prot="public" virt="non-virtual">omexmeta::PhysicalPhenomenon</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1PhysicalEntity_1ac5f674248ef40f86df4a5160c2d193e3" prot="private" static="no" mutable="no">
        <type><ref refid="classomexmeta_1_1Resource" kindref="compound">Resource</ref></type>
        <definition>Resource omexmeta::PhysicalEntity::identity_resource_</definition>
        <argsstring></argsstring>
        <name>identity_resource_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="31" column="1" bodyfile="src/omexmeta/PhysicalEntity.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1PhysicalEntity_1ac8f480836499a208e2cfbe71a1492e5b" prot="private" static="no" mutable="no">
        <type>Resources</type>
        <definition>Resources omexmeta::PhysicalEntity::location_resources_</definition>
        <argsstring></argsstring>
        <name>location_resources_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="32" column="1" bodyfile="src/omexmeta/PhysicalEntity.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1PhysicalEntity_1a2567590f9b90e21e176ce6f447854faf" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::PhysicalEntity::entity_id_</definition>
        <argsstring></argsstring>
        <name>entity_id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="33" column="1" bodyfile="src/omexmeta/PhysicalEntity.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a9d29348a080c64f91ff6ec184fd45ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PhysicalEntity::PhysicalEntity</definition>
        <argsstring>()=delete</argsstring>
        <name>PhysicalEntity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a0341918665af91cacdb4481d037c42d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PhysicalEntity::PhysicalEntity</definition>
        <argsstring>(librdf_model *model, std::string model_uri, std::string local_uri, PhysicalProperty physicalProperty, Resource is, Resources is_part_of)</argsstring>
        <name>PhysicalEntity</name>
        <param>
          <type>librdf_model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>model_uri</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>local_uri</declname>
        </param>
        <param>
          <type><ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref></type>
          <declname>physicalProperty</declname>
        </param>
        <param>
          <type><ref refid="classomexmeta_1_1Resource" kindref="compound">Resource</ref></type>
          <declname>is</declname>
        </param>
        <param>
          <type>Resources</type>
          <declname>is_part_of</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="60" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1ab905eecead2704afb14285fa44899958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PhysicalEntity::~PhysicalEntity</definition>
        <argsstring>()=default</argsstring>
        <name>~PhysicalEntity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a6fd4acd7255a01322c4a53d3e84df0ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PhysicalEntity::free</definition>
        <argsstring>()</argsstring>
        <name>free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="72" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="14" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a6bbbce71778e374de7d4e5e2e674fc2b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PhysicalEntity::PhysicalEntity</definition>
        <argsstring>(librdf_model *model)</argsstring>
        <name>PhysicalEntity</name>
        <param>
          <type>librdf_model *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="84" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a5f583e60ad44bbb3dfcd11fdc6bc72cc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PhysicalEntity::PhysicalEntity</definition>
        <argsstring>(librdf_model *model, const std::string &amp;model_uri, const std::string &amp;local_uri)</argsstring>
        <name>PhysicalEntity</name>
        <param>
          <type>librdf_model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>model_uri</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>local_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="99" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a51f5df8b2e8a1d65e5aa0d10e53b77ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref></type>
        <definition>Triples omexmeta::PhysicalEntity::toTriples</definition>
        <argsstring>() override</argsstring>
        <name>toTriples</name>
        <reimplements refid="classomexmeta_1_1PhysicalPhenomenon_1a30617e685bd8b155a76d38ab5a9db273">toTriples</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="114" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="69" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1ae4b3374e9ebb817eb63f9105b491e958" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classomexmeta_1_1Resource" kindref="compound">Resource</ref> &amp;</type>
        <definition>const Resource &amp; omexmeta::PhysicalEntity::getIdentityResource</definition>
        <argsstring>() const</argsstring>
        <name>getIdentityResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="121" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a3e2fba07a4622db0180650d24bf263d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Resources &amp;</type>
        <definition>const Resources &amp; omexmeta::PhysicalEntity::getLocationResources</definition>
        <argsstring>() const</argsstring>
        <name>getLocationResources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="128" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a5d7168c527d2dbdacd612de37aa9a605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> &amp;</type>
        <definition>PhysicalEntity &amp; omexmeta::PhysicalEntity::setPhysicalProperty</definition>
        <argsstring>(std::string subject_metaid, const std::string &amp;physicalProperty)</argsstring>
        <name>setPhysicalProperty</name>
        <param>
          <type>std::string</type>
          <declname>subject_metaid</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>physicalProperty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="138" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a9bca0cb13601b6f9617df9f264968f1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> &amp;</type>
        <definition>PhysicalEntity &amp; omexmeta::PhysicalEntity::setPhysicalProperty</definition>
        <argsstring>(PhysicalProperty physicalProperty)</argsstring>
        <name>setPhysicalProperty</name>
        <param>
          <type><ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref></type>
          <declname>physicalProperty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="149" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a4d4c3ee9572b19e44e79a44f18f1ac31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> &amp;</type>
        <definition>PhysicalEntity &amp; omexmeta::PhysicalEntity::setIdentity</definition>
        <argsstring>(const std::string &amp;resource)</argsstring>
        <name>setIdentity</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="160" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a82e77be3327c537b2426b571afaa5045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> &amp;</type>
        <definition>PhysicalEntity &amp; omexmeta::PhysicalEntity::addLocation</definition>
        <argsstring>(const std::string &amp;where)</argsstring>
        <name>addLocation</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>where</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="178" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a33559c90dbe3e3be1b71898ab9a5bfa4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int omexmeta::PhysicalEntity::getNumLocations</definition>
        <argsstring>() const</argsstring>
        <name>getNumLocations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="184" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1a5f54e5c2df0fd5c3b9121e1426b23af6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::PhysicalEntity::operator==</definition>
        <argsstring>(const PhysicalEntity &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="186" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="153" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalEntity_1afee546a420f16e128ed1add9fec35b4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::PhysicalEntity::operator!=</definition>
        <argsstring>(const PhysicalEntity &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalEntity.h" line="188" column="1" bodyfile="src/omexmeta/PhysicalEntity.cpp" bodystart="160" bodyend="162"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="147">
        <label>omexmeta::PhysicalPhenomenon</label>
        <link refid="classomexmeta_1_1PhysicalPhenomenon"/>
      </node>
      <node id="146">
        <label>omexmeta::PhysicalEntity</label>
        <link refid="classomexmeta_1_1PhysicalEntity"/>
        <childnode refid="147" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="150">
        <label>omexmeta::PhysicalProperty</label>
        <link refid="classomexmeta_1_1PhysicalProperty"/>
      </node>
      <node id="149">
        <label>omexmeta::PhysicalPhenomenon</label>
        <link refid="classomexmeta_1_1PhysicalPhenomenon"/>
        <childnode refid="150" relation="usage">
          <edgelabel>physical_property_</edgelabel>
        </childnode>
      </node>
      <node id="148">
        <label>omexmeta::PhysicalEntity</label>
        <link refid="classomexmeta_1_1PhysicalEntity"/>
        <childnode refid="149" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/omexmeta/PhysicalEntity.h" line="29" column="1" bodyfile="src/omexmeta/PhysicalEntity.h" bodystart="29" bodyend="191"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1PhysicalEntity_1a82e77be3327c537b2426b571afaa5045" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>addLocation</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a2567590f9b90e21e176ce6f447854faf" prot="private" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>entity_id_</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a6fd4acd7255a01322c4a53d3e84df0ba" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>free</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1afe71a5c6399b992922eb6eeda6de49bd" prot="protected" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>generateMetaId</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a8be912d1256d6b913c4965f96f1b730b" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>getAbout</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1ae4b3374e9ebb817eb63f9105b491e958" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>getIdentityResource</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a2d59ebbc920a40348d102af31ed6661a" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>getLocalUri</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a3e2fba07a4622db0180650d24bf263d9" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>getLocationResources</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a5528b12e5dbc702c0c270328662e7031" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>getModelUri</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a54d90cf6db78e98bd091f478dc5bd74a" prot="protected" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>getNewMetaidExclusionList</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a33559c90dbe3e3be1b71898ab9a5bfa4" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>getNumLocations</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1ac741cab1f6df58b0de484fc1771ef839" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>getPhysicalProperty</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1aca53e0f8ce8139a919f48372b254a5d0" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>getPhysicalPropertyId</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1ae99e667cbceff2da0c4c0f5c64a8ba8f" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>getSubjectStr</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a9676a1dcc458247a19d19cda16d640f4" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>getType</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1ac5f674248ef40f86df4a5160c2d193e3" prot="private" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>identity_resource_</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a114864dfae1f79ce4e3f430b7711516c" prot="protected" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>local_uri_</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1ac8f480836499a208e2cfbe71a1492e5b" prot="private" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>location_resources_</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a9de43fc3fd94d3463c7fb9b8f684e78b" prot="protected" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>model_</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a696cbc4f6490dd55d6bd41c7711cd0ec" prot="protected" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>model_uri_</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a710756d611350395539dfa9f7fbf764e" prot="protected" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>new_metaid_exclusion_list_</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1afee546a420f16e128ed1add9fec35b4f" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>operator!=</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a2c726263714e31c7c19d6e73c2c593f8" prot="public" virt="non-virtual" ambiguityscope="omexmeta::PhysicalPhenomenon::"><scope>omexmeta::PhysicalEntity</scope><name>operator!=</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1aac3920bfe9bf16e071ebdd8ed4fabe2f" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>operator=</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1af15355b4c2a361b4b02dca02d3877aed" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>operator=</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a5f54e5c2df0fd5c3b9121e1426b23af6" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>operator==</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a1c3322453b3c6831668ffa98d9f4b6af" prot="public" virt="non-virtual" ambiguityscope="omexmeta::PhysicalPhenomenon::"><scope>omexmeta::PhysicalEntity</scope><name>operator==</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a9e17807d60d9e3f797d6c02ef85cdfc6" prot="protected" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>physical_property_</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a9d29348a080c64f91ff6ec184fd45ece" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>PhysicalEntity</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a0341918665af91cacdb4481d037c42d2" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>PhysicalEntity</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a6bbbce71778e374de7d4e5e2e674fc2b" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>PhysicalEntity</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a5f583e60ad44bbb3dfcd11fdc6bc72cc" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>PhysicalEntity</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1af5416111e5358d3582ff598ad51d62a9" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>PhysicalPhenomenon</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1ad823dad75504adb78975c810e5f1ff94" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>PhysicalPhenomenon</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1aeb95aedf1756ded154ec6753108a691e" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>PhysicalPhenomenon</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1aa140516da97b03960175f9bc04ecf865" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>PhysicalPhenomenon</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a5c831ca76c36121b0fbc7b122b5539ac" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>PhysicalPhenomenon</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a93bf263f7fdb65bd3e8de97983a7186b" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>PhysicalPhenomenon</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a0a9c54b0c4bfad62b618766474dc70f8" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>setAbout</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a4d4c3ee9572b19e44e79a44f18f1ac31" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>setIdentity</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a84cae9aa96ca00df45b0f81dd8d3ffd4" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>setLocalUri</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1aa1fd9929fb2e07fa20081b1a4c00c9d2" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>setModelUri</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a5d7168c527d2dbdacd612de37aa9a605" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>setPhysicalProperty</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a9bca0cb13601b6f9617df9f264968f1f" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>setPhysicalProperty</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1afad41dbf096b22ab9b64441cb25e9db9" prot="public" virt="non-virtual" ambiguityscope="omexmeta::PhysicalPhenomenon::"><scope>omexmeta::PhysicalEntity</scope><name>setPhysicalProperty</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a715b76003eba8e5808fe44a768199fab" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>setPhysicalPropertyId</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a4c27a0b0e430df95b3cffaf268973eec" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>setType</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1a51f5df8b2e8a1d65e5aa0d10e53b77ba" prot="public" virt="virtual"><scope>omexmeta::PhysicalEntity</scope><name>toTriples</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a74e88adb2099099e411b55cb9aa460a0" prot="protected" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>type_</name></member>
      <member refid="classomexmeta_1_1PhysicalEntity_1ab905eecead2704afb14285fa44899958" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>~PhysicalEntity</name></member>
      <member refid="classomexmeta_1_1PhysicalPhenomenon_1a215daebc00eed1cf7d9eddeaed0d1603" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalEntity</scope><name>~PhysicalPhenomenon</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
