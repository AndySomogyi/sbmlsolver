@startuml

package libsbml {
    class SBMLVisitor
}

class AssignmentRuleEvaluator;

SBMLVisitor <|-- AssignmentRuleEvaluator

class ASTNodeCodeGen

note left of ASTNodeCodeGen {
    Handles LLVM IR
    code generation
}

class ASTNodeFactory

package llvm {
    class Value
}
abstract class CodeGenBase <<template>> {
    codeGen() : Value
}

Value *-- CodeGenBase

class EvalConversionFactorCodeGen <<this>>
class EvalInitialConditionsCodeGen <<this>>
class EvalRateRuleRatesCodeGen <<this>>
class EvalReactionRatesCodeGen <<this>>
class EvalVolatileStoichCodeGen <<this>>
class EventAssignCodeGen <<this>>
class EventCodeGenBase <<this>>
class EventTriggerCodeGen <<this>>
class GetEventValueCodeGenBase <<this>>
class GetInitialValueCodeGenBase <<this>>
class GetValueCodeGenBase <<this>>

CodeGenBase <|-- EvalConversionFactorCodeGen
CodeGenBase <|-- EvalInitialConditionsCodeGen
CodeGenBase <|-- EvalRateRuleRatesCodeGen
CodeGenBase <|-- EvalReactionRatesCodeGen
CodeGenBase <|-- EvalVolatileStoichCodeGen
CodeGenBase <|-- EventAssignCodeGen
CodeGenBase <|-- EventCodeGenBase
CodeGenBase <|-- EventTriggerCodeGen
CodeGenBase <|-- GetEventValueCodeGenBase
CodeGenBase <|-- GetInitialValueCodeGenBase
CodeGenBase <|-- GetValueCodeGenBase

class GetFloatingSpeciesInitConcentrationCodeGen <<this,bool>>
class GetFloatingSpeciesInitAmountCodeGen <<this,bool>>
class GetCompartmentInitVolumeCodeGen <<this,bool>>
class GetGlobalParameterInitValueCodeGen <<this,bool>>

GetInitialValueCodeGenBase <|-- GetFloatingSpeciesInitConcentrationCodeGen
GetInitialValueCodeGenBase <|-- GetFloatingSpeciesInitAmountCodeGen
GetInitialValueCodeGenBase <|-- GetCompartmentInitVolumeCodeGen
GetInitialValueCodeGenBase <|-- GetGlobalParameterInitValueCodeGen

class GetBoundarySpeciesAmountCodeGen
class GetFloatingSpeciesAmountCodeGen
class GetBoundarySpeciesConcentrationCodeGen
class GetFloatingSpeciesConcentrationCodeGen
class GetCompartmentVolumeCodeGen
class GetGlobalParameterCodeGen

GetValueCodeGenBase <|-- GetBoundarySpeciesAmountCodeGen
GetValueCodeGenBase <|-- GetFloatingSpeciesAmountCodeGen
GetValueCodeGenBase <|-- GetBoundarySpeciesConcentrationCodeGen
GetValueCodeGenBase <|-- GetFloatingSpeciesConcentrationCodeGen
GetValueCodeGenBase <|-- GetCompartmentVolumeCodeGen
GetValueCodeGenBase <|-- GetGlobalParameterCodeGen

class SetInitialValueCodeGenBase <<template>>

CodeGenBase <|-- SetInitialValueCodeGenBase

class SetFloatingSpeciesInitConcentrationCodeGen
class SetFloatingSpeciesInitAmountCodeGen
class SetCompartmentInitVolumeCodeGen
class SetGlobalParameterInitValueCodeGen
class SetBoundarySpeciesAmountCodeGen
class SetFloatingSpeciesAmountCodeGen
class SetBoundarySpeciesConcentrationCodeGen
class SetFloatingSpeciesConcentrationCodeGen
class SetCompartmentVolumeCodeGen
class SetGlobalParameterCodeGen

SetInitialValueCodeGenBase <|-- SetFloatingSpeciesInitConcentrationCodeGen
SetInitialValueCodeGenBase <|-- SetFloatingSpeciesInitAmountCodeGen
SetInitialValueCodeGenBase <|-- SetCompartmentInitVolumeCodeGen
SetInitialValueCodeGenBase <|-- SetGlobalParameterInitValueCodeGen
SetInitialValueCodeGenBase <|-- SetBoundarySpeciesAmountCodeGen
SetInitialValueCodeGenBase <|-- SetFloatingSpeciesAmountCodeGen
SetInitialValueCodeGenBase <|-- SetBoundarySpeciesConcentrationCodeGen
SetInitialValueCodeGenBase <|-- SetFloatingSpeciesConcentrationCodeGen
SetInitialValueCodeGenBase <|-- SetCompartmentVolumeCodeGen
SetInitialValueCodeGenBase <|-- SetGlobalParameterCodeGen
package llvm {
    class Function
}

class ModelGeneratorContext

class Event

class EventQueue


class LoadSymbolResolver
class StoreSymbolResolver
class FunctionResolver
class KineticLawParameterResolver

LoadSymbolResolver <|-- FunctionResolver
LoadSymbolResolver <|-- KineticLawParameterResolver

class LLVMCompiler

package rr{
    class Compiler
}

Compiler <|-- LLVMCompiler

package std {
    class runtime_error
}

class LLVMException

runtime_error <|-- LLVMException

package rr {
    class ExecutableModel
}

class LLVMExecutableModel

ExecutableModel <|-- LLVMExecutableModel

class LLVMModelData

LLVMExecutableModel *-- LLVMModelData

enum ModelDataFields
enum EventAttributes

class LLVMModelDataSymbols

note right of LLVMModelDataSymbols {
    Big class, lots of content
    need to understand what it does.
}

class LLVMModelGenerator

class LLVMModelSymbols

SBMLVisitor <|-- LLVMModelSymbols




class ModelDataIRBuilder

class LoadSymbolResolverBase
class ModelDataLoadSymbolResolver
class ModelInitialValueSymbolResolver
class SBMLInitialValueSymbolResolver

LoadSymbolResolver <|-- LoadSymbolResolverBase
LoadSymbolResolverBase <|-- ModelDataLoadSymbolResolver
LoadSymbolResolverBase <|-- SBMLInitialValueSymbolResolver

class ModelResources

note left of ModelResources {
    Central object that
    collects CodeGen's
}

class Random

class SymbolForest




















@enduml