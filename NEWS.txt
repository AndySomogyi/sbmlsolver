-- Version 1.2.0

*   Enabled mutable initial conditions when conserved moities are used, implemented Jacobian 
    calculation when conserved moieties are used. 

*   Fixed memory leaks related to how CVODE is used. With the mem leaks fixed, we leak a total of 16
    bytes ONCE, in a 3rd party library  in the beginning for running the entire test suite. 

*   Fixed bugs with stiff solver not being selected

*   New getValue / setValue methods on SimulationOptions to set arbitrary settings, will be used by
    future integrators. 

*   Prototype Gillespie stochastic integrator

*   Added missing init amount method to python API

*   Clean up IL code generation

*   Structured result disabled by default

*   New parameters in simulate and plot methods (Herbert has these, waiting on feedback), 
    simulate now accepts all SimulateOptions field names as keywords and has plot option,
    i.e. simulate(plot=True)

*   Raise exception on invalid selection strings

*   Removed pointless bool return value on exception raising methods.

*   All instance variables in public classes moved to private internal struct -- result is that we
    can now add and remove instance variables and never break binary compatibility. Relevant to C++ 
    users.

*   Future versions may accept more complex types for configuration settings, API is set up so we
    never break binary compatibility as we add new features like this.

*   Continuous documentation updates and enhancements.


-- Version 1.1.0

*   Config system. RoadRunner can now read and write most default configuration parameters 
    from / to a config file

*   fixed memory leak in moiety conservation converter

*   new colored logging

*   Can read SBML files through HTTP on all platforms. The RoadRunner constructor 
    or load methods are smart in that accept a string which can be either:
    a: the contents of a SBML document
    b: a local file path, i.e. /home/andy/feedback.xml
    c: a full URI identifier that can be either a local file or a remote file, 
       this can even be a BioModels identifier, i.e. 
       r=roadrunner.RoadRunner("http://www.ebi.ac.uk/biomodels-main/download?mid=BIOMD0000000275")

*   upgraded to standard Poco 1.5 distribution. RoadRunner's Poco is now linked 
    directly to the official Poco git repository. 

*   lots of integrator tuning parameters are now accessible via the SimulateOptions object. 

*   Can run the integrator in new MULTI_STEP mode where the integrator determines 
    time step size. 

*   New SBML events -- users can register listeners for any SBML event. Whenever a 
    SBML event is triggered or assigned, the user can be notified. 

*   New integrator events -- users can register listeners for integrator events 
    such as when a time step completes or an event was detected. 

*   Significantly improved integrator error handling. Whenever CVODE encounters any
    error such as numeric instability, the error is written directly to the Roadrunner
    logging system with exact details about the error. Descriptive exceptions are 
    now raised detailing the exact source of the error. 

*   cleanup of integrator code. 

*   new distutils based python installation system. We now provide binaries for 
    32/64 bit Linux (Intel), 64 bit Mac OSX and 32 bit Windows. 



-- Version 1.0.1
*   Fixed bug where nested SBML functions were not handled properly. Now
    it correctly reports when SBML functions are called with invalid 
    number of args. 

*   Fixed bug where where a log trace message incorrectly created. 

*   Display version info correctly in the command line rr program. 

*   Cache selection types and indices in model.getValue / setValue, 
    significant improvement in SBML symbol access times. 

*   Fixed memory leaks in Python API, performance improvements in 
    selections. 

*   New RoadRunner constructor which takes a URI and load options. 

*   Plugins moved to Tellurium project.

*   Added getStateVectorRate and getStateVectorIds to ExecutableModel interface,
    readily allows roadrunner to be used with external integrators.

*   SBML variable access performance improvements. 

-- Version 1.0.0
*   Initial release
